
;; Function std::_Ios_Fmtflags std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags) (_ZStanSt13_Ios_FmtflagsS_, funcdef_no=670, decl_uid=13153, symbol_order=151)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best AREG, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a2(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a3(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a4(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 18(l0): point = 0
   Insn 17(l0): point = 2
   Insn 13(l0): point = 4
   Insn 10(l0): point = 6
   Insn 9(l0): point = 8
   Insn 8(l0): point = 10
   Insn 7(l0): point = 12
   Insn 3(l0): point = 14
   Insn 2(l0): point = 16
 a0(r87): [3..4]
 a1(r86): [5..6]
 a2(r85): [7..8]
 a3(r84): [9..10]
 a4(r83): [9..12]
Compressing live ranges: from 19 to 8 - 42%
Ranges after the compression:
 a0(r87): [0..1]
 a1(r86): [2..3]
 a2(r85): [4..5]
 a3(r84): [6..7]
 a4(r83): [6..7]
  regions=1, blocks=3, points=8
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    4:r83  l0     1    3:r84  l0     0    2:r85  l0     0    1:r86  l0     0
    0:r87  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::_Ios_Fmtflags std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 17[flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={1d} r20={1d,6u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} 
;;    total ref usage 46{26d,20u,0e} in 9{9 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 17 [flags] 83 84 85 86 87
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 __a+0 S4 A32])
        (reg:SI 5 di [ __a ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:76 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ __a ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __b+0 S4 A32])
        (reg:SI 4 si [ __b ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:76 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ __b ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 83 [ D.44993 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 __a+0 S4 A32])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:76 90 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 84 [ D.44993 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __b+0 S4 A32])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:76 90 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:SI 85 [ D.44993 ])
                (and:SI (reg:SI 83 [ D.44993 ])
                    (reg:SI 84 [ D.44993 ])))
            (clobber (reg:CC 17 flags))
        ]) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:76 370 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 84 [ D.44993 ])
        (expr_list:REG_DEAD (reg:SI 83 [ D.44993 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 10 9 13 2 (set (reg:SI 86 [ D.44994 ])
        (reg:SI 85 [ D.44993 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:76 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 85 [ D.44993 ])
        (nil)))
(insn 13 10 17 2 (set (reg:SI 87 [ <retval> ])
        (reg:SI 86 [ D.44994 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:76 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ D.44994 ])
        (nil)))
(insn 17 13 18 2 (set (reg/i:SI 0 ax)
        (reg:SI 87 [ <retval> ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:76 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ <retval> ])
        (nil)))
(insn 18 17 0 2 (use (reg/i:SI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:76 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::_Ios_Fmtflags std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags) (_ZStorSt13_Ios_FmtflagsS_, funcdef_no=671, decl_uid=13157, symbol_order=152)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best AREG, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a2(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a3(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a4(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 18(l0): point = 0
   Insn 17(l0): point = 2
   Insn 13(l0): point = 4
   Insn 10(l0): point = 6
   Insn 9(l0): point = 8
   Insn 8(l0): point = 10
   Insn 7(l0): point = 12
   Insn 3(l0): point = 14
   Insn 2(l0): point = 16
 a0(r87): [3..4]
 a1(r86): [5..6]
 a2(r85): [7..8]
 a3(r84): [9..10]
 a4(r83): [9..12]
Compressing live ranges: from 19 to 8 - 42%
Ranges after the compression:
 a0(r87): [0..1]
 a1(r86): [2..3]
 a2(r85): [4..5]
 a3(r84): [6..7]
 a4(r83): [6..7]
  regions=1, blocks=3, points=8
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    4:r83  l0     1    3:r84  l0     0    2:r85  l0     0    1:r86  l0     0
    0:r87  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::_Ios_Fmtflags std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 17[flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={1d} r20={1d,6u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} 
;;    total ref usage 46{26d,20u,0e} in 9{9 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 17 [flags] 83 84 85 86 87
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 __a+0 S4 A32])
        (reg:SI 5 di [ __a ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:80 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ __a ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __b+0 S4 A32])
        (reg:SI 4 si [ __b ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:80 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ __b ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 83 [ D.44995 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 __a+0 S4 A32])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:80 90 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 84 [ D.44995 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __b+0 S4 A32])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:80 90 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:SI 85 [ D.44995 ])
                (ior:SI (reg:SI 83 [ D.44995 ])
                    (reg:SI 84 [ D.44995 ])))
            (clobber (reg:CC 17 flags))
        ]) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:80 388 {*iorsi_1}
     (expr_list:REG_DEAD (reg:SI 84 [ D.44995 ])
        (expr_list:REG_DEAD (reg:SI 83 [ D.44995 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 10 9 13 2 (set (reg:SI 86 [ D.44996 ])
        (reg:SI 85 [ D.44995 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:80 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 85 [ D.44995 ])
        (nil)))
(insn 13 10 17 2 (set (reg:SI 87 [ <retval> ])
        (reg:SI 86 [ D.44996 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:80 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ D.44996 ])
        (nil)))
(insn 17 13 18 2 (set (reg/i:SI 0 ax)
        (reg:SI 87 [ <retval> ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:80 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ <retval> ])
        (nil)))
(insn 18 17 0 2 (use (reg/i:SI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:80 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::_Ios_Fmtflags std::operator~(std::_Ios_Fmtflags) (_ZStcoSt13_Ios_Fmtflags, funcdef_no=673, decl_uid=13164, symbol_order=154)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a2(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 15(l0): point = 0
   Insn 14(l0): point = 2
   Insn 10(l0): point = 4
   Insn 7(l0): point = 6
   Insn 6(l0): point = 8
   Insn 2(l0): point = 10
 a0(r84): [3..4]
 a1(r83): [5..6]
 a2(r85): [7..8]
Compressing live ranges: from 13 to 6 - 46%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
 a2(r85): [4..5]
  regions=1, blocks=3, points=6
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r83  l0     0    0:r84  l0     0    2:r85  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::_Ios_Fmtflags std::operator~(std::_Ios_Fmtflags)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u,1e} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} 
;;    total ref usage 39{23d,15u,1e} in 6{6 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 83 84 85
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 __a+0 S4 A32])
        (reg:SI 5 di [ __a ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:88 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ __a ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 85)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 __a+0 S4 A32])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:88 90 {*movsi_internal}
     (nil))
(insn 7 6 10 2 (set (reg:SI 83 [ D.44997 ])
        (not:SI (reg:SI 85))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:88 478 {*one_cmplsi2_1}
     (expr_list:REG_DEAD (reg:SI 85)
        (expr_list:REG_EQUAL (not:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 __a+0 S4 A32]))
            (nil))))
(insn 10 7 14 2 (set (reg:SI 84 [ <retval> ])
        (reg:SI 83 [ D.44997 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:88 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ D.44997 ])
        (nil)))
(insn 14 10 15 2 (set (reg/i:SI 0 ax)
        (reg:SI 84 [ <retval> ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:88 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ <retval> ])
        (nil)))
(insn 15 14 0 2 (use (reg/i:SI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:88 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function const std::_Ios_Fmtflags& std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) (_ZStoRRSt13_Ios_FmtflagsS_, funcdef_no=674, decl_uid=13168, symbol_order=155)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r88,l0) best SIREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r86,l0) best AREG, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r83,l0) best DIREG, allocno GENERAL_REGS

  a0(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a3(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a4(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a5(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a6(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8

   Insn 24(l0): point = 0
   Insn 23(l0): point = 2
   Insn 19(l0): point = 4
   Insn 16(l0): point = 6
   Insn 15(l0): point = 8
   Insn 14(l0): point = 10
   Insn 13(l0): point = 12
   Insn 12(l0): point = 14
   Insn 11(l0): point = 16
   Insn 10(l0): point = 18
   Insn 9(l0): point = 20
   Insn 8(l0): point = 22
   Insn 7(l0): point = 24
   Insn 3(l0): point = 26
   Insn 2(l0): point = 28
 a0(r86): [3..4]
 a1(r85): [5..6]
 a2(r89): [9..10]
 a3(r84): [9..12]
 a4(r83): [17..22]
 a5(r88): [19..20]
 a6(r87): [23..24]
Compressing live ranges: from 31 to 10 - 32%
Ranges after the compression:
 a0(r86): [0..1]
 a1(r85): [2..3]
 a2(r89): [4..5]
 a3(r84): [4..5]
 a4(r83): [6..7]
 a5(r88): [6..7]
 a6(r87): [8..9]
  regions=1, blocks=3, points=10
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    4:r83  l0     0    3:r84  l0     1    1:r85  l0     0    0:r86  l0     0
    6:r87  l0     0    5:r88  l0     1    2:r89  l0     0
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


const std::_Ios_Fmtflags& std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,8u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 125{97d,28u,0e} in 15{14 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85 86 87 88 89
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])
        (reg:DI 5 di [ __a ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:92 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __a ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 __b+0 S4 A32])
        (reg:SI 4 si [ __b ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:92 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ __b ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:92 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 83 [ D.44998 ])
        (mem:SI (reg/f:DI 87) [0 *__a_1(D)+0 S4 A32])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:92 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87)
        (nil)))
(insn 9 8 10 2 (set (reg:SI 88)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 __b+0 S4 A32])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:92 90 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 4 si)
        (reg:SI 88)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:92 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88)
        (nil)))
(insn 11 10 12 2 (set (reg:SI 5 di)
        (reg:SI 83 [ D.44998 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:92 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ D.44998 ])
        (nil)))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZStorSt13_Ios_FmtflagsS_") [flags 0x1]  <function_decl 0x102c32b00 operator|>) [0 operator| S1 A8])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:92 649 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 13 12 14 2 (set (reg:SI 84 [ D.44998 ])
        (reg:SI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:92 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 14 13 15 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:92 89 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (mem:SI (reg/f:DI 89) [0 *__a_1(D)+0 S4 A32])
        (reg:SI 84 [ D.44998 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:92 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (expr_list:REG_DEAD (reg:SI 84 [ D.44998 ])
            (nil))))
(insn 16 15 19 2 (set (reg/f:DI 85 [ D.44999 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:92 89 {*movdi_internal}
     (nil))
(insn 19 16 23 2 (set (reg:DI 86 [ <retval> ])
        (reg/f:DI 85 [ D.44999 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:92 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85 [ D.44999 ])
        (nil)))
(insn 23 19 24 2 (set (reg/i:DI 0 ax)
        (reg:DI 86 [ <retval> ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:92 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86 [ <retval> ])
        (nil)))
(insn 24 23 0 2 (use (reg/i:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:92 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function const std::_Ios_Fmtflags& std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) (_ZStaNRSt13_Ios_FmtflagsS_, funcdef_no=675, decl_uid=13172, symbol_order=156)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r88,l0) best SIREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r86,l0) best AREG, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r83,l0) best DIREG, allocno GENERAL_REGS

  a0(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a3(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a4(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a5(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a6(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8

   Insn 24(l0): point = 0
   Insn 23(l0): point = 2
   Insn 19(l0): point = 4
   Insn 16(l0): point = 6
   Insn 15(l0): point = 8
   Insn 14(l0): point = 10
   Insn 13(l0): point = 12
   Insn 12(l0): point = 14
   Insn 11(l0): point = 16
   Insn 10(l0): point = 18
   Insn 9(l0): point = 20
   Insn 8(l0): point = 22
   Insn 7(l0): point = 24
   Insn 3(l0): point = 26
   Insn 2(l0): point = 28
 a0(r86): [3..4]
 a1(r85): [5..6]
 a2(r89): [9..10]
 a3(r84): [9..12]
 a4(r83): [17..22]
 a5(r88): [19..20]
 a6(r87): [23..24]
Compressing live ranges: from 31 to 10 - 32%
Ranges after the compression:
 a0(r86): [0..1]
 a1(r85): [2..3]
 a2(r89): [4..5]
 a3(r84): [4..5]
 a4(r83): [6..7]
 a5(r88): [6..7]
 a6(r87): [8..9]
  regions=1, blocks=3, points=10
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    4:r83  l0     0    3:r84  l0     1    1:r85  l0     0    0:r86  l0     0
    6:r87  l0     0    5:r88  l0     1    2:r89  l0     0
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


const std::_Ios_Fmtflags& std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,8u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 125{97d,28u,0e} in 15{14 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85 86 87 88 89
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])
        (reg:DI 5 di [ __a ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:96 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __a ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 __b+0 S4 A32])
        (reg:SI 4 si [ __b ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:96 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ __b ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:96 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 83 [ D.45000 ])
        (mem:SI (reg/f:DI 87) [0 *__a_1(D)+0 S4 A32])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:96 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87)
        (nil)))
(insn 9 8 10 2 (set (reg:SI 88)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 __b+0 S4 A32])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:96 90 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 4 si)
        (reg:SI 88)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:96 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88)
        (nil)))
(insn 11 10 12 2 (set (reg:SI 5 di)
        (reg:SI 83 [ D.45000 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:96 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ D.45000 ])
        (nil)))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZStanSt13_Ios_FmtflagsS_") [flags 0x1]  <function_decl 0x102c32a00 operator&>) [0 operator& S1 A8])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:96 649 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 13 12 14 2 (set (reg:SI 84 [ D.45000 ])
        (reg:SI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:96 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 14 13 15 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:96 89 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (mem:SI (reg/f:DI 89) [0 *__a_1(D)+0 S4 A32])
        (reg:SI 84 [ D.45000 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:96 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (expr_list:REG_DEAD (reg:SI 84 [ D.45000 ])
            (nil))))
(insn 16 15 19 2 (set (reg/f:DI 85 [ D.45001 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:96 89 {*movdi_internal}
     (nil))
(insn 19 16 23 2 (set (reg:DI 86 [ <retval> ])
        (reg/f:DI 85 [ D.45001 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:96 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85 [ D.45001 ])
        (nil)))
(insn 23 19 24 2 (set (reg/i:DI 0 ax)
        (reg:DI 86 [ <retval> ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:96 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86 [ <retval> ])
        (nil)))
(insn 24 23 0 2 (use (reg/i:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:96 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::ios_base::fmtflags std::ios_base::setf(std::ios_base::fmtflags, std::ios_base::fmtflags) (_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_, funcdef_no=702, decl_uid=13430, symbol_order=183)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 30.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r93,l0) best SIREG, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r86,l0) best DIREG, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r83,l0) best AREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a2(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a3(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a4(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a5(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a6(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a7(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a8(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a9(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a10(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a11(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a12(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8

   Insn 39(l0): point = 0
   Insn 38(l0): point = 2
   Insn 34(l0): point = 4
   Insn 31(l0): point = 6
   Insn 30(l0): point = 8
   Insn 29(l0): point = 10
   Insn 28(l0): point = 12
   Insn 27(l0): point = 14
   Insn 26(l0): point = 16
   Insn 25(l0): point = 18
   Insn 24(l0): point = 20
   Insn 23(l0): point = 22
   Insn 22(l0): point = 24
   Insn 21(l0): point = 26
   Insn 20(l0): point = 28
   Insn 19(l0): point = 30
   Insn 18(l0): point = 32
   Insn 17(l0): point = 34
   Insn 16(l0): point = 36
   Insn 15(l0): point = 38
   Insn 14(l0): point = 40
   Insn 13(l0): point = 42
   Insn 12(l0): point = 44
   Insn 11(l0): point = 46
   Insn 10(l0): point = 48
   Insn 9(l0): point = 50
   Insn 8(l0): point = 52
   Insn 4(l0): point = 54
   Insn 3(l0): point = 56
   Insn 2(l0): point = 58
 a0(r88): [3..4]
 a1(r87): [5..6]
 a2(r86): [11..14]
 a3(r85): [13..18]
 a4(r95): [15..16]
 a5(r94): [23..26]
 a6(r93): [25..28]
 a7(r84): [33..36]
 a8(r83): [35..40]
 a9(r92): [37..38]
 a10(r91): [45..46]
 a11(r90): [49..50]
 a12(r89): [51..52]
Compressing live ranges: from 61 to 20 - 32%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r86): [4..5]
 a3(r85): [4..7]
 a4(r95): [6..7]
 a5(r94): [8..9]
 a6(r93): [8..9]
 a7(r84): [10..11]
 a8(r83): [10..13]
 a9(r92): [12..13]
 a10(r91): [14..15]
 a11(r90): [16..17]
 a12(r89): [18..19]
  regions=1, blocks=3, points=20
    allocnos=13 (big 0), copies=0, conflicts=0, ranges=13
Disposition:
    8:r83  l0     1    7:r84  l0     0    3:r85  l0     1    2:r86  l0     0
    1:r87  l0     0    0:r88  l0     0   12:r89  l0     0   11:r90  l0     0
   10:r91  l0     0    9:r92  l0     0    6:r93  l0     1    5:r94  l0     0
    4:r95  l0     0
+++Costs: overall -8, reg -8, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::ios_base::fmtflags std::ios_base::setf(std::ios_base::fmtflags, std::ios_base::fmtflags)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={6d,4u} r1={5d,1u} r2={5d} r4={8d,4u} r5={9d,5u} r6={1d,2u} r7={1d,6u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,1u} r17={6d} r18={4d} r19={4d} r20={1d,13u,2e} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 365{314d,49u,2e} in 30{26 regular + 4 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85 86 87 88 89 90 91 92 93 94 95
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:595 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 __fmtfl+0 S4 A32])
        (reg:SI 4 si [ __fmtfl ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:595 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ __fmtfl ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __mask+0 S4 A32])
        (reg:SI 1 dx [ __mask ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:595 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ __mask ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:597 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 90)
        (mem/j:SI (plus:DI (reg/f:DI 89)
                (const_int 24 [0x18])) [0 this_1(D)->_M_flags+0 S4 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:597 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (nil)))
(insn 10 9 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 __old+0 S4 A32])
        (reg:SI 90)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:597 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90)
        (nil)))
(insn 11 10 12 2 (set (reg:SI 91)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __mask+0 S4 A32])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:598 90 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 5 di)
        (reg:SI 91)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:598 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91)
        (nil)))
(call_insn 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZStcoSt13_Ios_Fmtflags") [flags 0x1]  <function_decl 0x102c32d00 operator~>) [0 operator~ S1 A8])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:598 649 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 14 13 15 2 (set (reg:SI 83 [ D.45002 ])
        (reg:SI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:598 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:598 89 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (parallel [
            (set (reg/f:DI 84 [ D.45003 ])
                (plus:DI (reg/f:DI 92)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:598 221 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 92)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])
                    (const_int 24 [0x18]))
                (nil)))))
(insn 17 16 18 2 (set (reg:SI 4 si)
        (reg:SI 83 [ D.45002 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:598 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ D.45002 ])
        (nil)))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg/f:DI 84 [ D.45003 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:598 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84 [ D.45003 ])
        (nil)))
(call_insn 19 18 20 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZStaNRSt13_Ios_FmtflagsS_") [flags 0x1]  <function_decl 0x102c32f00 operator&=>) [0 operator&= S1 A8])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:598 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 20 19 21 2 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __mask+0 S4 A32])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:599 90 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:SI 94)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 __fmtfl+0 S4 A32])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:599 90 {*movsi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:SI 4 si)
        (reg:SI 93)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:599 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93)
        (nil)))
(insn 23 22 24 2 (set (reg:SI 5 di)
        (reg:SI 94)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:599 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94)
        (nil)))
(call_insn 24 23 25 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZStanSt13_Ios_FmtflagsS_") [flags 0x1]  <function_decl 0x102c32a00 operator&>) [0 operator& S1 A8])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:599 649 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 25 24 26 2 (set (reg:SI 85 [ D.45002 ])
        (reg:SI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:599 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 26 25 27 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:599 89 {*movdi_internal}
     (nil))
(insn 27 26 28 2 (parallel [
            (set (reg/f:DI 86 [ D.45003 ])
                (plus:DI (reg/f:DI 95)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:599 221 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])
                    (const_int 24 [0x18]))
                (nil)))))
(insn 28 27 29 2 (set (reg:SI 4 si)
        (reg:SI 85 [ D.45002 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:599 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 85 [ D.45002 ])
        (nil)))
(insn 29 28 30 2 (set (reg:DI 5 di)
        (reg/f:DI 86 [ D.45003 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:599 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 86 [ D.45003 ])
        (nil)))
(call_insn 30 29 31 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZStoRRSt13_Ios_FmtflagsS_") [flags 0x1]  <function_decl 0x102c32e00 operator|=>) [0 operator|= S1 A8])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:599 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 31 30 34 2 (set (reg:SI 87 [ D.45004 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 __old+0 S4 A32])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:600 90 {*movsi_internal}
     (nil))
(insn 34 31 38 2 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ D.45004 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:600 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ D.45004 ])
        (nil)))
(insn 38 34 39 2 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:601 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88 [ <retval> ])
        (nil)))
(insn 39 38 0 2 (use (reg/i:SI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:601 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::streamsize std::ios_base::precision(std::streamsize) (_ZNSt8ios_base9precisionEl, funcdef_no=705, decl_uid=13438, symbol_order=186)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a4(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a5(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8

   Insn 21(l0): point = 0
   Insn 20(l0): point = 2
   Insn 16(l0): point = 4
   Insn 13(l0): point = 6
   Insn 12(l0): point = 8
   Insn 11(l0): point = 10
   Insn 10(l0): point = 12
   Insn 9(l0): point = 14
   Insn 8(l0): point = 16
   Insn 7(l0): point = 18
   Insn 3(l0): point = 20
   Insn 2(l0): point = 22
 a0(r84): [3..4]
 a1(r83): [5..6]
 a2(r87): [9..12]
 a3(r88): [9..10]
 a4(r86): [15..16]
 a5(r85): [17..18]
Compressing live ranges: from 25 to 10 - 40%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
 a2(r87): [4..5]
 a3(r88): [4..5]
 a4(r86): [6..7]
 a5(r85): [8..9]
  regions=1, blocks=3, points=10
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    1:r83  l0     0    0:r84  l0     0    5:r85  l0     0    4:r86  l0     0
    2:r87  l0     0    3:r88  l0     1
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::streamsize std::ios_base::precision(std::streamsize)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,9u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 50{26d,24u,0e} in 12{12 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 83 84 85 86 87 88
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:630 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __prec+0 S8 A64])
        (reg:DI 4 si [ __prec ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:630 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __prec ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:632 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 86)
        (mem/j:DI (plus:DI (reg/f:DI 85)
                (const_int 8 [0x8])) [0 this_1(D)->_M_precision+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:632 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85)
        (nil)))
(insn 9 8 10 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __old+0 S8 A64])
        (reg:DI 86)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:632 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:633 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 88)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __prec+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:633 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (mem/j:DI (plus:DI (reg/f:DI 87)
                (const_int 8 [0x8])) [0 this_1(D)->_M_precision+0 S8 A64])
        (reg:DI 88)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:633 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (expr_list:REG_DEAD (reg/f:DI 87)
            (nil))))
(insn 13 12 16 2 (set (reg:DI 83 [ D.45005 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __old+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:634 89 {*movdi_internal}
     (nil))
(insn 16 13 20 2 (set (reg:DI 84 [ <retval> ])
        (reg:DI 83 [ D.45005 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:634 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83 [ D.45005 ])
        (nil)))
(insn 20 16 21 2 (set (reg/i:DI 0 ax)
        (reg:DI 84 [ <retval> ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:635 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84 [ <retval> ])
        (nil)))
(insn 21 20 0 2 (use (reg/i:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/ios_base.h:635 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function brite::Graph* brite::Topology::GetGraph() (_ZN5brite8Topology8GetGraphEv, funcdef_no=1911, decl_uid=38525, symbol_order=510)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a2(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8

   Insn 15(l0): point = 0
   Insn 14(l0): point = 2
   Insn 10(l0): point = 4
   Insn 7(l0): point = 6
   Insn 6(l0): point = 8
   Insn 2(l0): point = 10
 a0(r84): [3..4]
 a1(r83): [5..6]
 a2(r85): [7..8]
Compressing live ranges: from 13 to 6 - 46%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
 a2(r85): [4..5]
  regions=1, blocks=3, points=6
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r83  l0     0    0:r84  l0     0    2:r85  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


brite::Graph* brite::Topology::GetGraph()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} 
;;    total ref usage 38{23d,15u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 83 84 85
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) Topology.h:50 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) Topology.h:50 89 {*movdi_internal}
     (nil))
(insn 7 6 10 2 (set (reg/f:DI 83 [ D.45006 ])
        (mem/f/j:DI (reg/f:DI 85) [0 this_1(D)->g+0 S8 A64])) Topology.h:50 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85)
        (nil)))
(insn 10 7 14 2 (set (reg:DI 84 [ <retval> ])
        (reg/f:DI 83 [ D.45006 ])) Topology.h:50 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45006 ])
        (nil)))
(insn 14 10 15 2 (set (reg/i:DI 0 ax)
        (reg:DI 84 [ <retval> ])) Topology.h:50 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84 [ <retval> ])
        (nil)))
(insn 15 14 0 2 (use (reg/i:DI 0 ax)) Topology.h:50 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function brite::Model* brite::Topology::GetModel() (_ZN5brite8Topology8GetModelEv, funcdef_no=1912, decl_uid=38527, symbol_order=511)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a2(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8

   Insn 15(l0): point = 0
   Insn 14(l0): point = 2
   Insn 10(l0): point = 4
   Insn 7(l0): point = 6
   Insn 6(l0): point = 8
   Insn 2(l0): point = 10
 a0(r84): [3..4]
 a1(r83): [5..6]
 a2(r85): [7..8]
Compressing live ranges: from 13 to 6 - 46%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
 a2(r85): [4..5]
  regions=1, blocks=3, points=6
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r83  l0     0    0:r84  l0     0    2:r85  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


brite::Model* brite::Topology::GetModel()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} 
;;    total ref usage 38{23d,15u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 83 84 85
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) Topology.h:51 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) Topology.h:51 89 {*movdi_internal}
     (nil))
(insn 7 6 10 2 (set (reg/f:DI 83 [ D.45007 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 85)
                (const_int 8 [0x8])) [0 this_1(D)->m+0 S8 A64])) Topology.h:51 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85)
        (nil)))
(insn 10 7 14 2 (set (reg:DI 84 [ <retval> ])
        (reg/f:DI 83 [ D.45007 ])) Topology.h:51 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45007 ])
        (nil)))
(insn 14 10 15 2 (set (reg/i:DI 0 ax)
        (reg:DI 84 [ <retval> ])) Topology.h:51 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84 [ <retval> ])
        (nil)))
(insn 15 14 0 2 (use (reg/i:DI 0 ax)) Topology.h:51 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function brite::Topology::Topology(brite::Model*) (_ZN5brite8TopologyC2EPNS_5ModelE, funcdef_no=1965, decl_uid=38544, symbol_order=564)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 20.
verify found no changes in insn with uid = 37.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a1(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a2(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:416 INT_SSE_REGS:416 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a4(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a5(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a6(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a7(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a8(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a9(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a10(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a11(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a12(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a13(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a14(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a15(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8

   Insn 37(l0): point = 1
   Insn 36(l0): point = 3
   Insn 35(l0): point = 5
   Insn 34(l0): point = 7
   Insn 33(l0): point = 9
   Insn 31(l0): point = 12
   Insn 30(l0): point = 14
   Insn 29(l0): point = 16
   Insn 28(l0): point = 18
   Insn 27(l0): point = 20
   Insn 26(l0): point = 22
   Insn 25(l0): point = 24
   Insn 24(l0): point = 26
   Insn 23(l0): point = 28
   Insn 22(l0): point = 30
   Insn 21(l0): point = 32
   Insn 20(l0): point = 34
   Insn 19(l0): point = 36
   Insn 18(l0): point = 38
   Insn 17(l0): point = 40
   Insn 16(l0): point = 42
   Insn 15(l0): point = 44
   Insn 14(l0): point = 46
   Insn 13(l0): point = 48
   Insn 12(l0): point = 50
   Insn 9(l0): point = 52
   Insn 8(l0): point = 54
   Insn 7(l0): point = 56
   Insn 3(l0): point = 58
   Insn 2(l0): point = 60
 a0(r93): [15..16]
 a1(r92): [17..18]
 a2(r91): [19..20]
 a3(r90): [23..24]
 a4(r100): [25..26]
 a5(r99): [29..30]
 a6(r89): [29..32]
 a7(r87): [35..42]
 a8(r88): [37..38]
 a9(r98): [39..40]
 a10(r86): [43..44]
 a11(r85): [45..46]
 a12(r84): [47..48]
 a13(r97): [49..50]
 a14(r94): [53..56]
 a15(r95): [53..54]
Compressing live ranges: from 63 to 26 - 41%
Ranges after the compression:
 a0(r93): [0..1]
 a1(r92): [2..3]
 a2(r91): [4..5]
 a3(r90): [6..7]
 a4(r100): [8..9]
 a5(r99): [10..11]
 a6(r89): [10..11]
 a7(r87): [12..15]
 a8(r88): [12..13]
 a9(r98): [14..15]
 a10(r86): [16..17]
 a11(r85): [18..19]
 a12(r84): [20..21]
 a13(r97): [22..23]
 a14(r94): [24..25]
 a15(r95): [24..25]
  regions=1, blocks=5, points=26
    allocnos=16 (big 0), copies=0, conflicts=0, ranges=16
Disposition:
   12:r84  l0     0   11:r85  l0     0   10:r86  l0     0    7:r87  l0     0
    8:r88  l0     1    6:r89  l0     1    3:r90  l0     0    2:r91  l0     0
    1:r92  l0     0    0:r93  l0     0   14:r94  l0     0   15:r95  l0     1
   13:r97  l0     0    9:r98  l0     1    5:r99  l0     0    4:r100 l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


brite::Topology::Topology(brite::Model*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d,1u} r1={4d,1u} r2={4d,1u} r4={4d,2u} r5={5d,3u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={5d,2u} r18={2d} r19={2d} r20={1d,12u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} 
;;    total ref usage 230{179d,51u,0e} in 30{28 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 84 85 86 87 88 89 90 91 92 93 94 95 97 98 99 100
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) Topology.cc:48 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 model+0 S8 A64])
        (reg:DI 4 si [ model ])) Topology.cc:48 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ model ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) Topology.cc:50 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 model+0 S8 A64])) Topology.cc:50 89 {*movdi_internal}
     (nil))
(insn 9 8 12 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 94)
                (const_int 8 [0x8])) [0 this_1(D)->m+0 S8 A64])
        (reg/f:DI 95)) Topology.cc:50 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (expr_list:REG_DEAD (reg/f:DI 94)
            (nil))))
(insn 12 9 13 2 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) Topology.cc:51 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 84 [ D.45008 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 97)
                (const_int 8 [0x8])) [0 this_1(D)->m+0 S8 A64])) Topology.cc:51 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97)
        (nil)))
(insn 14 13 15 2 (set (reg/f:DI 85 [ D.45009 ])
        (mem/f/j:DI (reg/f:DI 84 [ D.45008 ]) [0 _4->_vptr.Model+0 S8 A64])) Topology.cc:51 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84 [ D.45008 ])
        (nil)))
(insn 15 14 16 2 (parallel [
            (set (reg/f:DI 86 [ D.45009 ])
                (plus:DI (reg/f:DI 85 [ D.45009 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:51 221 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 85 [ D.45009 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 16 15 17 2 (set (reg/f:DI 87 [ D.45010 ])
        (mem/f:DI (reg/f:DI 86 [ D.45009 ]) [0 *_6+0 S8 A64])) Topology.cc:51 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 86 [ D.45009 ])
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) Topology.cc:51 89 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg/f:DI 88 [ D.45008 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 98)
                (const_int 8 [0x8])) [0 this_1(D)->m+0 S8 A64])) Topology.cc:51 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98)
        (nil)))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.45008 ])) Topology.cc:51 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.45008 ])
        (nil)))
(call_insn 20 19 21 2 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 87 [ D.45010 ]) [0 *OBJ_TYPE_REF(_7;(struct Model)_3->2) S1 A8])
            (const_int 0 [0]))) Topology.cc:51 649 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.45010 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 21 20 22 2 (set (reg/f:DI 89 [ D.45011 ])
        (reg:DI 0 ax)) Topology.cc:51 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 22 21 23 2 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) Topology.cc:51 89 {*movdi_internal}
     (nil))
(insn 23 22 24 2 (set (mem/f/j:DI (reg/f:DI 99) [0 this_1(D)->g+0 S8 A64])
        (reg/f:DI 89 [ D.45011 ])) Topology.cc:51 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99)
        (expr_list:REG_DEAD (reg/f:DI 89 [ D.45011 ])
            (nil))))
(insn 24 23 25 2 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) Topology.cc:52 89 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg/f:DI 90 [ D.45011 ])
        (mem/f/j:DI (reg/f:DI 100) [0 this_1(D)->g+0 S8 A64])) Topology.cc:52 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100)
        (nil)))
(insn 26 25 27 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ D.45011 ])
            (const_int 0 [0]))) Topology.cc:52 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.45011 ])
        (nil)))
(insn 27 26 28 2 (set (reg:QI 91 [ D.45012 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) Topology.cc:52 592 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 28 27 29 2 (set (reg:DI 92 [ D.45013 ])
        (zero_extend:DI (reg:QI 91 [ D.45012 ]))) Topology.cc:52 134 {zero_extendqidi2}
     (expr_list:REG_DEAD (reg:QI 91 [ D.45012 ])
        (nil)))
(insn 29 28 30 2 (set (reg:DI 93 [ D.45013 ])
        (reg:DI 92 [ D.45013 ])) Topology.cc:52 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ D.45013 ])
        (nil)))
(insn 30 29 31 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 93 [ D.45013 ])
            (const_int 0 [0]))) Topology.cc:52 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 93 [ D.45013 ])
        (nil)))
(jump_insn 31 30 32 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 41)
            (pc))) Topology.cc:52 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 41)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 32 31 33 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 3 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*LC0") [flags 0x2]  <var_decl 0x10417fd10 *LC0>)) Topology.cc:52 89 {*movdi_internal}
     (nil))
(insn 34 33 35 3 (set (reg:SI 1 dx)
        (const_int 52 [0x34])) Topology.cc:52 90 {*movsi_internal}
     (nil))
(insn 35 34 36 3 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC1") [flags 0x2]  <var_decl 0x10417fda8 *LC1>)) Topology.cc:52 89 {*movdi_internal}
     (nil))
(insn 36 35 37 3 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZZN5brite8TopologyC4EPNS_5ModelEE8__func__") [flags 0x1c02]  <var_decl 0x103c8eb48 __func__>)) Topology.cc:52 89 {*movdi_internal}
     (nil))
(call_insn 37 36 38 3 (call (mem:QI (symbol_ref:DI ("__assert_rtn") [flags 0x41]  <function_decl 0x1035dc600 __assert_rtn>) [0 __assert_rtn S1 A8])
        (const_int 0 [0])) Topology.cc:52 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                        (expr_list:REG_NORETURN (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 38 37 41)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 41 38 42 4 19 "" [1 uses])
(note 42 41 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function brite::Topology::Topology(brite::Model*) (_ZN5brite8TopologyC1EPNS_5ModelE, funcdef_no=1966, decl_uid=38541, symbol_order=565)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 20.
verify found no changes in insn with uid = 37.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a1(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a2(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:416 INT_SSE_REGS:416 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a4(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a5(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a6(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a7(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a8(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a9(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a10(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a11(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a12(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a13(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a14(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a15(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8

   Insn 37(l0): point = 1
   Insn 36(l0): point = 3
   Insn 35(l0): point = 5
   Insn 34(l0): point = 7
   Insn 33(l0): point = 9
   Insn 31(l0): point = 12
   Insn 30(l0): point = 14
   Insn 29(l0): point = 16
   Insn 28(l0): point = 18
   Insn 27(l0): point = 20
   Insn 26(l0): point = 22
   Insn 25(l0): point = 24
   Insn 24(l0): point = 26
   Insn 23(l0): point = 28
   Insn 22(l0): point = 30
   Insn 21(l0): point = 32
   Insn 20(l0): point = 34
   Insn 19(l0): point = 36
   Insn 18(l0): point = 38
   Insn 17(l0): point = 40
   Insn 16(l0): point = 42
   Insn 15(l0): point = 44
   Insn 14(l0): point = 46
   Insn 13(l0): point = 48
   Insn 12(l0): point = 50
   Insn 9(l0): point = 52
   Insn 8(l0): point = 54
   Insn 7(l0): point = 56
   Insn 3(l0): point = 58
   Insn 2(l0): point = 60
 a0(r93): [15..16]
 a1(r92): [17..18]
 a2(r91): [19..20]
 a3(r90): [23..24]
 a4(r100): [25..26]
 a5(r99): [29..30]
 a6(r89): [29..32]
 a7(r87): [35..42]
 a8(r88): [37..38]
 a9(r98): [39..40]
 a10(r86): [43..44]
 a11(r85): [45..46]
 a12(r84): [47..48]
 a13(r97): [49..50]
 a14(r94): [53..56]
 a15(r95): [53..54]
Compressing live ranges: from 63 to 26 - 41%
Ranges after the compression:
 a0(r93): [0..1]
 a1(r92): [2..3]
 a2(r91): [4..5]
 a3(r90): [6..7]
 a4(r100): [8..9]
 a5(r99): [10..11]
 a6(r89): [10..11]
 a7(r87): [12..15]
 a8(r88): [12..13]
 a9(r98): [14..15]
 a10(r86): [16..17]
 a11(r85): [18..19]
 a12(r84): [20..21]
 a13(r97): [22..23]
 a14(r94): [24..25]
 a15(r95): [24..25]
  regions=1, blocks=5, points=26
    allocnos=16 (big 0), copies=0, conflicts=0, ranges=16
Disposition:
   12:r84  l0     0   11:r85  l0     0   10:r86  l0     0    7:r87  l0     0
    8:r88  l0     1    6:r89  l0     1    3:r90  l0     0    2:r91  l0     0
    1:r92  l0     0    0:r93  l0     0   14:r94  l0     0   15:r95  l0     1
   13:r97  l0     0    9:r98  l0     1    5:r99  l0     0    4:r100 l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


brite::Topology::Topology(brite::Model*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d,1u} r1={4d,1u} r2={4d,1u} r4={4d,2u} r5={5d,3u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={5d,2u} r18={2d} r19={2d} r20={1d,12u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} 
;;    total ref usage 230{179d,51u,0e} in 30{28 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 84 85 86 87 88 89 90 91 92 93 94 95 97 98 99 100
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) Topology.cc:48 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 model+0 S8 A64])
        (reg:DI 4 si [ model ])) Topology.cc:48 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ model ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) Topology.cc:50 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 model+0 S8 A64])) Topology.cc:50 89 {*movdi_internal}
     (nil))
(insn 9 8 12 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 94)
                (const_int 8 [0x8])) [0 this_1(D)->m+0 S8 A64])
        (reg/f:DI 95)) Topology.cc:50 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (expr_list:REG_DEAD (reg/f:DI 94)
            (nil))))
(insn 12 9 13 2 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) Topology.cc:51 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 84 [ D.45016 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 97)
                (const_int 8 [0x8])) [0 this_1(D)->m+0 S8 A64])) Topology.cc:51 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97)
        (nil)))
(insn 14 13 15 2 (set (reg/f:DI 85 [ D.45017 ])
        (mem/f/j:DI (reg/f:DI 84 [ D.45016 ]) [0 _4->_vptr.Model+0 S8 A64])) Topology.cc:51 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84 [ D.45016 ])
        (nil)))
(insn 15 14 16 2 (parallel [
            (set (reg/f:DI 86 [ D.45017 ])
                (plus:DI (reg/f:DI 85 [ D.45017 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:51 221 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 85 [ D.45017 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 16 15 17 2 (set (reg/f:DI 87 [ D.45018 ])
        (mem/f:DI (reg/f:DI 86 [ D.45017 ]) [0 *_6+0 S8 A64])) Topology.cc:51 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 86 [ D.45017 ])
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) Topology.cc:51 89 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg/f:DI 88 [ D.45016 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 98)
                (const_int 8 [0x8])) [0 this_1(D)->m+0 S8 A64])) Topology.cc:51 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98)
        (nil)))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.45016 ])) Topology.cc:51 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.45016 ])
        (nil)))
(call_insn 20 19 21 2 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 87 [ D.45018 ]) [0 *OBJ_TYPE_REF(_7;(struct Model)_3->2) S1 A8])
            (const_int 0 [0]))) Topology.cc:51 649 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.45018 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 21 20 22 2 (set (reg/f:DI 89 [ D.45019 ])
        (reg:DI 0 ax)) Topology.cc:51 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 22 21 23 2 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) Topology.cc:51 89 {*movdi_internal}
     (nil))
(insn 23 22 24 2 (set (mem/f/j:DI (reg/f:DI 99) [0 this_1(D)->g+0 S8 A64])
        (reg/f:DI 89 [ D.45019 ])) Topology.cc:51 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99)
        (expr_list:REG_DEAD (reg/f:DI 89 [ D.45019 ])
            (nil))))
(insn 24 23 25 2 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) Topology.cc:52 89 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg/f:DI 90 [ D.45019 ])
        (mem/f/j:DI (reg/f:DI 100) [0 this_1(D)->g+0 S8 A64])) Topology.cc:52 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100)
        (nil)))
(insn 26 25 27 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ D.45019 ])
            (const_int 0 [0]))) Topology.cc:52 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.45019 ])
        (nil)))
(insn 27 26 28 2 (set (reg:QI 91 [ D.45020 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) Topology.cc:52 592 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 28 27 29 2 (set (reg:DI 92 [ D.45021 ])
        (zero_extend:DI (reg:QI 91 [ D.45020 ]))) Topology.cc:52 134 {zero_extendqidi2}
     (expr_list:REG_DEAD (reg:QI 91 [ D.45020 ])
        (nil)))
(insn 29 28 30 2 (set (reg:DI 93 [ D.45021 ])
        (reg:DI 92 [ D.45021 ])) Topology.cc:52 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ D.45021 ])
        (nil)))
(insn 30 29 31 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 93 [ D.45021 ])
            (const_int 0 [0]))) Topology.cc:52 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 93 [ D.45021 ])
        (nil)))
(jump_insn 31 30 32 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 41)
            (pc))) Topology.cc:52 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 41)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 32 31 33 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 3 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*LC0") [flags 0x2]  <var_decl 0x10417fd10 *LC0>)) Topology.cc:52 89 {*movdi_internal}
     (nil))
(insn 34 33 35 3 (set (reg:SI 1 dx)
        (const_int 52 [0x34])) Topology.cc:52 90 {*movsi_internal}
     (nil))
(insn 35 34 36 3 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC1") [flags 0x2]  <var_decl 0x10417fda8 *LC1>)) Topology.cc:52 89 {*movdi_internal}
     (nil))
(insn 36 35 37 3 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZZN5brite8TopologyC4EPNS_5ModelEE8__func__") [flags 0x1c02]  <var_decl 0x103c8eb48 __func__>)) Topology.cc:52 89 {*movdi_internal}
     (nil))
(call_insn 37 36 38 3 (call (mem:QI (symbol_ref:DI ("__assert_rtn") [flags 0x41]  <function_decl 0x1035dc600 __assert_rtn>) [0 __assert_rtn S1 A8])
        (const_int 0 [0])) Topology.cc:52 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                        (expr_list:REG_NORETURN (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 38 37 41)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 41 38 42 4 21 "" [1 uses])
(note 42 41 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int brite::Topology::GetNumNodes() (_ZN5brite8Topology11GetNumNodesEv, funcdef_no=1967, decl_uid=38521, symbol_order=566)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 26.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best DIREG, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a3(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a4(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a5(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a6(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:416 INT_SSE_REGS:416 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a7(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a8(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8

   Insn 35(l0): point = 0
   Insn 34(l0): point = 2
   Insn 30(l0): point = 4
   Insn 27(l0): point = 6
   Insn 26(l0): point = 8
   Insn 25(l0): point = 10
   Insn 24(l0): point = 12
   Insn 23(l0): point = 14
   Insn 19(l0): point = 17
   Insn 18(l0): point = 19
   Insn 17(l0): point = 21
   Insn 16(l0): point = 23
   Insn 15(l0): point = 25
   Insn 13(l0): point = 28
   Insn 12(l0): point = 30
   Insn 11(l0): point = 32
   Insn 10(l0): point = 34
   Insn 9(l0): point = 36
   Insn 8(l0): point = 38
   Insn 7(l0): point = 40
   Insn 6(l0): point = 42
   Insn 2(l0): point = 44
 a0(r89): [3..4]
 a1(r88): [5..6]
 a2(r87): [11..12]
 a3(r91): [13..14]
 a4(r86): [31..32]
 a5(r85): [33..34]
 a6(r84): [35..36]
 a7(r83): [39..40]
 a8(r90): [41..42]
Compressing live ranges: from 47 to 18 - 38%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r88): [2..3]
 a2(r87): [4..5]
 a3(r91): [6..7]
 a4(r86): [8..9]
 a5(r85): [10..11]
 a6(r84): [12..13]
 a7(r83): [14..15]
 a8(r90): [16..17]
  regions=1, blocks=5, points=18
    allocnos=9 (big 0), copies=0, conflicts=0, ranges=9
Disposition:
    7:r83  l0     0    6:r84  l0     0    5:r85  l0     0    4:r86  l0     0
    2:r87  l0     0    1:r88  l0     0    0:r89  l0     0    8:r90  l0     0
    3:r91  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int brite::Topology::GetNumNodes()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={4d,3u} r1={4d,1u} r2={4d,1u} r4={4d,1u} r5={5d,3u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={4d,2u} r18={2d} r19={2d} r20={1d,7u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 212{172d,40u,0e} in 22{20 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 83 84 85 86 90
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) Topology.cc:56 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) Topology.cc:57 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 83 [ D.45022 ])
        (mem/f/j:DI (reg/f:DI 90) [0 this_1(D)->g+0 S8 A64])) Topology.cc:57 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (nil)))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 83 [ D.45022 ])
            (const_int 0 [0]))) Topology.cc:57 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45022 ])
        (nil)))
(insn 9 8 10 2 (set (reg:QI 84 [ D.45023 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) Topology.cc:57 592 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 85 [ D.45024 ])
        (zero_extend:DI (reg:QI 84 [ D.45023 ]))) Topology.cc:57 134 {zero_extendqidi2}
     (expr_list:REG_DEAD (reg:QI 84 [ D.45023 ])
        (nil)))
(insn 11 10 12 2 (set (reg:DI 86 [ D.45024 ])
        (reg:DI 85 [ D.45024 ])) Topology.cc:57 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85 [ D.45024 ])
        (nil)))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 86 [ D.45024 ])
            (const_int 0 [0]))) Topology.cc:57 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 86 [ D.45024 ])
        (nil)))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) Topology.cc:57 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 21)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*LC0") [flags 0x2]  <var_decl 0x10417fd10 *LC0>)) Topology.cc:57 89 {*movdi_internal}
     (nil))
(insn 16 15 17 3 (set (reg:SI 1 dx)
        (const_int 57 [0x39])) Topology.cc:57 90 {*movsi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC1") [flags 0x2]  <var_decl 0x10417fda8 *LC1>)) Topology.cc:57 89 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZZN5brite8Topology11GetNumNodesEvE8__func__") [flags 0x1c02]  <var_decl 0x103c93130 __func__>)) Topology.cc:57 89 {*movdi_internal}
     (nil))
(call_insn 19 18 20 3 (call (mem:QI (symbol_ref:DI ("__assert_rtn") [flags 0x41]  <function_decl 0x1035dc600 __assert_rtn>) [0 __assert_rtn S1 A8])
        (const_int 0 [0])) Topology.cc:57 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                        (expr_list:REG_NORETURN (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 20 19 21)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 87 88 89 91
(code_label 21 20 22 4 24 "" [1 uses])
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) Topology.cc:58 89 {*movdi_internal}
     (nil))
(insn 24 23 25 4 (set (reg/f:DI 87 [ D.45022 ])
        (mem/f/j:DI (reg/f:DI 91) [0 this_1(D)->g+0 S8 A64])) Topology.cc:58 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (nil)))
(insn 25 24 26 4 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.45022 ])) Topology.cc:58 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.45022 ])
        (nil)))
(call_insn 26 25 27 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5brite5Graph11GetNumNodesEv") [flags 0x41]  <function_decl 0x10363b800 GetNumNodes>) [0 GetNumNodes S1 A8])
            (const_int 0 [0]))) Topology.cc:58 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 27 26 30 4 (set (reg:SI 88 [ D.45025 ])
        (reg:SI 0 ax)) Topology.cc:58 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 30 27 34 4 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.45025 ])) Topology.cc:58 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88 [ D.45025 ])
        (nil)))
(insn 34 30 35 4 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) Topology.cc:59 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89 [ <retval> ])
        (nil)))
(insn 35 34 0 4 (use (reg/i:SI 0 ax)) Topology.cc:59 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function bool brite::Topology::IsConnected() (_ZN5brite8Topology11IsConnectedEv, funcdef_no=1969, decl_uid=38535, symbol_order=568)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 26 n_edges 34 count 26 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 31.
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 47.
verify found no changes in insn with uid = 51.
verify found no changes in insn with uid = 61.
verify found no changes in insn with uid = 69.
verify found no changes in insn with uid = 86.
verify found no changes in insn with uid = 98.
verify found no changes in insn with uid = 117.
verify found no changes in insn with uid = 132.
verify found no changes in insn with uid = 136.
verify found no changes in insn with uid = 146.
verify found no changes in insn with uid = 149.
verify found no changes in insn with uid = 155.
verify found no changes in insn with uid = 164.
verify found no changes in insn with uid = 171.
verify found no changes in insn with uid = 174.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r139: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r139,l0) best DIREG, allocno GENERAL_REGS
    r137: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r137,l0) best AREG, allocno GENERAL_REGS
    r136: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r136,l0) best DIREG, allocno GENERAL_REGS
    r133: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r133,l0) best AREG, allocno GENERAL_REGS
    r132: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r132,l0) best AREG, allocno GENERAL_REGS
    r131: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r131,l0) best DIREG, allocno GENERAL_REGS
    r130: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r130,l0) best AREG, allocno GENERAL_REGS
    r129: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r129,l0) best DIREG, allocno GENERAL_REGS
    r127: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r127,l0) best DIREG, allocno GENERAL_REGS
    r126: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r126,l0) best DIREG, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r124,l0) best DIREG, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r122,l0) best SIREG, allocno GENERAL_REGS
    r121: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a26 (r121,l0) best DREG, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a30 (r119,l0) best DIREG, allocno GENERAL_REGS
    r118: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a32 (r118,l0) best DIREG, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a35 (r116,l0) best DIREG, allocno GENERAL_REGS
    r115: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a36 (r115,l0) best DIREG, allocno GENERAL_REGS
    r114: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a38 (r114,l0) best DREG, allocno GENERAL_REGS
    r113: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a39 (r113,l0) best CREG, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a43 (r111,l0) best DIREG, allocno GENERAL_REGS
    r110: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a44 (r110,l0) best DIREG, allocno GENERAL_REGS
    r109: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a45 (r109,l0) best DIREG, allocno GENERAL_REGS
    r108: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a47 (r108,l0) best DREG, allocno GENERAL_REGS
    r107: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a48 (r107,l0) best CREG, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a52 (r105,l0) best DIREG, allocno GENERAL_REGS
    r104: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r104,l0) best AREG, allocno GENERAL_REGS
    r103: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r103,l0) best DIREG, allocno GENERAL_REGS
    r102: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r102,l0) best DIREG, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r99,l0) best AREG, allocno GENERAL_REGS
    r98: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r98,l0) best SIREG, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r96,l0) best AREG, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r95,l0) best DIREG, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a31 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a33 (r92,l0) best SIREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a29 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a37 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a40 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a41 (r87,l0) best DIREG, allocno GENERAL_REGS
    r86: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a46 (r86,l0) best SIREG, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a49 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a50 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:308 INT_SSE_REGS:308 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a2(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:32 SSE_REGS:32 ALL_SSE_REGS:32 MMX_REGS:37 FP_TOP_SSE_REGS:508 FP_SECOND_SSE_REGS:508 FLOAT_SSE_REGS:508 FLOAT_INT_REGS:508 INT_SSE_REGS:33 FLOAT_INT_SSE_REGS:508 ALL_REGS:508 MEM:6
  a3(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a4(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a5(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a6(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a7(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a8(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a9(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a10(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a11(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:516 INT_SSE_REGS:516 FLOAT_INT_SSE_REGS:516 ALL_REGS:516 MEM:7
  a12(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a13(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a14(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:416 INT_SSE_REGS:416 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a15(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a16(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a17(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a18(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:416 INT_SSE_REGS:416 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a19(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a20(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a21(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a22(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a23(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a24(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a25(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a26(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a27(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a28(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:416 INT_SSE_REGS:416 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a29(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a30(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a31(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a32(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a33(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a34(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a35(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a36(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a37(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a38(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a39(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a40(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a41(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a42(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a43(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a44(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a45(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a46(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a47(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a48(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a49(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a50(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a51(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a52(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7

   Insn 178(l0): point = 0
   Insn 177(l0): point = 2
   Insn 174(l0): point = 5
   Insn 173(l0): point = 7
   Insn 172(l0): point = 9
   Insn 171(l0): point = 11
   Insn 170(l0): point = 13
   Insn 169(l0): point = 15
   Insn 192(l0): point = 18
   Insn 212(l0): point = 21
   Insn 165(l0): point = 23
   Insn 164(l0): point = 25
   Insn 163(l0): point = 27
   Insn 162(l0): point = 29
   Insn 198(l0): point = 31
   Insn 210(l0): point = 34
   Insn 156(l0): point = 36
   Insn 155(l0): point = 38
   Insn 154(l0): point = 40
   Insn 153(l0): point = 42
   Insn 188(l0): point = 44
   Insn 149(l0): point = 47
   Insn 148(l0): point = 49
   Insn 147(l0): point = 51
   Insn 146(l0): point = 53
   Insn 145(l0): point = 55
   Insn 144(l0): point = 57
   Insn 185(l0): point = 59
   Insn 208(l0): point = 62
   Insn 139(l0): point = 64
   Insn 136(l0): point = 66
   Insn 135(l0): point = 68
   Insn 134(l0): point = 70
   Insn 132(l0): point = 73
   Insn 131(l0): point = 75
   Insn 130(l0): point = 77
   Insn 127(l0): point = 80
   Insn 126(l0): point = 82
   Insn 205(l0): point = 85
   Insn 106(l0): point = 87
   Insn 104(l0): point = 90
   Insn 103(l0): point = 92
   Insn 102(l0): point = 94
   Insn 101(l0): point = 96
   Insn 100(l0): point = 98
   Insn 99(l0): point = 100
   Insn 98(l0): point = 102
   Insn 97(l0): point = 104
   Insn 96(l0): point = 106
   Insn 95(l0): point = 108
   Insn 94(l0): point = 110
   Insn 93(l0): point = 112
   Insn 124(l0): point = 115
   Insn 123(l0): point = 117
   Insn 121(l0): point = 119
   Insn 120(l0): point = 121
   Insn 118(l0): point = 123
   Insn 117(l0): point = 126
   Insn 116(l0): point = 128
   Insn 115(l0): point = 130
   Insn 114(l0): point = 132
   Insn 111(l0): point = 135
   Insn 203(l0): point = 138
   Insn 89(l0): point = 140
   Insn 88(l0): point = 142
   Insn 86(l0): point = 145
   Insn 85(l0): point = 147
   Insn 84(l0): point = 149
   Insn 83(l0): point = 151
   Insn 82(l0): point = 153
   Insn 81(l0): point = 155
   Insn 80(l0): point = 157
   Insn 79(l0): point = 159
   Insn 78(l0): point = 161
   Insn 64(l0): point = 164
   Insn 63(l0): point = 166
   Insn 62(l0): point = 168
   Insn 61(l0): point = 170
   Insn 60(l0): point = 172
   Insn 59(l0): point = 174
   Insn 58(l0): point = 176
   Insn 57(l0): point = 178
   Insn 56(l0): point = 180
   Insn 76(l0): point = 183
   Insn 75(l0): point = 185
   Insn 73(l0): point = 187
   Insn 72(l0): point = 189
   Insn 70(l0): point = 191
   Insn 69(l0): point = 194
   Insn 68(l0): point = 196
   Insn 67(l0): point = 198
   Insn 201(l0): point = 201
   Insn 52(l0): point = 203
   Insn 51(l0): point = 205
   Insn 50(l0): point = 207
   Insn 49(l0): point = 209
   Insn 47(l0): point = 212
   Insn 46(l0): point = 214
   Insn 45(l0): point = 216
   Insn 44(l0): point = 218
   Insn 43(l0): point = 220
   Insn 42(l0): point = 222
   Insn 41(l0): point = 224
   Insn 40(l0): point = 226
   Insn 39(l0): point = 228
   Insn 37(l0): point = 230
   Insn 36(l0): point = 233
   Insn 35(l0): point = 235
   Insn 34(l0): point = 237
   Insn 33(l0): point = 239
   Insn 32(l0): point = 241
   Insn 31(l0): point = 243
   Insn 30(l0): point = 245
   Insn 29(l0): point = 247
   Insn 28(l0): point = 249
   Insn 27(l0): point = 251
   Insn 26(l0): point = 253
   Insn 24(l0): point = 256
   Insn 23(l0): point = 258
   Insn 22(l0): point = 260
   Insn 21(l0): point = 262
   Insn 20(l0): point = 264
   Insn 19(l0): point = 266
   Insn 18(l0): point = 268
   Insn 17(l0): point = 270
   Insn 16(l0): point = 272
   Insn 14(l0): point = 274
   Insn 13(l0): point = 277
   Insn 12(l0): point = 279
   Insn 11(l0): point = 281
   Insn 10(l0): point = 283
   Insn 9(l0): point = 285
   Insn 8(l0): point = 287
   Insn 7(l0): point = 289
   Insn 6(l0): point = 291
   Insn 2(l0): point = 293
 a0(r104): [62..64] [3..4]
 a1(r103): [8..9]
 a2(r132): [34..36] [21..23] [10..18]
 a3(r139): [14..15]
 a4(r137): [24..31]
 a5(r136): [28..29]
 a6(r133): [37..44]
 a7(r131): [41..42]
 a8(r102): [50..51]
 a9(r130): [52..59]
 a10(r129): [56..57]
 a11(r83): [85..87] [65..80]
 a12(r127): [69..70]
 a13(r126): [76..77]
 a14(r97): [118..119]
 a15(r96): [122..123]
 a16(r95): [129..130]
 a17(r125): [131..132]
 a18(r101): [93..94]
 a19(r100): [97..98]
 a20(r99): [99..100]
 a21(r124): [105..108]
 a22(r98): [107..110]
 a23(r123): [111..112]
 a24(r94): [148..159]
 a25(r122): [150..155]
 a26(r121): [152..157]
 a27(r120): [160..161]
 a28(r91): [186..187]
 a29(r90): [190..191]
 a30(r119): [197..198]
 a31(r93): [167..168]
 a32(r118): [173..176]
 a33(r92): [175..178]
 a34(r117): [179..180]
 a35(r116): [208..209]
 a36(r115): [215..222]
 a37(r89): [217..228]
 a38(r114): [219..224]
 a39(r113): [221..226]
 a40(r88): [229..230]
 a41(r87): [236..237]
 a42(r112): [238..239]
 a43(r111): [246..247]
 a44(r110): [252..253]
 a45(r109): [259..266]
 a46(r86): [261..272]
 a47(r108): [263..268]
 a48(r107): [265..270]
 a49(r85): [273..274]
 a50(r84): [280..281]
 a51(r106): [282..283]
 a52(r105): [290..291]
Compressing live ranges: from 296 to 84 - 28%
Ranges after the compression:
 a0(r104): [18..19] [0..1]
 a1(r103): [2..3]
 a2(r132): [10..11] [4..7]
 a3(r139): [4..5]
 a4(r137): [8..9]
 a5(r136): [8..9]
 a6(r133): [12..13]
 a7(r131): [12..13]
 a8(r102): [14..15]
 a9(r130): [16..17]
 a10(r129): [16..17]
 a11(r83): [20..25]
 a12(r127): [20..21]
 a13(r126): [22..23]
 a14(r97): [36..37]
 a15(r96): [38..39]
 a16(r95): [40..41]
 a17(r125): [42..43]
 a18(r101): [26..27]
 a19(r100): [28..29]
 a20(r99): [30..31]
 a21(r124): [32..33]
 a22(r98): [32..33]
 a23(r123): [34..35]
 a24(r94): [44..45]
 a25(r122): [44..45]
 a26(r121): [44..45]
 a27(r120): [46..47]
 a28(r91): [54..55]
 a29(r90): [56..57]
 a30(r119): [58..59]
 a31(r93): [48..49]
 a32(r118): [50..51]
 a33(r92): [50..51]
 a34(r117): [52..53]
 a35(r116): [60..61]
 a36(r115): [62..63]
 a37(r89): [62..63]
 a38(r114): [62..63]
 a39(r113): [62..63]
 a40(r88): [64..65]
 a41(r87): [66..67]
 a42(r112): [68..69]
 a43(r111): [70..71]
 a44(r110): [72..73]
 a45(r109): [74..75]
 a46(r86): [74..75]
 a47(r108): [74..75]
 a48(r107): [74..75]
 a49(r85): [76..77]
 a50(r84): [78..79]
 a51(r106): [80..81]
 a52(r105): [82..83]
  regions=1, blocks=26, points=84
    allocnos=53 (big 0), copies=0, conflicts=0, ranges=55
Disposition:
   11:r83  l0     3   50:r84  l0     0   49:r85  l0     0   46:r86  l0     4
   41:r87  l0     0   40:r88  l0     0   37:r89  l0     4   29:r90  l0     0
   28:r91  l0     0   33:r92  l0     1   31:r93  l0     0   24:r94  l0     0
   16:r95  l0     0   15:r96  l0     0   14:r97  l0     0   22:r98  l0     1
   20:r99  l0     0   19:r100 l0     0   18:r101 l0     0    8:r102 l0     0
    1:r103 l0     0    0:r104 l0     0   52:r105 l0     0   51:r106 l0     0
   48:r107 l0     2   47:r108 l0     1   45:r109 l0     0   44:r110 l0     0
   43:r111 l0     0   42:r112 l0     0   39:r113 l0     2   38:r114 l0     1
   36:r115 l0     0   35:r116 l0     0   34:r117 l0     0   32:r118 l0     0
   30:r119 l0     0   27:r120 l0     0   26:r121 l0     1   25:r122 l0     4
   23:r123 l0     0   21:r124 l0     0   17:r125 l0     0   13:r126 l0     0
   12:r127 l0     0   10:r129 l0     0    9:r130 l0     3    7:r131 l0     0
    2:r132 l0     3    6:r133 l0     3    5:r136 l0     0    4:r137 l0     3
    3:r139 l0     0
+++Costs: overall -42, reg -42, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


bool brite::Topology::IsConnected()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={27d,12u} r1={29d,3u} r2={25d,3u} r4={27d,5u} r5={43d,22u} r6={1d,25u} r7={1d,46u} r8={21d} r9={21d} r10={21d} r11={21d} r12={21d} r13={21d} r14={21d} r15={21d} r16={1d,24u} r17={50d,7u} r18={21d} r19={21d} r20={1d,65u} r21={22d} r22={22d} r23={22d} r24={22d} r25={22d} r26={22d} r27={22d} r28={22d} r29={21d} r30={21d} r31={21d} r32={21d} r33={21d} r34={21d} r35={21d} r36={21d} r37={22d} r38={22d} r39={21d} r40={21d} r45={21d} r46={21d} r47={21d} r48={21d} r49={21d} r50={21d} r51={21d} r52={21d} r53={21d} r54={21d} r55={21d} r56={21d} r57={21d} r58={21d} r59={21d} r60={21d} r61={21d} r62={21d} r63={21d} r64={21d} r65={21d} r66={21d} r67={21d} r68={21d} r69={21d} r70={21d} r71={21d} r72={21d} r73={21d} r74={21d} r75={21d} r76={21d} r83={2d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={3d,1u} r133={1d,1u} r136={1d,1u} r137={1d,1u} r139={1d,1u} 
;;    total ref usage 1838{1573d,265u,0e} in 136{115 regular + 21 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 84 105 106
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) Topology.cc:67 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (parallel [
            (set (reg:DI 105)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -25 [0xffffffffffffffe7])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:69 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 105)) Topology.cc:69 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 105)
        (nil)))
(call_insn 8 7 9 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSaIN5brite5ColorEEC1Ev") [flags 0x1]  <function_decl 0x103caa900 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) Topology.cc:69 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 D.41563+0 S4 A64])
        (const_int 0 [0])) Topology.cc:69 90 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 this+0 S8 A64])) Topology.cc:69 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 84 [ D.45029 ])
        (mem/f/j:DI (reg/f:DI 106) [0 this_4(D)->g+0 S8 A64])) Topology.cc:69 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/f:DI 84 [ D.45029 ])) Topology.cc:69 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84 [ D.45029 ])
        (nil)))
(call_insn 13 12 180 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5brite5Graph11GetNumNodesEv") [flags 0x41]  <function_decl 0x10363b800 GetNumNodes>) [0 GetNumNodes S1 A8])
            (const_int 0 [0]))) Topology.cc:69 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 2 [0x2])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       20 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 85 86 107 108 109
(note 180 13 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 180 16 3 (set (reg:SI 85 [ D.45030 ])
        (reg:SI 0 ax)) Topology.cc:69 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 16 14 17 3 (set (reg:DI 86 [ D.45031 ])
        (sign_extend:DI (reg:SI 85 [ D.45030 ]))) Topology.cc:69 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 85 [ D.45030 ])
        (nil)))
(insn 17 16 18 3 (parallel [
            (set (reg:DI 107)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -25 [0xffffffffffffffe7])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:69 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 18 17 19 3 (parallel [
            (set (reg:DI 108)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:69 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 19 18 20 3 (parallel [
            (set (reg:DI 109)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:69 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 20 19 21 3 (set (reg:DI 2 cx)
        (reg:DI 107)) Topology.cc:69 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 107)
        (nil)))
(insn 21 20 22 3 (set (reg:DI 1 dx)
        (reg:DI 108)) Topology.cc:69 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 108)
        (nil)))
(insn 22 21 23 3 (set (reg:DI 4 si)
        (reg:DI 86 [ D.45031 ])) Topology.cc:69 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86 [ D.45031 ])
        (nil)))
(insn 23 22 24 3 (set (reg:DI 5 di)
        (reg:DI 109)) Topology.cc:69 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 109)
        (nil)))
(call_insn 24 23 25 3 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIN5brite5ColorESaIS1_EEC1EmRKS1_RKS2_") [flags 0x1]  <function_decl 0x103ceea00 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) Topology.cc:69 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 2 [0x2])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       20 (ABNORMAL,ABNORMAL_CALL,EH)
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 87 110 111 112
(note 25 24 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 4 (parallel [
            (set (reg:DI 110)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -25 [0xffffffffffffffe7])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:69 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 27 26 28 4 (set (reg:DI 5 di)
        (reg:DI 110)) Topology.cc:69 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 110)
        (nil)))
(call_insn 28 27 29 4 (call (mem:QI (symbol_ref/i:DI ("_ZNSaIN5brite5ColorEED1Ev") [flags 0x1]  <function_decl 0x103caab00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) Topology.cc:69 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 29 28 30 4 (parallel [
            (set (reg:DI 111)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -17 [0xffffffffffffffef])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:70 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 30 29 31 4 (set (reg:DI 5 di)
        (reg:DI 111)) Topology.cc:70 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 111)
        (nil)))
(call_insn 31 30 32 4 (call (mem:QI (symbol_ref/i:DI ("_ZNSaIiEC1Ev") [flags 0x1]  <function_decl 0x1037ffd00 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) Topology.cc:70 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 32 31 33 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 D.41568+0 S4 A64])
        (const_int 0 [0])) Topology.cc:70 90 {*movsi_internal}
     (nil))
(insn 33 32 34 4 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 this+0 S8 A64])) Topology.cc:70 89 {*movdi_internal}
     (nil))
(insn 34 33 35 4 (set (reg/f:DI 87 [ D.45029 ])
        (mem/f/j:DI (reg/f:DI 112) [0 this_4(D)->g+0 S8 A64])) Topology.cc:70 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 112)
        (nil)))
(insn 35 34 36 4 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.45029 ])) Topology.cc:70 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.45029 ])
        (nil)))
(call_insn 36 35 181 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5brite5Graph11GetNumNodesEv") [flags 0x41]  <function_decl 0x10363b800 GetNumNodes>) [0 GetNumNodes S1 A8])
            (const_int 0 [0]))) Topology.cc:70 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 5 [0x5])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       21 (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 88 89 113 114 115
(note 181 36 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 37 181 39 5 (set (reg:SI 88 [ D.45030 ])
        (reg:SI 0 ax)) Topology.cc:70 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 39 37 40 5 (set (reg:DI 89 [ D.45031 ])
        (sign_extend:DI (reg:SI 88 [ D.45030 ]))) Topology.cc:70 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 88 [ D.45030 ])
        (nil)))
(insn 40 39 41 5 (parallel [
            (set (reg:DI 113)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -17 [0xffffffffffffffef])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:70 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 41 40 42 5 (parallel [
            (set (reg:DI 114)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:70 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 42 41 43 5 (parallel [
            (set (reg:DI 115)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:70 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 43 42 44 5 (set (reg:DI 2 cx)
        (reg:DI 113)) Topology.cc:70 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 113)
        (nil)))
(insn 44 43 45 5 (set (reg:DI 1 dx)
        (reg:DI 114)) Topology.cc:70 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 114)
        (nil)))
(insn 45 44 46 5 (set (reg:DI 4 si)
        (reg:DI 89 [ D.45031 ])) Topology.cc:70 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89 [ D.45031 ])
        (nil)))
(insn 46 45 47 5 (set (reg:DI 5 di)
        (reg:DI 115)) Topology.cc:70 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 115)
        (nil)))
(call_insn 47 46 48 5 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIiSaIiEEC1EmRKiRKS0_") [flags 0x1]  <function_decl 0x10397c100 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) Topology.cc:70 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 5 [0x5])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       21 (ABNORMAL,ABNORMAL_CALL,EH)
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 116
(note 48 47 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 6 (parallel [
            (set (reg:DI 116)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -17 [0xffffffffffffffef])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:70 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 50 49 51 6 (set (reg:DI 5 di)
        (reg:DI 116)) Topology.cc:70 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 116)
        (nil)))
(call_insn 51 50 52 6 (call (mem:QI (symbol_ref/i:DI ("_ZNSaIiED1Ev") [flags 0x1]  <function_decl 0x1037fff00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) Topology.cc:70 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 52 51 201 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) Topology.cc:72 90 {*movsi_internal}
     (nil))
(jump_insn 201 52 202 6 (set (pc)
        (label_ref 65)) Topology.cc:72 636 {jump}
     (nil)
 -> 65)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 202 201 74)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 92 93 117 118
(code_label 74 202 55 7 28 "" [1 uses])
(note 55 74 56 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 7 (set (reg:SI 117)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) Topology.cc:73 90 {*movsi_internal}
     (nil))
(insn 57 56 58 7 (set (reg:DI 92 [ D.45031 ])
        (sign_extend:DI (reg:SI 117))) Topology.cc:73 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 117)
        (nil)))
(insn 58 57 59 7 (parallel [
            (set (reg:DI 118)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:73 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 59 58 60 7 (set (reg:DI 4 si)
        (reg:DI 92 [ D.45031 ])) Topology.cc:73 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ D.45031 ])
        (nil)))
(insn 60 59 61 7 (set (reg:DI 5 di)
        (reg:DI 118)) Topology.cc:73 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 118)
        (nil)))
(call_insn 61 60 62 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIN5brite5ColorESaIS1_EEixEm") [flags 0x1]  <function_decl 0x103cd1c00 operator[]>) [0 operator[] S1 A8])
            (const_int 0 [0]))) Topology.cc:73 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 62 61 63 7 (set (reg/f:DI 93 [ D.45032 ])
        (reg:DI 0 ax)) Topology.cc:73 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 63 62 64 7 (set (mem:SI (reg/f:DI 93 [ D.45032 ]) [0 *_18+0 S4 A32])
        (const_int 3 [0x3])) Topology.cc:73 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.45032 ])
        (nil)))
(insn 64 63 65 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:72 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       8 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU,DFS_BACK)
;;              6 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 119
(code_label 65 64 66 8 27 "" [1 uses])
(note 66 65 67 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 8 (set (reg:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 this+0 S8 A64])) Topology.cc:72 89 {*movdi_internal}
     (nil))
(insn 68 67 69 8 (set (reg:DI 5 di)
        (reg:DI 119)) Topology.cc:72 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 119)
        (nil)))
(call_insn 69 68 182 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite8Topology11GetNumNodesEv") [flags 0x1]  <function_decl 0x103b3d200 GetNumNodes>) [0 GetNumNodes S1 A8])
            (const_int 0 [0]))) Topology.cc:72 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 7 [0x7])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       22 (ABNORMAL,ABNORMAL_CALL,EH)
;;              9 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 90 91
(note 182 69 70 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 70 182 72 9 (set (reg:SI 90 [ D.45030 ])
        (reg:SI 0 ax)) Topology.cc:72 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 72 70 73 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 90 [ D.45030 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) Topology.cc:72 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 90 [ D.45030 ])
        (nil)))
(insn 73 72 75 9 (set (reg:QI 91 [ D.45028 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) Topology.cc:72 592 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
(insn 75 73 76 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 91 [ D.45028 ])
            (const_int 0 [0]))) Topology.cc:72 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 91 [ D.45028 ])
        (nil)))
(jump_insn 76 75 77 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) Topology.cc:72 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 74)
;;  succ:       7
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 94 120 121 122
(note 77 76 78 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 10 (set (reg/f:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 this+0 S8 A64])) Topology.cc:76 89 {*movdi_internal}
     (nil))
(insn 79 78 80 10 (set (reg/f:DI 94 [ D.45029 ])
        (mem/f/j:DI (reg/f:DI 120) [0 this_4(D)->g+0 S8 A64])) Topology.cc:76 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 120)
        (nil)))
(insn 80 79 81 10 (parallel [
            (set (reg:DI 121)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:76 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 81 80 82 10 (parallel [
            (set (reg:DI 122)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:76 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 82 81 83 10 (set (reg:SI 2 cx)
        (const_int 0 [0])) Topology.cc:76 90 {*movsi_internal}
     (nil))
(insn 83 82 84 10 (set (reg:DI 1 dx)
        (reg:DI 121)) Topology.cc:76 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 121)
        (nil)))
(insn 84 83 85 10 (set (reg:DI 4 si)
        (reg:DI 122)) Topology.cc:76 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 122)
        (nil)))
(insn 85 84 86 10 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.45029 ])) Topology.cc:76 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.45029 ])
        (nil)))
(call_insn 86 85 87 10 (call (mem:QI (symbol_ref:DI ("_ZN5brite5Graph3DFSERSt6vectorINS_5ColorESaIS2_EERS1_IiSaIiEEi") [flags 0x41]  <function_decl 0x10363bd00 DFS>) [0 DFS S1 A8])
        (const_int 0 [0])) Topology.cc:76 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 7 [0x7])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
;;  succ:       22 (ABNORMAL,ABNORMAL_CALL,EH)
;;              11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 87 86 88 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 11 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 conn+0 S4 A32])
        (const_int 1 [0x1])) Topology.cc:78 90 {*movsi_internal}
     (nil))
(insn 89 88 203 11 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
        (const_int 0 [0])) Topology.cc:79 90 {*movsi_internal}
     (nil))
(jump_insn 203 89 204 11 (set (pc)
        (label_ref 112)) Topology.cc:79 636 {jump}
     (nil)
 -> 112)
;;  succ:       15 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 204 203 122)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 98 99 100 101 123 124
(code_label 122 204 92 12 32 "" [1 uses])
(note 92 122 93 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 12 (set (reg:SI 123)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) Topology.cc:80 90 {*movsi_internal}
     (nil))
(insn 94 93 95 12 (set (reg:DI 98 [ D.45031 ])
        (sign_extend:DI (reg:SI 123))) Topology.cc:80 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 123)
        (nil)))
(insn 95 94 96 12 (parallel [
            (set (reg:DI 124)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:80 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 96 95 97 12 (set (reg:DI 4 si)
        (reg:DI 98 [ D.45031 ])) Topology.cc:80 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98 [ D.45031 ])
        (nil)))
(insn 97 96 98 12 (set (reg:DI 5 di)
        (reg:DI 124)) Topology.cc:80 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 124)
        (nil)))
(call_insn 98 97 99 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIN5brite5ColorESaIS1_EEixEm") [flags 0x1]  <function_decl 0x103cd1c00 operator[]>) [0 operator[] S1 A8])
            (const_int 0 [0]))) Topology.cc:80 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 99 98 100 12 (set (reg/f:DI 99 [ D.45032 ])
        (reg:DI 0 ax)) Topology.cc:80 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 100 99 101 12 (set (reg:SI 100 [ D.45033 ])
        (mem:SI (reg/f:DI 99 [ D.45032 ]) [0 *_28+0 S4 A32])) Topology.cc:80 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99 [ D.45032 ])
        (nil)))
(insn 101 100 102 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ D.45033 ])
            (const_int 3 [0x3]))) Topology.cc:80 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 100 [ D.45033 ])
        (nil)))
(insn 102 101 103 12 (set (reg:QI 101 [ D.45028 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) Topology.cc:80 592 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 103 102 104 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 101 [ D.45028 ])
            (const_int 0 [0]))) Topology.cc:80 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 101 [ D.45028 ])
        (nil)))
(jump_insn 104 103 105 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) Topology.cc:80 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 109)
;;  succ:       13 (FALLTHRU)
;;              14
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 105 104 106 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 205 13 (set (reg:QI 83 [ D.45028 ])
        (const_int 0 [0])) Topology.cc:81 93 {*movqi_internal}
     (nil))
(jump_insn 205 106 206 13 (set (pc)
        (label_ref 128)) Topology.cc:81 636 {jump}
     (nil)
 -> 128)
;;  succ:       18 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 206 205 109)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 109 206 110 14 30 "" [1 uses])
(note 110 109 111 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 14 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:79 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       15 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU,DFS_BACK)
;;              11 [100.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 95 125
(code_label 112 111 113 15 29 "" [1 uses])
(note 113 112 114 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 15 (set (reg/f:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 this+0 S8 A64])) Topology.cc:79 89 {*movdi_internal}
     (nil))
(insn 115 114 116 15 (set (reg/f:DI 95 [ D.45029 ])
        (mem/f/j:DI (reg/f:DI 125) [0 this_4(D)->g+0 S8 A64])) Topology.cc:79 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 125)
        (nil)))
(insn 116 115 117 15 (set (reg:DI 5 di)
        (reg/f:DI 95 [ D.45029 ])) Topology.cc:79 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.45029 ])
        (nil)))
(call_insn 117 116 183 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5brite5Graph11GetNumNodesEv") [flags 0x41]  <function_decl 0x10363b800 GetNumNodes>) [0 GetNumNodes S1 A8])
            (const_int 0 [0]))) Topology.cc:79 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 7 [0x7])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       22 (ABNORMAL,ABNORMAL_CALL,EH)
;;              16 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 96 97
(note 183 117 118 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 118 183 120 16 (set (reg:SI 96 [ D.45030 ])
        (reg:SI 0 ax)) Topology.cc:79 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 120 118 121 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 96 [ D.45030 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32]))) Topology.cc:79 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 96 [ D.45030 ])
        (nil)))
(insn 121 120 123 16 (set (reg:QI 97 [ D.45028 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) Topology.cc:79 592 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
(insn 123 121 124 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 97 [ D.45028 ])
            (const_int 0 [0]))) Topology.cc:79 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 97 [ D.45028 ])
        (nil)))
(jump_insn 124 123 125 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 122)
            (pc))) Topology.cc:79 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 122)
;;  succ:       12
;;              17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 83
(note 125 124 126 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 126 125 127 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 conn+0 S4 A32])
            (const_int 0 [0]))) Topology.cc:85 3 {*cmpsi_ccno_1}
     (nil))
(insn 127 126 128 17 (set (reg:QI 83 [ D.45028 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) Topology.cc:85 592 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
;;  succ:       18 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;;              13 [100.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 126
(code_label 128 127 129 18 31 "" [1 uses])
(note 129 128 130 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 131 18 (parallel [
            (set (reg:DI 126)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:70 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 131 130 132 18 (set (reg:DI 5 di)
        (reg:DI 126)) Topology.cc:70 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 126)
        (nil)))
(call_insn 132 131 133 18 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIiSaIiEED1Ev") [flags 0x1]  <function_decl 0x10397c700 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) Topology.cc:70 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 6 [0x6])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       23 (ABNORMAL,ABNORMAL_CALL,EH)
;;              19 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 104 127
(note 133 132 134 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 135 19 (parallel [
            (set (reg:DI 127)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:85 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 135 134 136 19 (set (reg:DI 5 di)
        (reg:DI 127)) Topology.cc:85 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 127)
        (nil)))
(call_insn 136 135 139 19 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIN5brite5ColorESaIS1_EED1Ev") [flags 0x1]  <function_decl 0x103cf3000 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) Topology.cc:85 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 139 136 208 19 (set (reg:QI 104 [ <retval> ])
        (reg:QI 83 [ D.45028 ])) 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 83 [ D.45028 ])
        (nil)))
(jump_insn 208 139 209 19 (set (pc)
        (label_ref 207)) 636 {jump}
     (nil)
 -> 207)
;;  succ:       25 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104

(barrier 209 208 184)
;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 20 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 102 129 130
(code_label/s 184 209 186 20 38 "" [1 uses])
(note 186 184 185 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 185 186 144 20 (set (reg:DI 130)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 144 185 145 20 (parallel [
            (set (reg:DI 129)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -25 [0xffffffffffffffe7])))
            (clobber (reg:CC 17 flags))
        ]) 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 145 144 146 20 (set (reg:DI 5 di)
        (reg:DI 129)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 129)
        (nil)))
(call_insn 146 145 147 20 (call (mem:QI (symbol_ref/i:DI ("_ZNSaIN5brite5ColorEED1Ev") [flags 0x1]  <function_decl 0x103caab00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 147 146 148 20 (set (reg/f:DI 102 [ D.45026 ])
        (reg:DI 130)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 130)
        (nil)))
(insn 148 147 149 20 (set (reg:DI 5 di)
        (reg/f:DI 102 [ D.45026 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102 [ D.45026 ])
        (nil)))
(call_insn 149 148 150 20 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x143165200 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 150 149 187)
;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 21 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 131 132 133
(code_label/s 187 150 190 21 39 "" [1 uses])
(note 190 187 188 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 188 190 153 21 (set (reg:DI 133)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 153 188 154 21 (parallel [
            (set (reg:DI 131)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -17 [0xffffffffffffffef])))
            (clobber (reg:CC 17 flags))
        ]) 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 154 153 155 21 (set (reg:DI 5 di)
        (reg:DI 131)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 131)
        (nil)))
(call_insn 155 154 156 21 (call (mem:QI (symbol_ref/i:DI ("_ZNSaIiED1Ev") [flags 0x1]  <function_decl 0x1037fff00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 156 155 210 21 (set (reg:DI 132)
        (reg:DI 133)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 133)
        (nil)))
(jump_insn 210 156 211 21 (set (pc)
        (label_ref 167)) 636 {jump}
     (nil)
 -> 167)
;;  succ:       24 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132

(barrier 211 210 197)
;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (ABNORMAL,ABNORMAL_CALL,EH)
;;              10 (ABNORMAL,ABNORMAL_CALL,EH)
;;              15 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 22 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 132 136 137
(code_label/s 197 211 200 22 41 "" [1 uses])
(note 200 197 198 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 198 200 162 22 (set (reg:DI 137)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 162 198 163 22 (parallel [
            (set (reg:DI 136)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:70 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 163 162 164 22 (set (reg:DI 5 di)
        (reg:DI 136)) Topology.cc:70 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 136)
        (nil)))
(call_insn 164 163 165 22 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIiSaIiEED1Ev") [flags 0x1]  <function_decl 0x10397c700 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) Topology.cc:70 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int -16 [0xfffffffffffffff0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 165 164 212 22 (set (reg:DI 132)
        (reg:DI 137)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 137)
        (nil)))
(jump_insn 212 165 213 22 (set (pc)
        (label_ref 167)) 636 {jump}
     (nil)
 -> 167)
;;  succ:       24 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132

(barrier 213 212 191)
;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 23 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 132
(code_label/s 191 213 196 23 40 "" [1 uses])
(note 196 191 192 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 192 196 167 23 (set (reg:DI 132)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       24 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23 [100.0%]  (FALLTHRU)
;;              21 [100.0%] 
;;              22 [100.0%] 
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 103 139
(code_label 167 192 168 24 36 "" [2 uses])
(note 168 167 169 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 169 168 170 24 (parallel [
            (set (reg:DI 139)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:85 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 170 169 171 24 (set (reg:DI 5 di)
        (reg:DI 139)) Topology.cc:85 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 139)
        (nil)))
(call_insn 171 170 172 24 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIN5brite5ColorESaIS1_EED1Ev") [flags 0x1]  <function_decl 0x103cf3000 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) Topology.cc:85 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int -17 [0xffffffffffffffef])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 172 171 173 24 (set (reg/f:DI 103 [ D.45027 ])
        (reg:DI 132)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 132)
        (nil)))
(insn 173 172 174 24 (set (reg:DI 5 di)
        (reg/f:DI 103 [ D.45027 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103 [ D.45027 ])
        (nil)))
(call_insn 174 173 175 24 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x143165200 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 175 174 207)
;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19 [100.0%] 
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; lr  def 	 0 [ax]
(code_label 207 175 179 25 42 "" [1 uses])
(note 179 207 177 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 177 179 178 25 (set (reg/i:QI 0 ax)
        (reg:QI 104 [ <retval> ])) Topology.cc:87 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 104 [ <retval> ])
        (nil)))
(insn 178 177 0 25 (use (reg/i:QI 0 ax)) Topology.cc:87 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void brite::Topology::BriteOutput(char*) (_ZN5brite8Topology11BriteOutputEPc, funcdef_no=1970, decl_uid=38530, symbol_order=569)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 276 n_edges 493 count 276 (    1)
Building IRA IR
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 27.
verify found no changes in insn with uid = 31.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 45.
verify found no changes in insn with uid = 50.
verify found no changes in insn with uid = 54.
verify found no changes in insn with uid = 66.
verify found no changes in insn with uid = 73.
verify found no changes in insn with uid = 79.
verify found no changes in insn with uid = 85.
verify found no changes in insn with uid = 90.
verify found no changes in insn with uid = 95.
verify found no changes in insn with uid = 100.
verify found no changes in insn with uid = 105.
verify found no changes in insn with uid = 110.
verify found no changes in insn with uid = 134.
verify found no changes in insn with uid = 140.
verify found no changes in insn with uid = 145.
verify found no changes in insn with uid = 149.
verify found no changes in insn with uid = 160.
verify found no changes in insn with uid = 166.
verify found no changes in insn with uid = 171.
verify found no changes in insn with uid = 175.
verify found no changes in insn with uid = 186.
verify found no changes in insn with uid = 192.
verify found no changes in insn with uid = 197.
verify found no changes in insn with uid = 201.
verify found no changes in insn with uid = 212.
verify found no changes in insn with uid = 218.
verify found no changes in insn with uid = 223.
verify found no changes in insn with uid = 227.
verify found no changes in insn with uid = 238.
verify found no changes in insn with uid = 244.
verify found no changes in insn with uid = 249.
verify found no changes in insn with uid = 253.
verify found no changes in insn with uid = 264.
verify found no changes in insn with uid = 270.
verify found no changes in insn with uid = 275.
verify found no changes in insn with uid = 279.
verify found no changes in insn with uid = 290.
verify found no changes in insn with uid = 296.
verify found no changes in insn with uid = 301.
verify found no changes in insn with uid = 305.
verify found no changes in insn with uid = 314.
verify found no changes in insn with uid = 321.
verify found no changes in insn with uid = 326.
verify found no changes in insn with uid = 331.
verify found no changes in insn with uid = 334.
verify found no changes in insn with uid = 341.
verify found no changes in insn with uid = 347.
verify found no changes in insn with uid = 352.
verify found no changes in insn with uid = 357.
verify found no changes in insn with uid = 362.
verify found no changes in insn with uid = 373.
verify found no changes in insn with uid = 377.
verify found no changes in insn with uid = 385.
verify found no changes in insn with uid = 389.
verify found no changes in insn with uid = 397.
verify found no changes in insn with uid = 401.
verify found no changes in insn with uid = 405.
verify found no changes in insn with uid = 413.
verify found no changes in insn with uid = 417.
verify found no changes in insn with uid = 421.
verify found no changes in insn with uid = 429.
verify found no changes in insn with uid = 433.
verify found no changes in insn with uid = 439.
verify found no changes in insn with uid = 444.
verify found no changes in insn with uid = 449.
verify found no changes in insn with uid = 454.
verify found no changes in insn with uid = 459.
verify found no changes in insn with uid = 464.
verify found no changes in insn with uid = 469.
verify found no changes in insn with uid = 474.
verify found no changes in insn with uid = 479.
verify found no changes in insn with uid = 484.
verify found no changes in insn with uid = 491.
verify found no changes in insn with uid = 495.
verify found no changes in insn with uid = 499.
verify found no changes in insn with uid = 516.
verify found no changes in insn with uid = 520.
verify found no changes in insn with uid = 524.
verify found no changes in insn with uid = 530.
verify found no changes in insn with uid = 535.
verify found no changes in insn with uid = 542.
verify found no changes in insn with uid = 546.
verify found no changes in insn with uid = 550.
verify found no changes in insn with uid = 572.
verify found no changes in insn with uid = 581.
verify found no changes in insn with uid = 590.
verify found no changes in insn with uid = 599.
verify found no changes in insn with uid = 608.
verify found no changes in insn with uid = 617.
verify found no changes in insn with uid = 623.
verify found no changes in insn with uid = 636.
verify found no changes in insn with uid = 640.
verify found no changes in insn with uid = 644.
verify found no changes in insn with uid = 650.
verify found no changes in insn with uid = 655.
verify found no changes in insn with uid = 662.
verify found no changes in insn with uid = 666.
verify found no changes in insn with uid = 670.
verify found no changes in insn with uid = 692.
verify found no changes in insn with uid = 701.
verify found no changes in insn with uid = 710.
verify found no changes in insn with uid = 719.
verify found no changes in insn with uid = 728.
verify found no changes in insn with uid = 737.
verify found no changes in insn with uid = 743.
verify found no changes in insn with uid = 752.
verify found no changes in insn with uid = 760.
verify found no changes in insn with uid = 772.
verify found no changes in insn with uid = 778.
verify found no changes in insn with uid = 783.
verify found no changes in insn with uid = 788.
verify found no changes in insn with uid = 792.
verify found no changes in insn with uid = 797.
verify found no changes in insn with uid = 807.
verify found no changes in insn with uid = 811.
verify found no changes in insn with uid = 816.
verify found no changes in insn with uid = 820.
verify found no changes in insn with uid = 824.
verify found no changes in insn with uid = 829.
verify found no changes in insn with uid = 833.
verify found no changes in insn with uid = 837.
verify found no changes in insn with uid = 842.
verify found no changes in insn with uid = 846.
verify found no changes in insn with uid = 852.
verify found no changes in insn with uid = 857.
verify found no changes in insn with uid = 862.
verify found no changes in insn with uid = 867.
verify found no changes in insn with uid = 872.
verify found no changes in insn with uid = 877.
verify found no changes in insn with uid = 882.
verify found no changes in insn with uid = 887.
verify found no changes in insn with uid = 891.
verify found no changes in insn with uid = 895.
verify found no changes in insn with uid = 899.
verify found no changes in insn with uid = 913.
verify found no changes in insn with uid = 917.
verify found no changes in insn with uid = 921.
verify found no changes in insn with uid = 925.
verify found no changes in insn with uid = 930.
verify found no changes in insn with uid = 934.
verify found no changes in insn with uid = 938.
verify found no changes in insn with uid = 942.
verify found no changes in insn with uid = 947.
verify found no changes in insn with uid = 951.
verify found no changes in insn with uid = 955.
verify found no changes in insn with uid = 960.
verify found no changes in insn with uid = 964.
verify found no changes in insn with uid = 968.
verify found no changes in insn with uid = 974.
verify found no changes in insn with uid = 979.
verify found no changes in insn with uid = 984.
verify found no changes in insn with uid = 989.
verify found no changes in insn with uid = 994.
verify found no changes in insn with uid = 999.
verify found no changes in insn with uid = 1004.
verify found no changes in insn with uid = 1009.
verify found no changes in insn with uid = 1017.
verify found no changes in insn with uid = 1021.
verify found no changes in insn with uid = 1025.
verify found no changes in insn with uid = 1029.
verify found no changes in insn with uid = 1034.
verify found no changes in insn with uid = 1038.
verify found no changes in insn with uid = 1042.
verify found no changes in insn with uid = 1046.
verify found no changes in insn with uid = 1051.
verify found no changes in insn with uid = 1055.
verify found no changes in insn with uid = 1059.
verify found no changes in insn with uid = 1065.
verify found no changes in insn with uid = 1070.
verify found no changes in insn with uid = 1075.
verify found no changes in insn with uid = 1080.
verify found no changes in insn with uid = 1085.
verify found no changes in insn with uid = 1090.
verify found no changes in insn with uid = 1095.
verify found no changes in insn with uid = 1100.
verify found no changes in insn with uid = 1109.
verify found no changes in insn with uid = 1112.
verify found no changes in insn with uid = 1118.
verify found no changes in insn with uid = 1122.
verify found no changes in insn with uid = 1126.
verify found no changes in insn with uid = 1140.
verify found no changes in insn with uid = 1144.
verify found no changes in insn with uid = 1148.
verify found no changes in insn with uid = 1172.
verify found no changes in insn with uid = 1181.
verify found no changes in insn with uid = 1190.
verify found no changes in insn with uid = 1199.
verify found no changes in insn with uid = 1208.
verify found no changes in insn with uid = 1214.
verify found no changes in insn with uid = 1224.
verify found no changes in insn with uid = 1228.
verify found no changes in insn with uid = 1232.
verify found no changes in insn with uid = 1256.
verify found no changes in insn with uid = 1265.
verify found no changes in insn with uid = 1274.
verify found no changes in insn with uid = 1283.
verify found no changes in insn with uid = 1292.
verify found no changes in insn with uid = 1298.
verify found no changes in insn with uid = 1309.
verify found no changes in insn with uid = 1315.
verify found no changes in insn with uid = 1321.
verify found no changes in insn with uid = 1325.
verify found no changes in insn with uid = 1334.
verify found no changes in insn with uid = 1343.
verify found no changes in insn with uid = 1349.
verify found no changes in insn with uid = 1357.
verify found no changes in insn with uid = 1366.
verify found no changes in insn with uid = 1374.
verify found no changes in insn with uid = 1378.
verify found no changes in insn with uid = 1385.
verify found no changes in insn with uid = 1394.
verify found no changes in insn with uid = 1403.
verify found no changes in insn with uid = 1412.
verify found no changes in insn with uid = 1421.
verify found no changes in insn with uid = 1430.
verify found no changes in insn with uid = 1439.
verify found no changes in insn with uid = 1448.
verify found no changes in insn with uid = 1455.
verify found no changes in insn with uid = 1462.
verify found no changes in insn with uid = 1465.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r469: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r469,l0) best DIREG, allocno GENERAL_REGS
    r468: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r468,l0) best DIREG, allocno GENERAL_REGS
    r466: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r466,l0) best AREG, allocno GENERAL_REGS
    r465: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r465,l0) best DIREG, allocno GENERAL_REGS
    r463: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r463,l0) best AREG, allocno GENERAL_REGS
    r462: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r462,l0) best DIREG, allocno GENERAL_REGS
    r460: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r460,l0) best AREG, allocno GENERAL_REGS
    r459: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r459,l0) best DIREG, allocno GENERAL_REGS
    r457: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r457,l0) best AREG, allocno GENERAL_REGS
    r456: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r456,l0) best DIREG, allocno GENERAL_REGS
    r454: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r454,l0) best AREG, allocno GENERAL_REGS
    r453: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r453,l0) best DIREG, allocno GENERAL_REGS
    r451: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r451,l0) best AREG, allocno GENERAL_REGS
    r450: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r450,l0) best DIREG, allocno GENERAL_REGS
    r447: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r447,l0) best AREG, allocno GENERAL_REGS
    r446: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r446,l0) best AREG, allocno GENERAL_REGS
    r445: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r445,l0) best DIREG, allocno GENERAL_REGS
    r442: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r442,l0) best AREG, allocno GENERAL_REGS
    r441: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r441,l0) best AREG, allocno GENERAL_REGS
    r440: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r440,l0) best DIREG, allocno GENERAL_REGS
    r439: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r439,l0) best DIREG, allocno GENERAL_REGS
    r438: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r438,l0) best DIREG, allocno GENERAL_REGS
    r437: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r437,l0) best DIREG, allocno GENERAL_REGS
    r436: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r436,l0) best SIREG, allocno GENERAL_REGS
    r435: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r435,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r434: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r434,l0) best AREG, allocno GENERAL_REGS
    r433: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r433,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r432: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a31 (r432,l0) best DIREG, allocno GENERAL_REGS
    r431: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a32 (r431,l0) best DIREG, allocno GENERAL_REGS
    r430: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a33 (r430,l0) best DIREG, allocno GENERAL_REGS
    r429: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a37 (r429,l0) best DIREG, allocno GENERAL_REGS
    r428: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a38 (r428,l0) best DIREG, allocno GENERAL_REGS
    r427: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a39 (r427,l0) best DIREG, allocno GENERAL_REGS
    r426: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a40 (r426,l0) best DIREG, allocno GENERAL_REGS
    r425: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a41 (r425,l0) best DIREG, allocno GENERAL_REGS
    r424: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a42 (r424,l0) best DIREG, allocno GENERAL_REGS
    r423: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a43 (r423,l0) best DIREG, allocno GENERAL_REGS
    r422: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a49 (r422,l0) best DIREG, allocno GENERAL_REGS
    r421: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a50 (r421,l0) best DIREG, allocno GENERAL_REGS
    r420: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a51 (r420,l0) best DIREG, allocno GENERAL_REGS
    r419: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a52 (r419,l0) best DIREG, allocno GENERAL_REGS
    r418: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a53 (r418,l0) best DIREG, allocno GENERAL_REGS
    r417: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a54 (r417,l0) best DIREG, allocno GENERAL_REGS
    r416: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a60 (r416,l0) best DIREG, allocno GENERAL_REGS
    r415: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a66 (r415,l0) best DIREG, allocno GENERAL_REGS
    r414: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a67 (r414,l0) best DIREG, allocno GENERAL_REGS
    r413: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a78 (r413,l0) best DIREG, allocno GENERAL_REGS
    r412: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a82 (r412,l0) best DIREG, allocno GENERAL_REGS
    r411: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a87 (r411,l0) best DIREG, allocno GENERAL_REGS
    r410: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a92 (r410,l0) best DIREG, allocno GENERAL_REGS
    r409: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a103 (r409,l0) best DIREG, allocno GENERAL_REGS
    r408: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a108 (r408,l0) best DIREG, allocno GENERAL_REGS
    r407: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a112 (r407,l0) best DIREG, allocno GENERAL_REGS
    r406: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a117 (r406,l0) best DIREG, allocno GENERAL_REGS
    r405: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a122 (r405,l0) best DIREG, allocno GENERAL_REGS
    r404: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a128 (r404,l0) best DIREG, allocno GENERAL_REGS
    r403: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a139 (r403,l0) best DIREG, allocno GENERAL_REGS
    r402: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a143 (r402,l0) best DIREG, allocno GENERAL_REGS
    r401: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a147 (r401,l0) best DIREG, allocno GENERAL_REGS
    r400: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a151 (r400,l0) best DIREG, allocno GENERAL_REGS
    r399: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a154 (r399,l0) best DIREG, allocno GENERAL_REGS
    r398: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a155 (r398,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r397: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a156 (r397,l0) best AREG, allocno GENERAL_REGS
    r396: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a159 (r396,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r395: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a160 (r395,l0) best DIREG, allocno GENERAL_REGS
    r394: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a164 (r394,l0) best DIREG, allocno GENERAL_REGS
    r393: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a166 (r393,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r392: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a170 (r392,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r391: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a171 (r391,l0) best DIREG, allocno GENERAL_REGS
    r390: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a172 (r390,l0) best DIREG, allocno GENERAL_REGS
    r389: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a173 (r389,l0) best DIREG, allocno GENERAL_REGS
    r388: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a174 (r388,l0) best DIREG, allocno GENERAL_REGS
    r387: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a175 (r387,l0) best DIREG, allocno GENERAL_REGS
    r386: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a176 (r386,l0) best DIREG, allocno GENERAL_REGS
    r385: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a177 (r385,l0) best DIREG, allocno GENERAL_REGS
    r384: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a179 (r384,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r383: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a178 (r383,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r382: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a180 (r382,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r381: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a181 (r381,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r380: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a182 (r380,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r379: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a183 (r379,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r378: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a184 (r378,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r377: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a190 (r377,l0) best SIREG, allocno GENERAL_REGS
    r376: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a191 (r376,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r375: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a193 (r375,l0) best DIREG, allocno GENERAL_REGS
    r374: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a198 (r374,l0) best SIREG, allocno GENERAL_REGS
    r373: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a199 (r373,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r372: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a200 (r372,l0) best DIREG, allocno GENERAL_REGS
    r371: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a201 (r371,l0) best DIREG, allocno GENERAL_REGS
    r370: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a202 (r370,l0) best DIREG, allocno GENERAL_REGS
    r369: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a203 (r369,l0) best DIREG, allocno GENERAL_REGS
    r368: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a204 (r368,l0) best DIREG, allocno GENERAL_REGS
    r367: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a205 (r367,l0) best DIREG, allocno GENERAL_REGS
    r366: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a207 (r366,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r365: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a206 (r365,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r364: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a208 (r364,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r363: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a209 (r363,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r362: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a210 (r362,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r361: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a211 (r361,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r360: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a212 (r360,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r359: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a218 (r359,l0) best SIREG, allocno GENERAL_REGS
    r358: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a219 (r358,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r357: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a221 (r357,l0) best DIREG, allocno GENERAL_REGS
    r356: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a226 (r356,l0) best SIREG, allocno GENERAL_REGS
    r355: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a227 (r355,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r354: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a233 (r354,l0) best SIREG, allocno GENERAL_REGS
    r353: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a234 (r353,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r352: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a248 (r352,l0) best DIREG, allocno GENERAL_REGS
    r351: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a252 (r351,l0) best SIREG, allocno GENERAL_REGS
    r350: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a253 (r350,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r349: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a257 (r349,l0) best SIREG, allocno GENERAL_REGS
    r348: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a258 (r348,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r347: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a262 (r347,l0) best SIREG, allocno GENERAL_REGS
    r346: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a263 (r346,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r345: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a266 (r345,l0) best SIREG, allocno GENERAL_REGS
    r344: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a267 (r344,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r343: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a270 (r343,l0) best SIREG, allocno GENERAL_REGS
    r342: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a271 (r342,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r341: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a276 (r341,l0) best DIREG, allocno GENERAL_REGS
    r340: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a278 (r340,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r339: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a282 (r339,l0) best DIREG, allocno GENERAL_REGS
    r338: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a285 (r338,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r337: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a286 (r337,l0) best DIREG, allocno GENERAL_REGS
    r336: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a288 (r336,l0) best DIREG, allocno GENERAL_REGS
    r335: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a289 (r335,l0) best SIREG, allocno GENERAL_REGS
    r334: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a290 (r334,l0) best DIREG, allocno GENERAL_REGS
    r333: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a292 (r333,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r332: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a293 (r332,l0) best DIREG, allocno GENERAL_REGS
    r331: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a295 (r331,l0) best DIREG, allocno GENERAL_REGS
    r330: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a296 (r330,l0) best SIREG, allocno GENERAL_REGS
    r329: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a297 (r329,l0) best DIREG, allocno GENERAL_REGS
    r328: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a299 (r328,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r327: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a300 (r327,l0) best DIREG, allocno GENERAL_REGS
    r326: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a302 (r326,l0) best DIREG, allocno GENERAL_REGS
    r325: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a303 (r325,l0) best SIREG, allocno GENERAL_REGS
    r324: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a304 (r324,l0) best DIREG, allocno GENERAL_REGS
    r323: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a306 (r323,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r322: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a307 (r322,l0) best DIREG, allocno GENERAL_REGS
    r321: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a309 (r321,l0) best DIREG, allocno GENERAL_REGS
    r320: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a310 (r320,l0) best SIREG, allocno GENERAL_REGS
    r319: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a311 (r319,l0) best DIREG, allocno GENERAL_REGS
    r318: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a313 (r318,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r317: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a314 (r317,l0) best DIREG, allocno GENERAL_REGS
    r316: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a316 (r316,l0) best DIREG, allocno GENERAL_REGS
    r315: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a317 (r315,l0) best SIREG, allocno GENERAL_REGS
    r314: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a318 (r314,l0) best DIREG, allocno GENERAL_REGS
    r313: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a320 (r313,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r312: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a321 (r312,l0) best DIREG, allocno GENERAL_REGS
    r311: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a323 (r311,l0) best DIREG, allocno GENERAL_REGS
    r310: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a324 (r310,l0) best SIREG, allocno GENERAL_REGS
    r309: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a325 (r309,l0) best DIREG, allocno GENERAL_REGS
    r308: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a327 (r308,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r307: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a328 (r307,l0) best DIREG, allocno GENERAL_REGS
    r306: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a330 (r306,l0) best DIREG, allocno GENERAL_REGS
    r305: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a331 (r305,l0) best SIREG, allocno GENERAL_REGS
    r304: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a332 (r304,l0) best DIREG, allocno GENERAL_REGS
    r303: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a334 (r303,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r302: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a336 (r302,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r301: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a335 (r301,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r300: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a337 (r300,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r299: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a338 (r299,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r298: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a339 (r298,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r297: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a340 (r297,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r296: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a341 (r296,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r295: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a345 (r295,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r294: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a352 (r294,l0) best DIREG, allocno GENERAL_REGS
    r293: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a354 (r293,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r292: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a356 (r292,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r291: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a360 (r291,l0) best DIREG, allocno GENERAL_REGS
    r290: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a361 (r290,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r289: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a362 (r289,l0) best DIREG, allocno GENERAL_REGS
    r288: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a363 (r288,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r287: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a364 (r287,l0) best DIREG, allocno GENERAL_REGS
    r286: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a365 (r286,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r285: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a366 (r285,l0) best DIREG, allocno GENERAL_REGS
    r284: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a368 (r284,l0) best DIREG, allocno GENERAL_REGS
    r283: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a369 (r283,l0) best DIREG, allocno GENERAL_REGS
    r282: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a370 (r282,l0) best DIREG, allocno GENERAL_REGS
    r281: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a371 (r281,l0) best DIREG, allocno GENERAL_REGS
    r280: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a372 (r280,l0) best SIREG, allocno GENERAL_REGS
    r279: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a373 (r279,l0) best DREG, allocno GENERAL_REGS
    r278: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a374 (r278,l0) best DIREG, allocno GENERAL_REGS
    r277: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a375 (r277,l0) best DIREG, allocno GENERAL_REGS
    r275: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r275,l0) best DIREG, allocno GENERAL_REGS
    r274: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a279 (r274,l0) best AREG, allocno GENERAL_REGS
    r273: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a280 (r273,l0) best AREG, allocno GENERAL_REGS
    r272: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a281 (r272,l0) best SIREG, allocno GENERAL_REGS
    r271: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a283 (r271,l0) best AREG, allocno GENERAL_REGS
    r270: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a284 (r270,l0) best DIREG, allocno GENERAL_REGS
    r269: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a34 (r269,l0) best AREG, allocno GENERAL_REGS
    r268: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a35 (r268,l0) best DIREG, allocno GENERAL_REGS
    r267: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a36 (r267,l0) best AREG, allocno GENERAL_REGS
    r266: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r266,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r265: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a45 (r265,l0) best AREG, allocno GENERAL_REGS
    r264: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a46 (r264,l0) best AREG, allocno GENERAL_REGS
    r263: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a47 (r263,l0) best DIREG, allocno GENERAL_REGS
    r262: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a48 (r262,l0) best AREG, allocno GENERAL_REGS
    r261: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r261,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r260: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a56 (r260,l0) best AREG, allocno GENERAL_REGS
    r259: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a57 (r259,l0) best AREG, allocno GENERAL_REGS
    r258: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a58 (r258,l0) best DIREG, allocno GENERAL_REGS
    r257: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a59 (r257,l0) best AREG, allocno GENERAL_REGS
    r256: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r256,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r255: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a62 (r255,l0) best AREG, allocno GENERAL_REGS
    r254: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a63 (r254,l0) best AREG, allocno GENERAL_REGS
    r253: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a64 (r253,l0) best DIREG, allocno GENERAL_REGS
    r252: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a65 (r252,l0) best AREG, allocno GENERAL_REGS
    r251: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a68 (r251,l0) best AREG, allocno GENERAL_REGS
    r250: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a69 (r250,l0) best AREG, allocno GENERAL_REGS
    r249: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a71 (r249,l0) best AREG, allocno GENERAL_REGS
    r248: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a72 (r248,l0) best AREG, allocno GENERAL_REGS
    r247: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a74 (r247,l0) best AREG, allocno GENERAL_REGS
    r246: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a75 (r246,l0) best AREG, allocno GENERAL_REGS
    r245: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a77 (r245,l0) best AREG, allocno GENERAL_REGS
    r244: preferred SSE_FIRST_REG, alternative INT_SSE_REGS, allocno INT_SSE_REGS
    a76 (r244,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r243: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a79 (r243,l0) best AREG, allocno GENERAL_REGS
    r242: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a80 (r242,l0) best DIREG, allocno GENERAL_REGS
    r241: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a81 (r241,l0) best AREG, allocno GENERAL_REGS
    r240: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a73 (r240,l0) best AREG, allocno GENERAL_REGS
    r239: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a83 (r239,l0) best AREG, allocno GENERAL_REGS
    r238: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a84 (r238,l0) best AREG, allocno GENERAL_REGS
    r237: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a85 (r237,l0) best DIREG, allocno GENERAL_REGS
    r236: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a86 (r236,l0) best AREG, allocno GENERAL_REGS
    r235: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a70 (r235,l0) best AREG, allocno GENERAL_REGS
    r234: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a88 (r234,l0) best AREG, allocno GENERAL_REGS
    r233: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a89 (r233,l0) best AREG, allocno GENERAL_REGS
    r232: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a90 (r232,l0) best DIREG, allocno GENERAL_REGS
    r231: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a91 (r231,l0) best AREG, allocno GENERAL_REGS
    r230: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a93 (r230,l0) best AREG, allocno GENERAL_REGS
    r229: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a94 (r229,l0) best AREG, allocno GENERAL_REGS
    r228: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a96 (r228,l0) best AREG, allocno GENERAL_REGS
    r227: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a97 (r227,l0) best AREG, allocno GENERAL_REGS
    r226: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a99 (r226,l0) best AREG, allocno GENERAL_REGS
    r225: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a100 (r225,l0) best AREG, allocno GENERAL_REGS
    r224: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a102 (r224,l0) best AREG, allocno GENERAL_REGS
    r223: preferred SSE_FIRST_REG, alternative INT_SSE_REGS, allocno INT_SSE_REGS
    a104 (r223,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r222: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a105 (r222,l0) best AREG, allocno GENERAL_REGS
    r221: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a106 (r221,l0) best DIREG, allocno GENERAL_REGS
    r220: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a107 (r220,l0) best AREG, allocno GENERAL_REGS
    r219: preferred SSE_FIRST_REG, alternative INT_SSE_REGS, allocno INT_SSE_REGS
    a101 (r219,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r218: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a109 (r218,l0) best AREG, allocno GENERAL_REGS
    r217: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a110 (r217,l0) best DIREG, allocno GENERAL_REGS
    r216: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a111 (r216,l0) best AREG, allocno GENERAL_REGS
    r215: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a98 (r215,l0) best AREG, allocno GENERAL_REGS
    r214: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a113 (r214,l0) best AREG, allocno GENERAL_REGS
    r213: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a114 (r213,l0) best AREG, allocno GENERAL_REGS
    r212: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a115 (r212,l0) best DIREG, allocno GENERAL_REGS
    r211: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a116 (r211,l0) best AREG, allocno GENERAL_REGS
    r210: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a95 (r210,l0) best AREG, allocno GENERAL_REGS
    r209: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a118 (r209,l0) best AREG, allocno GENERAL_REGS
    r208: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a119 (r208,l0) best AREG, allocno GENERAL_REGS
    r207: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a120 (r207,l0) best DIREG, allocno GENERAL_REGS
    r206: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a121 (r206,l0) best AREG, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a124 (r204,l0) best AREG, allocno GENERAL_REGS
    r203: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a125 (r203,l0) best AREG, allocno GENERAL_REGS
    r202: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a126 (r202,l0) best DIREG, allocno GENERAL_REGS
    r201: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a127 (r201,l0) best AREG, allocno GENERAL_REGS
    r200: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a129 (r200,l0) best AREG, allocno GENERAL_REGS
    r199: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a130 (r199,l0) best AREG, allocno GENERAL_REGS
    r198: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a132 (r198,l0) best AREG, allocno GENERAL_REGS
    r197: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a133 (r197,l0) best AREG, allocno GENERAL_REGS
    r196: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a135 (r196,l0) best AREG, allocno GENERAL_REGS
    r195: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a136 (r195,l0) best AREG, allocno GENERAL_REGS
    r194: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a138 (r194,l0) best AREG, allocno GENERAL_REGS
    r193: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a140 (r193,l0) best AREG, allocno GENERAL_REGS
    r192: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a141 (r192,l0) best DIREG, allocno GENERAL_REGS
    r191: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a142 (r191,l0) best AREG, allocno GENERAL_REGS
    r190: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a137 (r190,l0) best AREG, allocno GENERAL_REGS
    r189: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a144 (r189,l0) best AREG, allocno GENERAL_REGS
    r188: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a145 (r188,l0) best DIREG, allocno GENERAL_REGS
    r187: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a146 (r187,l0) best AREG, allocno GENERAL_REGS
    r186: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a134 (r186,l0) best AREG, allocno GENERAL_REGS
    r185: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a148 (r185,l0) best AREG, allocno GENERAL_REGS
    r184: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a149 (r184,l0) best DIREG, allocno GENERAL_REGS
    r183: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a150 (r183,l0) best AREG, allocno GENERAL_REGS
    r182: preferred SSE_FIRST_REG, alternative INT_SSE_REGS, allocno INT_SSE_REGS
    a131 (r182,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r181: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a152 (r181,l0) best DIREG, allocno GENERAL_REGS
    r180: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a153 (r180,l0) best AREG, allocno GENERAL_REGS
    r179: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r179,l0) best AREG, allocno GENERAL_REGS
    r178: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a28 (r178,l0) best DIREG, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a157 (r176,l0) best DIREG, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a158 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a161 (r174,l0) best AREG, allocno GENERAL_REGS
    r173: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a162 (r173,l0) best AREG, allocno GENERAL_REGS
    r172: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a163 (r172,l0) best AREG, allocno GENERAL_REGS
    r171: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a165 (r171,l0) best DIREG, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a185 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a186 (r169,l0) best AREG, allocno GENERAL_REGS
    r168: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a187 (r168,l0) best AREG, allocno GENERAL_REGS
    r167: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a188 (r167,l0) best AREG, allocno GENERAL_REGS
    r166: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a189 (r166,l0) best DIREG, allocno GENERAL_REGS
    r165: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a192 (r165,l0) best AREG, allocno GENERAL_REGS
    r164: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a194 (r164,l0) best AREG, allocno GENERAL_REGS
    r163: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a195 (r163,l0) best AREG, allocno GENERAL_REGS
    r162: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a196 (r162,l0) best AREG, allocno GENERAL_REGS
    r161: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a197 (r161,l0) best DIREG, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a213 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a214 (r159,l0) best AREG, allocno GENERAL_REGS
    r158: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a215 (r158,l0) best AREG, allocno GENERAL_REGS
    r157: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a216 (r157,l0) best AREG, allocno GENERAL_REGS
    r156: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a217 (r156,l0) best DIREG, allocno GENERAL_REGS
    r155: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a220 (r155,l0) best AREG, allocno GENERAL_REGS
    r154: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a222 (r154,l0) best AREG, allocno GENERAL_REGS
    r153: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a223 (r153,l0) best AREG, allocno GENERAL_REGS
    r152: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a224 (r152,l0) best AREG, allocno GENERAL_REGS
    r151: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a225 (r151,l0) best DIREG, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a228 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a229 (r149,l0) best AREG, allocno GENERAL_REGS
    r148: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a230 (r148,l0) best AREG, allocno GENERAL_REGS
    r147: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a231 (r147,l0) best AREG, allocno GENERAL_REGS
    r146: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a232 (r146,l0) best DIREG, allocno GENERAL_REGS
    r145: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a235 (r145,l0) best AREG, allocno GENERAL_REGS
    r144: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a236 (r144,l0) best AREG, allocno GENERAL_REGS
    r143: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a238 (r143,l0) best AREG, allocno GENERAL_REGS
    r142: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a239 (r142,l0) best AREG, allocno GENERAL_REGS
    r141: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a241 (r141,l0) best AREG, allocno GENERAL_REGS
    r140: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a242 (r140,l0) best AREG, allocno GENERAL_REGS
    r139: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a244 (r139,l0) best AREG, allocno GENERAL_REGS
    r138: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a245 (r138,l0) best AREG, allocno GENERAL_REGS
    r137: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a247 (r137,l0) best AREG, allocno GENERAL_REGS
    r136: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a249 (r136,l0) best AREG, allocno GENERAL_REGS
    r135: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a250 (r135,l0) best AREG, allocno GENERAL_REGS
    r134: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a251 (r134,l0) best DIREG, allocno GENERAL_REGS
    r133: preferred SSE_FIRST_REG, alternative INT_SSE_REGS, allocno INT_SSE_REGS
    a246 (r133,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r132: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a254 (r132,l0) best AREG, allocno GENERAL_REGS
    r131: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a255 (r131,l0) best AREG, allocno GENERAL_REGS
    r130: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a256 (r130,l0) best DIREG, allocno GENERAL_REGS
    r129: preferred SSE_FIRST_REG, alternative INT_SSE_REGS, allocno INT_SSE_REGS
    a243 (r129,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r128: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a259 (r128,l0) best AREG, allocno GENERAL_REGS
    r127: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a260 (r127,l0) best AREG, allocno GENERAL_REGS
    r126: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a261 (r126,l0) best DIREG, allocno GENERAL_REGS
    r125: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a240 (r125,l0) best AREG, allocno GENERAL_REGS
    r124: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a264 (r124,l0) best AREG, allocno GENERAL_REGS
    r123: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a265 (r123,l0) best DIREG, allocno GENERAL_REGS
    r122: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a237 (r122,l0) best AREG, allocno GENERAL_REGS
    r121: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a268 (r121,l0) best AREG, allocno GENERAL_REGS
    r120: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a269 (r120,l0) best DIREG, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a167 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a168 (r118,l0) best AREG, allocno GENERAL_REGS
    r117: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a169 (r117,l0) best DIREG, allocno GENERAL_REGS
    r116: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a272 (r116,l0) best AREG, allocno GENERAL_REGS
    r115: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a273 (r115,l0) best AREG, allocno GENERAL_REGS
    r114: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a274 (r114,l0) best AREG, allocno GENERAL_REGS
    r113: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a275 (r113,l0) best AREG, allocno GENERAL_REGS
    r112: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a277 (r112,l0) best DIREG, allocno GENERAL_REGS
    r111: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a287 (r111,l0) best AREG, allocno GENERAL_REGS
    r110: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a291 (r110,l0) best SIREG, allocno GENERAL_REGS
    r109: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a294 (r109,l0) best AREG, allocno GENERAL_REGS
    r108: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a298 (r108,l0) best SIREG, allocno GENERAL_REGS
    r107: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a301 (r107,l0) best AREG, allocno GENERAL_REGS
    r106: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a305 (r106,l0) best SIREG, allocno GENERAL_REGS
    r105: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a308 (r105,l0) best AREG, allocno GENERAL_REGS
    r104: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a312 (r104,l0) best SIREG, allocno GENERAL_REGS
    r103: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a315 (r103,l0) best AREG, allocno GENERAL_REGS
    r102: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a319 (r102,l0) best SIREG, allocno GENERAL_REGS
    r101: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a322 (r101,l0) best AREG, allocno GENERAL_REGS
    r100: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a326 (r100,l0) best SIREG, allocno GENERAL_REGS
    r99: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a329 (r99,l0) best AREG, allocno GENERAL_REGS
    r98: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a333 (r98,l0) best SIREG, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a342 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a343 (r96,l0) best AREG, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a344 (r95,l0) best DIREG, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a346 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a347 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a349 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a350 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a351 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a353 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a348 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a355 (r87,l0) best DIREG, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a357 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a358 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a359 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a367 (r83,l0) best AREG, allocno GENERAL_REGS

  a0(r275,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r441,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:32 SSE_REGS:32 ALL_SSE_REGS:32 MMX_REGS:37 FP_TOP_SSE_REGS:508 FP_SECOND_SSE_REGS:508 FLOAT_SSE_REGS:508 FLOAT_INT_REGS:508 INT_SSE_REGS:33 FLOAT_INT_SSE_REGS:508 ALL_REGS:508 MEM:6
  a2(r469,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a3(r446,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:72 SSE_REGS:72 ALL_SSE_REGS:72 MMX_REGS:77 FP_TOP_SSE_REGS:1008 FP_SECOND_SSE_REGS:1008 FLOAT_SSE_REGS:1008 FLOAT_INT_REGS:1008 INT_SSE_REGS:73 FLOAT_INT_SSE_REGS:1008 ALL_REGS:1008 MEM:11
  a4(r468,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a5(r466,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a6(r465,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a7(r463,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a8(r462,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a9(r460,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a10(r459,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a11(r457,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a12(r456,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a13(r454,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a14(r453,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a15(r451,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a16(r450,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a17(r447,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a18(r445,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a19(r442,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a20(r440,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a21(r439,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a22(r438,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a23(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:308 INT_SSE_REGS:308 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a24(r437,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a25(r436,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a26(r435,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a27(r434,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a28(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a29(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a30(r433,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a31(r432,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a32(r431,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a33(r430,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a34(r269,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:308 INT_SSE_REGS:308 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a35(r268,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a36(r267,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a37(r429,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a38(r428,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a39(r427,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a40(r426,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a41(r425,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a42(r424,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a43(r423,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a44(r266,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:48 SSE_REGS:48 ALL_SSE_REGS:48 MMX_REGS:73 FP_TOP_SSE_REGS:1140 FP_SECOND_SSE_REGS:1140 FLOAT_SSE_REGS:1140 FLOAT_INT_REGS:1140 INT_SSE_REGS:53 FLOAT_INT_SSE_REGS:1140 ALL_REGS:1140 MEM:17
  a45(r265,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a46(r264,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a47(r263,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a48(r262,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a49(r422,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a50(r421,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a51(r420,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a52(r419,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a53(r418,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a54(r417,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a55(r261,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:48 SSE_REGS:48 ALL_SSE_REGS:48 MMX_REGS:73 FP_TOP_SSE_REGS:1140 FP_SECOND_SSE_REGS:1140 FLOAT_SSE_REGS:1140 FLOAT_INT_REGS:1140 INT_SSE_REGS:53 FLOAT_INT_SSE_REGS:1140 ALL_REGS:1140 MEM:17
  a56(r260,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a57(r259,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a58(r258,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a59(r257,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a60(r416,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a61(r256,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:24 SSE_REGS:24 ALL_SSE_REGS:24 MMX_REGS:34 FP_TOP_SSE_REGS:516 FP_SECOND_SSE_REGS:516 FLOAT_SSE_REGS:516 FLOAT_INT_REGS:516 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:516 ALL_REGS:516 MEM:8
  a62(r255,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a63(r254,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a64(r253,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a65(r252,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a66(r415,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a67(r414,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a68(r251,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a69(r250,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a70(r235,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a71(r249,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a72(r248,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a73(r240,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a74(r247,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a75(r246,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a76(r244,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FP_TOP_REG:18 FP_SECOND_REG:18 FLOAT_REGS:18 SSE_FIRST_REG:16 SSE_REGS:0 ALL_SSE_REGS:0 FP_TOP_SSE_REGS:20 FP_SECOND_SSE_REGS:20 FLOAT_SSE_REGS:20 FLOAT_INT_REGS:18 INT_SSE_REGS:16 FLOAT_INT_SSE_REGS:20 ALL_REGS:20 MEM:2
  a77(r245,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a78(r413,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a79(r243,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a80(r242,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a81(r241,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a82(r412,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a83(r239,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a84(r238,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a85(r237,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a86(r236,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a87(r411,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a88(r234,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a89(r233,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a90(r232,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a91(r231,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a92(r410,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a93(r230,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a94(r229,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a95(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a96(r228,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a97(r227,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a98(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a99(r226,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a100(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a101(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FP_TOP_REG:18 FP_SECOND_REG:18 FLOAT_REGS:18 SSE_FIRST_REG:16 SSE_REGS:0 ALL_SSE_REGS:0 FP_TOP_SSE_REGS:20 FP_SECOND_SSE_REGS:20 FLOAT_SSE_REGS:20 FLOAT_INT_REGS:18 INT_SSE_REGS:16 FLOAT_INT_SSE_REGS:20 ALL_REGS:20 MEM:2
  a102(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a103(r409,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a104(r223,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FP_TOP_REG:18 FP_SECOND_REG:18 FLOAT_REGS:18 SSE_FIRST_REG:16 SSE_REGS:0 ALL_SSE_REGS:0 FP_TOP_SSE_REGS:20 FP_SECOND_SSE_REGS:20 FLOAT_SSE_REGS:20 FLOAT_INT_REGS:18 INT_SSE_REGS:16 FLOAT_INT_SSE_REGS:20 ALL_REGS:20 MEM:2
  a105(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a106(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a107(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a108(r408,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a109(r218,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a110(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a111(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a112(r407,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a113(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a114(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a115(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a116(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a117(r406,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a118(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a119(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a120(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a121(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a122(r405,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a123(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:24 SSE_REGS:24 ALL_SSE_REGS:24 MMX_REGS:34 FP_TOP_SSE_REGS:516 FP_SECOND_SSE_REGS:516 FLOAT_SSE_REGS:516 FLOAT_INT_REGS:516 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:516 ALL_REGS:516 MEM:8
  a124(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a125(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a126(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a127(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a128(r404,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a129(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a130(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a131(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FP_TOP_REG:18 FP_SECOND_REG:18 FLOAT_REGS:18 SSE_FIRST_REG:16 SSE_REGS:0 ALL_SSE_REGS:0 FP_TOP_SSE_REGS:20 FP_SECOND_SSE_REGS:20 FLOAT_SSE_REGS:20 FLOAT_INT_REGS:18 INT_SSE_REGS:16 FLOAT_INT_SSE_REGS:20 ALL_REGS:20 MEM:2
  a132(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a133(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a134(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a135(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a136(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a137(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a138(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a139(r403,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a140(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a141(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a142(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a143(r402,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a144(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a145(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a146(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a147(r401,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a148(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a149(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a150(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a151(r400,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a152(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a153(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a154(r399,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a155(r398,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a156(r397,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a157(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a158(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a159(r396,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a160(r395,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a161(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a162(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a163(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a164(r394,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a165(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a166(r393,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a167(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:416 INT_SSE_REGS:416 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a168(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a169(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a170(r392,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a171(r391,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a172(r390,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a173(r389,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a174(r388,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a175(r387,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a176(r386,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a177(r385,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a178(r383,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a179(r384,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a180(r382,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a181(r381,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a182(r380,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:24 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a183(r379,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a184(r378,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a185(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:24 SSE_REGS:24 ALL_SSE_REGS:24 MMX_REGS:29 FP_TOP_SSE_REGS:408 FP_SECOND_SSE_REGS:408 FLOAT_SSE_REGS:408 FLOAT_INT_REGS:408 INT_SSE_REGS:25 FLOAT_INT_SSE_REGS:408 ALL_REGS:408 MEM:7
  a186(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a187(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a188(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a189(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a190(r377,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a191(r376,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a192(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a193(r375,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a194(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a195(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a196(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a197(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a198(r374,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a199(r373,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a200(r372,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a201(r371,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a202(r370,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a203(r369,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a204(r368,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a205(r367,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a206(r365,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a207(r366,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a208(r364,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a209(r363,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a210(r362,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:24 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a211(r361,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a212(r360,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a213(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:24 SSE_REGS:24 ALL_SSE_REGS:24 MMX_REGS:29 FP_TOP_SSE_REGS:408 FP_SECOND_SSE_REGS:408 FLOAT_SSE_REGS:408 FLOAT_INT_REGS:408 INT_SSE_REGS:25 FLOAT_INT_SSE_REGS:408 ALL_REGS:408 MEM:7
  a214(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a215(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a216(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a217(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a218(r359,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a219(r358,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a220(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a221(r357,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a222(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a223(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a224(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a225(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a226(r356,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a227(r355,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a228(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:24 SSE_REGS:24 ALL_SSE_REGS:24 MMX_REGS:34 FP_TOP_SSE_REGS:516 FP_SECOND_SSE_REGS:516 FLOAT_SSE_REGS:516 FLOAT_INT_REGS:516 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:516 ALL_REGS:516 MEM:7
  a229(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a230(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a231(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a232(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a233(r354,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a234(r353,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a235(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a236(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a237(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a238(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a239(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a240(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a241(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a242(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a243(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FP_TOP_REG:18 FP_SECOND_REG:18 FLOAT_REGS:18 SSE_FIRST_REG:16 SSE_REGS:0 ALL_SSE_REGS:0 FP_TOP_SSE_REGS:20 FP_SECOND_SSE_REGS:20 FLOAT_SSE_REGS:20 FLOAT_INT_REGS:18 INT_SSE_REGS:16 FLOAT_INT_SSE_REGS:20 ALL_REGS:20 MEM:2
  a244(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a245(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a246(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FP_TOP_REG:18 FP_SECOND_REG:18 FLOAT_REGS:18 SSE_FIRST_REG:16 SSE_REGS:0 ALL_SSE_REGS:0 FP_TOP_SSE_REGS:20 FP_SECOND_SSE_REGS:20 FLOAT_SSE_REGS:20 FLOAT_INT_REGS:18 INT_SSE_REGS:16 FLOAT_INT_SSE_REGS:20 ALL_REGS:20 MEM:2
  a247(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a248(r352,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a249(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a250(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a251(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a252(r351,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a253(r350,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a254(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a255(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a256(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a257(r349,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a258(r348,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a259(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a260(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a261(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a262(r347,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a263(r346,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a264(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a265(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a266(r345,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a267(r344,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a268(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a269(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a270(r343,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a271(r342,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a272(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a273(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a274(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a275(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a276(r341,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a277(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a278(r340,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a279(r274,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a280(r273,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a281(r272,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a282(r339,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a283(r271,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a284(r270,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a285(r338,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a286(r337,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a287(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a288(r336,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a289(r335,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a290(r334,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a291(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a292(r333,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a293(r332,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a294(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a295(r331,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a296(r330,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a297(r329,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a298(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a299(r328,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a300(r327,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a301(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a302(r326,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a303(r325,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a304(r324,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a305(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a306(r323,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a307(r322,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a308(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a309(r321,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a310(r320,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a311(r319,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a312(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a313(r318,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a314(r317,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a315(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a316(r316,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a317(r315,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a318(r314,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a319(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a320(r313,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a321(r312,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a322(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a323(r311,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a324(r310,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a325(r309,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a326(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a327(r308,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a328(r307,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a329(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a330(r306,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a331(r305,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a332(r304,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a333(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a334(r303,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a335(r301,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a336(r302,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a337(r300,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a338(r299,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a339(r298,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:24 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a340(r297,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a341(r296,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a342(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:24 SSE_REGS:24 ALL_SSE_REGS:24 MMX_REGS:29 FP_TOP_SSE_REGS:408 FP_SECOND_SSE_REGS:408 FLOAT_SSE_REGS:408 FLOAT_INT_REGS:408 INT_SSE_REGS:25 FLOAT_INT_SSE_REGS:408 ALL_REGS:408 MEM:7
  a343(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a344(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a345(r295,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a346(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a347(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a348(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a349(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a350(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a351(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a352(r294,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a353(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a354(r293,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a355(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a356(r292,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a357(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a358(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a359(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:308 INT_SSE_REGS:308 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a360(r291,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a361(r290,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a362(r289,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a363(r288,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a364(r287,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a365(r286,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a366(r285,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a367(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a368(r284,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a369(r283,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a370(r282,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a371(r281,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a372(r280,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a373(r279,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a374(r278,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a375(r277,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7

   Insn 1465(l0): point = 1
   Insn 1464(l0): point = 3
   Insn 1463(l0): point = 5
   Insn 1462(l0): point = 7
   Insn 1461(l0): point = 9
   Insn 1460(l0): point = 11
   Insn 1616(l0): point = 14
   Insn 1788(l0): point = 17
   Insn 1456(l0): point = 19
   Insn 1455(l0): point = 21
   Insn 1454(l0): point = 23
   Insn 1453(l0): point = 25
   Insn 1622(l0): point = 28
   Insn 1786(l0): point = 31
   Insn 1449(l0): point = 33
   Insn 1448(l0): point = 35
   Insn 1447(l0): point = 37
   Insn 1446(l0): point = 39
   Insn 1652(l0): point = 41
   Insn 1784(l0): point = 44
   Insn 1440(l0): point = 46
   Insn 1439(l0): point = 48
   Insn 1438(l0): point = 50
   Insn 1437(l0): point = 52
   Insn 1648(l0): point = 54
   Insn 1782(l0): point = 57
   Insn 1431(l0): point = 59
   Insn 1430(l0): point = 61
   Insn 1429(l0): point = 63
   Insn 1428(l0): point = 65
   Insn 1644(l0): point = 67
   Insn 1780(l0): point = 70
   Insn 1422(l0): point = 72
   Insn 1421(l0): point = 74
   Insn 1420(l0): point = 76
   Insn 1419(l0): point = 78
   Insn 1640(l0): point = 80
   Insn 1778(l0): point = 83
   Insn 1413(l0): point = 85
   Insn 1412(l0): point = 87
   Insn 1411(l0): point = 89
   Insn 1410(l0): point = 91
   Insn 1636(l0): point = 93
   Insn 1776(l0): point = 96
   Insn 1404(l0): point = 98
   Insn 1403(l0): point = 100
   Insn 1402(l0): point = 102
   Insn 1401(l0): point = 104
   Insn 1632(l0): point = 106
   Insn 1774(l0): point = 109
   Insn 1395(l0): point = 111
   Insn 1394(l0): point = 113
   Insn 1393(l0): point = 115
   Insn 1392(l0): point = 117
   Insn 1628(l0): point = 119
   Insn 1772(l0): point = 122
   Insn 1386(l0): point = 124
   Insn 1385(l0): point = 126
   Insn 1384(l0): point = 128
   Insn 1383(l0): point = 130
   Insn 1612(l0): point = 132
   Insn 1770(l0): point = 135
   Insn 1378(l0): point = 137
   Insn 1377(l0): point = 139
   Insn 1376(l0): point = 141
   Insn 1374(l0): point = 144
   Insn 1373(l0): point = 146
   Insn 1372(l0): point = 148
   Insn 1315(l0): point = 151
   Insn 1314(l0): point = 153
   Insn 1313(l0): point = 155
   Insn 1312(l0): point = 157
   Insn 1311(l0): point = 159
   Insn 1309(l0): point = 162
   Insn 1308(l0): point = 164
   Insn 1307(l0): point = 166
   Insn 1306(l0): point = 168
   Insn 1298(l0): point = 171
   Insn 1297(l0): point = 173
   Insn 1296(l0): point = 175
   Insn 1295(l0): point = 177
   Insn 1294(l0): point = 179
   Insn 1292(l0): point = 182
   Insn 1291(l0): point = 184
   Insn 1290(l0): point = 186
   Insn 1289(l0): point = 188
   Insn 1750(l0): point = 191
   Insn 1747(l0): point = 194
   Insn 1214(l0): point = 197
   Insn 1213(l0): point = 199
   Insn 1212(l0): point = 201
   Insn 1211(l0): point = 203
   Insn 1210(l0): point = 205
   Insn 1208(l0): point = 208
   Insn 1207(l0): point = 210
   Insn 1206(l0): point = 212
   Insn 1205(l0): point = 214
   Insn 1730(l0): point = 217
   Insn 1727(l0): point = 220
   Insn 1724(l0): point = 223
   Insn 1112(l0): point = 226
   Insn 1111(l0): point = 228
   Insn 1109(l0): point = 231
   Insn 1108(l0): point = 233
   Insn 1107(l0): point = 235
   Insn 1106(l0): point = 237
   Insn 1714(l0): point = 240
   Insn 811(l0): point = 243
   Insn 810(l0): point = 245
   Insn 809(l0): point = 247
   Insn 808(l0): point = 249
   Insn 807(l0): point = 251
   Insn 806(l0): point = 253
   Insn 805(l0): point = 255
   Insn 1370(l0): point = 258
   Insn 1369(l0): point = 260
   Insn 1367(l0): point = 262
   Insn 1366(l0): point = 264
   Insn 1365(l0): point = 266
   Insn 1364(l0): point = 268
   Insn 1363(l0): point = 270
   Insn 1362(l0): point = 272
   Insn 1360(l0): point = 274
   Insn 1359(l0): point = 276
   Insn 1358(l0): point = 278
   Insn 1357(l0): point = 281
   Insn 1356(l0): point = 283
   Insn 1355(l0): point = 285
   Insn 1354(l0): point = 287
   Insn 1353(l0): point = 289
   Insn 1349(l0): point = 292
   Insn 1348(l0): point = 294
   Insn 1347(l0): point = 296
   Insn 1346(l0): point = 298
   Insn 1343(l0): point = 301
   Insn 1342(l0): point = 303
   Insn 1341(l0): point = 305
   Insn 1340(l0): point = 307
   Insn 1767(l0): point = 310
   Insn 1334(l0): point = 313
   Insn 1333(l0): point = 315
   Insn 1332(l0): point = 317
   Insn 1331(l0): point = 319
   Insn 1329(l0): point = 322
   Insn 1328(l0): point = 324
   Insn 1326(l0): point = 326
   Insn 1325(l0): point = 329
   Insn 1324(l0): point = 331
   Insn 1323(l0): point = 333
   Insn 1322(l0): point = 335
   Insn 1321(l0): point = 337
   Insn 1320(l0): point = 339
   Insn 1319(l0): point = 341
   Insn 1744(l0): point = 344
   Insn 1739(l0): point = 347
   Insn 1190(l0): point = 350
   Insn 1189(l0): point = 352
   Insn 1188(l0): point = 354
   Insn 1187(l0): point = 356
   Insn 1733(l0): point = 359
   Insn 1172(l0): point = 362
   Insn 1171(l0): point = 364
   Insn 1170(l0): point = 366
   Insn 1169(l0): point = 368
   Insn 1157(l0): point = 371
   Insn 1156(l0): point = 373
   Insn 1736(l0): point = 376
   Insn 1181(l0): point = 379
   Insn 1180(l0): point = 381
   Insn 1179(l0): point = 383
   Insn 1178(l0): point = 385
   Insn 1742(l0): point = 388
   Insn 1199(l0): point = 391
   Insn 1198(l0): point = 393
   Insn 1197(l0): point = 395
   Insn 1196(l0): point = 397
   Insn 1164(l0): point = 400
   Insn 1163(l0): point = 402
   Insn 1162(l0): point = 405
   Insn 1161(l0): point = 407
   Insn 1155(l0): point = 410
   Insn 1154(l0): point = 412
   Insn 1153(l0): point = 415
   Insn 1152(l0): point = 417
   Insn 1151(l0): point = 419
   Insn 1149(l0): point = 421
   Insn 1148(l0): point = 424
   Insn 1147(l0): point = 426
   Insn 1145(l0): point = 428
   Insn 1144(l0): point = 431
   Insn 1143(l0): point = 433
   Insn 1142(l0): point = 435
   Insn 1141(l0): point = 437
   Insn 1140(l0): point = 439
   Insn 1139(l0): point = 441
   Insn 1138(l0): point = 443
   Insn 1764(l0): point = 446
   Insn 1759(l0): point = 449
   Insn 1274(l0): point = 452
   Insn 1273(l0): point = 454
   Insn 1272(l0): point = 456
   Insn 1271(l0): point = 458
   Insn 1753(l0): point = 461
   Insn 1256(l0): point = 464
   Insn 1255(l0): point = 466
   Insn 1254(l0): point = 468
   Insn 1253(l0): point = 470
   Insn 1241(l0): point = 473
   Insn 1240(l0): point = 475
   Insn 1756(l0): point = 478
   Insn 1265(l0): point = 481
   Insn 1264(l0): point = 483
   Insn 1263(l0): point = 485
   Insn 1262(l0): point = 487
   Insn 1762(l0): point = 490
   Insn 1283(l0): point = 493
   Insn 1282(l0): point = 495
   Insn 1281(l0): point = 497
   Insn 1280(l0): point = 499
   Insn 1248(l0): point = 502
   Insn 1247(l0): point = 504
   Insn 1246(l0): point = 507
   Insn 1245(l0): point = 509
   Insn 1239(l0): point = 512
   Insn 1238(l0): point = 514
   Insn 1237(l0): point = 517
   Insn 1236(l0): point = 519
   Insn 1235(l0): point = 521
   Insn 1233(l0): point = 523
   Insn 1232(l0): point = 526
   Insn 1231(l0): point = 528
   Insn 1229(l0): point = 530
   Insn 1228(l0): point = 533
   Insn 1227(l0): point = 535
   Insn 1226(l0): point = 537
   Insn 1225(l0): point = 539
   Insn 1224(l0): point = 541
   Insn 1223(l0): point = 543
   Insn 1222(l0): point = 545
   Insn 1133(l0): point = 548
   Insn 1132(l0): point = 550
   Insn 1131(l0): point = 553
   Insn 1130(l0): point = 555
   Insn 1129(l0): point = 557
   Insn 1127(l0): point = 559
   Insn 1126(l0): point = 562
   Insn 1125(l0): point = 564
   Insn 1123(l0): point = 566
   Insn 1122(l0): point = 569
   Insn 1121(l0): point = 571
   Insn 1120(l0): point = 573
   Insn 1119(l0): point = 575
   Insn 1118(l0): point = 577
   Insn 1117(l0): point = 579
   Insn 1116(l0): point = 581
   Insn 1717(l0): point = 584
   Insn 1009(l0): point = 587
   Insn 1008(l0): point = 589
   Insn 1007(l0): point = 591
   Insn 1005(l0): point = 593
   Insn 1004(l0): point = 596
   Insn 1003(l0): point = 598
   Insn 1002(l0): point = 600
   Insn 1000(l0): point = 602
   Insn 999(l0): point = 605
   Insn 998(l0): point = 607
   Insn 997(l0): point = 609
   Insn 995(l0): point = 611
   Insn 994(l0): point = 614
   Insn 993(l0): point = 616
   Insn 992(l0): point = 618
   Insn 990(l0): point = 620
   Insn 989(l0): point = 623
   Insn 988(l0): point = 625
   Insn 987(l0): point = 627
   Insn 985(l0): point = 629
   Insn 984(l0): point = 632
   Insn 983(l0): point = 634
   Insn 982(l0): point = 636
   Insn 980(l0): point = 638
   Insn 979(l0): point = 641
   Insn 978(l0): point = 643
   Insn 977(l0): point = 645
   Insn 975(l0): point = 647
   Insn 974(l0): point = 650
   Insn 973(l0): point = 652
   Insn 972(l0): point = 654
   Insn 971(l0): point = 656
   Insn 969(l0): point = 658
   Insn 968(l0): point = 661
   Insn 967(l0): point = 663
   Insn 965(l0): point = 665
   Insn 964(l0): point = 668
   Insn 963(l0): point = 670
   Insn 962(l0): point = 672
   Insn 961(l0): point = 674
   Insn 960(l0): point = 676
   Insn 959(l0): point = 678
   Insn 958(l0): point = 680
   Insn 956(l0): point = 682
   Insn 955(l0): point = 685
   Insn 954(l0): point = 687
   Insn 952(l0): point = 689
   Insn 951(l0): point = 692
   Insn 950(l0): point = 694
   Insn 949(l0): point = 696
   Insn 948(l0): point = 698
   Insn 947(l0): point = 700
   Insn 946(l0): point = 702
   Insn 945(l0): point = 704
   Insn 943(l0): point = 706
   Insn 942(l0): point = 709
   Insn 941(l0): point = 711
   Insn 939(l0): point = 713
   Insn 938(l0): point = 716
   Insn 937(l0): point = 718
   Insn 935(l0): point = 720
   Insn 934(l0): point = 723
   Insn 933(l0): point = 725
   Insn 932(l0): point = 727
   Insn 931(l0): point = 729
   Insn 930(l0): point = 731
   Insn 929(l0): point = 733
   Insn 928(l0): point = 735
   Insn 926(l0): point = 737
   Insn 925(l0): point = 740
   Insn 924(l0): point = 742
   Insn 922(l0): point = 744
   Insn 921(l0): point = 747
   Insn 920(l0): point = 749
   Insn 918(l0): point = 751
   Insn 917(l0): point = 754
   Insn 916(l0): point = 756
   Insn 915(l0): point = 758
   Insn 914(l0): point = 760
   Insn 913(l0): point = 762
   Insn 912(l0): point = 764
   Insn 911(l0): point = 766
   Insn 1720(l0): point = 769
   Insn 1100(l0): point = 772
   Insn 1099(l0): point = 774
   Insn 1098(l0): point = 776
   Insn 1096(l0): point = 778
   Insn 1095(l0): point = 781
   Insn 1094(l0): point = 783
   Insn 1093(l0): point = 785
   Insn 1091(l0): point = 787
   Insn 1090(l0): point = 790
   Insn 1089(l0): point = 792
   Insn 1088(l0): point = 794
   Insn 1086(l0): point = 796
   Insn 1085(l0): point = 799
   Insn 1084(l0): point = 801
   Insn 1083(l0): point = 803
   Insn 1081(l0): point = 805
   Insn 1080(l0): point = 808
   Insn 1079(l0): point = 810
   Insn 1078(l0): point = 812
   Insn 1076(l0): point = 814
   Insn 1075(l0): point = 817
   Insn 1074(l0): point = 819
   Insn 1073(l0): point = 821
   Insn 1071(l0): point = 823
   Insn 1070(l0): point = 826
   Insn 1069(l0): point = 828
   Insn 1068(l0): point = 830
   Insn 1066(l0): point = 832
   Insn 1065(l0): point = 835
   Insn 1064(l0): point = 837
   Insn 1063(l0): point = 839
   Insn 1062(l0): point = 841
   Insn 1060(l0): point = 843
   Insn 1059(l0): point = 846
   Insn 1058(l0): point = 848
   Insn 1056(l0): point = 850
   Insn 1055(l0): point = 853
   Insn 1054(l0): point = 855
   Insn 1053(l0): point = 857
   Insn 1052(l0): point = 859
   Insn 1051(l0): point = 861
   Insn 1050(l0): point = 863
   Insn 1049(l0): point = 865
   Insn 1047(l0): point = 867
   Insn 1046(l0): point = 870
   Insn 1045(l0): point = 872
   Insn 1043(l0): point = 874
   Insn 1042(l0): point = 877
   Insn 1041(l0): point = 879
   Insn 1039(l0): point = 881
   Insn 1038(l0): point = 884
   Insn 1037(l0): point = 886
   Insn 1036(l0): point = 888
   Insn 1035(l0): point = 890
   Insn 1034(l0): point = 892
   Insn 1033(l0): point = 894
   Insn 1032(l0): point = 896
   Insn 1030(l0): point = 898
   Insn 1029(l0): point = 901
   Insn 1028(l0): point = 903
   Insn 1026(l0): point = 905
   Insn 1025(l0): point = 908
   Insn 1024(l0): point = 910
   Insn 1022(l0): point = 912
   Insn 1021(l0): point = 915
   Insn 1020(l0): point = 917
   Insn 1019(l0): point = 919
   Insn 1018(l0): point = 921
   Insn 1017(l0): point = 923
   Insn 1016(l0): point = 925
   Insn 1015(l0): point = 927
   Insn 906(l0): point = 930
   Insn 905(l0): point = 932
   Insn 904(l0): point = 935
   Insn 903(l0): point = 937
   Insn 902(l0): point = 939
   Insn 900(l0): point = 941
   Insn 899(l0): point = 944
   Insn 898(l0): point = 946
   Insn 896(l0): point = 948
   Insn 895(l0): point = 951
   Insn 894(l0): point = 953
   Insn 893(l0): point = 955
   Insn 892(l0): point = 957
   Insn 891(l0): point = 959
   Insn 890(l0): point = 961
   Insn 889(l0): point = 963
   Insn 887(l0): point = 966
   Insn 886(l0): point = 968
   Insn 885(l0): point = 970
   Insn 883(l0): point = 972
   Insn 882(l0): point = 975
   Insn 881(l0): point = 977
   Insn 880(l0): point = 979
   Insn 878(l0): point = 981
   Insn 877(l0): point = 984
   Insn 876(l0): point = 986
   Insn 875(l0): point = 988
   Insn 873(l0): point = 990
   Insn 872(l0): point = 993
   Insn 871(l0): point = 995
   Insn 870(l0): point = 997
   Insn 868(l0): point = 999
   Insn 867(l0): point = 1002
   Insn 866(l0): point = 1004
   Insn 865(l0): point = 1006
   Insn 863(l0): point = 1008
   Insn 862(l0): point = 1011
   Insn 861(l0): point = 1013
   Insn 860(l0): point = 1015
   Insn 858(l0): point = 1017
   Insn 857(l0): point = 1020
   Insn 856(l0): point = 1022
   Insn 855(l0): point = 1024
   Insn 853(l0): point = 1026
   Insn 852(l0): point = 1029
   Insn 851(l0): point = 1031
   Insn 850(l0): point = 1033
   Insn 849(l0): point = 1035
   Insn 847(l0): point = 1037
   Insn 846(l0): point = 1040
   Insn 845(l0): point = 1042
   Insn 844(l0): point = 1044
   Insn 843(l0): point = 1046
   Insn 842(l0): point = 1048
   Insn 841(l0): point = 1050
   Insn 840(l0): point = 1052
   Insn 838(l0): point = 1054
   Insn 837(l0): point = 1057
   Insn 836(l0): point = 1059
   Insn 834(l0): point = 1061
   Insn 833(l0): point = 1064
   Insn 832(l0): point = 1066
   Insn 831(l0): point = 1068
   Insn 830(l0): point = 1070
   Insn 829(l0): point = 1072
   Insn 828(l0): point = 1074
   Insn 827(l0): point = 1076
   Insn 825(l0): point = 1078
   Insn 824(l0): point = 1081
   Insn 823(l0): point = 1083
   Insn 821(l0): point = 1085
   Insn 820(l0): point = 1088
   Insn 819(l0): point = 1090
   Insn 818(l0): point = 1092
   Insn 817(l0): point = 1094
   Insn 816(l0): point = 1096
   Insn 815(l0): point = 1098
   Insn 814(l0): point = 1100
   Insn 812(l0): point = 1102
   Insn 1710(l0): point = 1105
   Insn 800(l0): point = 1107
   Insn 799(l0): point = 1109
   Insn 798(l0): point = 1111
   Insn 797(l0): point = 1114
   Insn 796(l0): point = 1116
   Insn 795(l0): point = 1118
   Insn 794(l0): point = 1120
   Insn 793(l0): point = 1122
   Insn 792(l0): point = 1124
   Insn 791(l0): point = 1126
   Insn 790(l0): point = 1128
   Insn 788(l0): point = 1131
   Insn 787(l0): point = 1133
   Insn 786(l0): point = 1135
   Insn 784(l0): point = 1137
   Insn 783(l0): point = 1140
   Insn 782(l0): point = 1142
   Insn 781(l0): point = 1144
   Insn 779(l0): point = 1146
   Insn 778(l0): point = 1149
   Insn 777(l0): point = 1151
   Insn 776(l0): point = 1153
   Insn 775(l0): point = 1155
   Insn 773(l0): point = 1157
   Insn 772(l0): point = 1160
   Insn 771(l0): point = 1162
   Insn 770(l0): point = 1164
   Insn 769(l0): point = 1166
   Insn 743(l0): point = 1169
   Insn 742(l0): point = 1171
   Insn 741(l0): point = 1173
   Insn 740(l0): point = 1175
   Insn 739(l0): point = 1177
   Insn 737(l0): point = 1180
   Insn 736(l0): point = 1182
   Insn 735(l0): point = 1184
   Insn 734(l0): point = 1186
   Insn 623(l0): point = 1189
   Insn 622(l0): point = 1191
   Insn 621(l0): point = 1193
   Insn 620(l0): point = 1195
   Insn 619(l0): point = 1197
   Insn 617(l0): point = 1200
   Insn 616(l0): point = 1202
   Insn 615(l0): point = 1204
   Insn 614(l0): point = 1206
   Insn 373(l0): point = 1209
   Insn 372(l0): point = 1211
   Insn 371(l0): point = 1213
   Insn 370(l0): point = 1215
   Insn 369(l0): point = 1217
   Insn 368(l0): point = 1219
   Insn 767(l0): point = 1222
   Insn 766(l0): point = 1224
   Insn 764(l0): point = 1226
   Insn 763(l0): point = 1228
   Insn 761(l0): point = 1230
   Insn 760(l0): point = 1233
   Insn 759(l0): point = 1235
   Insn 758(l0): point = 1237
   Insn 757(l0): point = 1239
   Insn 754(l0): point = 1242
   Insn 752(l0): point = 1245
   Insn 751(l0): point = 1247
   Insn 750(l0): point = 1249
   Insn 749(l0): point = 1251
   Insn 506(l0): point = 1254
   Insn 505(l0): point = 1256
   Insn 1791(l0): point = 1259
   Insn 1705(l0): point = 1263
   Insn 719(l0): point = 1266
   Insn 718(l0): point = 1268
   Insn 717(l0): point = 1270
   Insn 716(l0): point = 1272
   Insn 1696(l0): point = 1275
   Insn 692(l0): point = 1278
   Insn 691(l0): point = 1280
   Insn 690(l0): point = 1282
   Insn 689(l0): point = 1284
   Insn 1699(l0): point = 1287
   Insn 701(l0): point = 1290
   Insn 700(l0): point = 1292
   Insn 699(l0): point = 1294
   Insn 698(l0): point = 1296
   Insn 1702(l0): point = 1299
   Insn 710(l0): point = 1302
   Insn 709(l0): point = 1304
   Insn 708(l0): point = 1306
   Insn 707(l0): point = 1308
   Insn 1708(l0): point = 1311
   Insn 728(l0): point = 1314
   Insn 727(l0): point = 1316
   Insn 726(l0): point = 1318
   Insn 725(l0): point = 1320
   Insn 683(l0): point = 1323
   Insn 682(l0): point = 1325
   Insn 681(l0): point = 1327
   Insn 680(l0): point = 1329
   Insn 679(l0): point = 1331
   Insn 678(l0): point = 1333
   Insn 677(l0): point = 1335
   Insn 676(l0): point = 1337
   Insn 675(l0): point = 1340
   Insn 674(l0): point = 1342
   Insn 673(l0): point = 1344
   Insn 671(l0): point = 1346
   Insn 670(l0): point = 1349
   Insn 669(l0): point = 1351
   Insn 667(l0): point = 1353
   Insn 666(l0): point = 1356
   Insn 665(l0): point = 1358
   Insn 663(l0): point = 1360
   Insn 662(l0): point = 1363
   Insn 661(l0): point = 1365
   Insn 660(l0): point = 1367
   Insn 659(l0): point = 1369
   Insn 658(l0): point = 1371
   Insn 657(l0): point = 1373
   Insn 655(l0): point = 1376
   Insn 654(l0): point = 1378
   Insn 653(l0): point = 1380
   Insn 651(l0): point = 1382
   Insn 650(l0): point = 1385
   Insn 649(l0): point = 1387
   Insn 648(l0): point = 1389
   Insn 647(l0): point = 1391
   Insn 645(l0): point = 1393
   Insn 644(l0): point = 1396
   Insn 643(l0): point = 1398
   Insn 641(l0): point = 1400
   Insn 640(l0): point = 1403
   Insn 639(l0): point = 1405
   Insn 637(l0): point = 1407
   Insn 636(l0): point = 1410
   Insn 635(l0): point = 1412
   Insn 634(l0): point = 1414
   Insn 633(l0): point = 1416
   Insn 632(l0): point = 1418
   Insn 631(l0): point = 1420
   Insn 504(l0): point = 1423
   Insn 503(l0): point = 1425
   Insn 502(l0): point = 1427
   Insn 500(l0): point = 1429
   Insn 499(l0): point = 1432
   Insn 498(l0): point = 1434
   Insn 496(l0): point = 1436
   Insn 495(l0): point = 1439
   Insn 494(l0): point = 1441
   Insn 492(l0): point = 1443
   Insn 491(l0): point = 1446
   Insn 490(l0): point = 1448
   Insn 489(l0): point = 1450
   Insn 488(l0): point = 1452
   Insn 487(l0): point = 1454
   Insn 486(l0): point = 1456
   Insn 484(l0): point = 1459
   Insn 483(l0): point = 1461
   Insn 482(l0): point = 1463
   Insn 480(l0): point = 1465
   Insn 479(l0): point = 1468
   Insn 478(l0): point = 1470
   Insn 477(l0): point = 1472
   Insn 475(l0): point = 1474
   Insn 474(l0): point = 1477
   Insn 473(l0): point = 1479
   Insn 472(l0): point = 1481
   Insn 470(l0): point = 1483
   Insn 469(l0): point = 1486
   Insn 468(l0): point = 1488
   Insn 467(l0): point = 1490
   Insn 465(l0): point = 1492
   Insn 464(l0): point = 1495
   Insn 463(l0): point = 1497
   Insn 462(l0): point = 1499
   Insn 460(l0): point = 1501
   Insn 459(l0): point = 1504
   Insn 458(l0): point = 1506
   Insn 457(l0): point = 1508
   Insn 455(l0): point = 1510
   Insn 454(l0): point = 1513
   Insn 453(l0): point = 1515
   Insn 452(l0): point = 1517
   Insn 450(l0): point = 1519
   Insn 449(l0): point = 1522
   Insn 448(l0): point = 1524
   Insn 447(l0): point = 1526
   Insn 445(l0): point = 1528
   Insn 444(l0): point = 1531
   Insn 443(l0): point = 1533
   Insn 442(l0): point = 1535
   Insn 440(l0): point = 1537
   Insn 439(l0): point = 1540
   Insn 438(l0): point = 1542
   Insn 437(l0): point = 1544
   Insn 436(l0): point = 1546
   Insn 434(l0): point = 1548
   Insn 433(l0): point = 1551
   Insn 432(l0): point = 1553
   Insn 430(l0): point = 1555
   Insn 429(l0): point = 1558
   Insn 428(l0): point = 1560
   Insn 427(l0): point = 1562
   Insn 426(l0): point = 1564
   Insn 425(l0): point = 1566
   Insn 424(l0): point = 1568
   Insn 422(l0): point = 1570
   Insn 421(l0): point = 1573
   Insn 420(l0): point = 1575
   Insn 418(l0): point = 1577
   Insn 417(l0): point = 1580
   Insn 416(l0): point = 1582
   Insn 414(l0): point = 1584
   Insn 413(l0): point = 1587
   Insn 412(l0): point = 1589
   Insn 411(l0): point = 1591
   Insn 410(l0): point = 1593
   Insn 409(l0): point = 1595
   Insn 408(l0): point = 1597
   Insn 406(l0): point = 1599
   Insn 405(l0): point = 1602
   Insn 404(l0): point = 1604
   Insn 402(l0): point = 1606
   Insn 401(l0): point = 1609
   Insn 400(l0): point = 1611
   Insn 398(l0): point = 1613
   Insn 397(l0): point = 1616
   Insn 396(l0): point = 1618
   Insn 395(l0): point = 1620
   Insn 394(l0): point = 1622
   Insn 393(l0): point = 1624
   Insn 392(l0): point = 1626
   Insn 390(l0): point = 1628
   Insn 389(l0): point = 1631
   Insn 388(l0): point = 1633
   Insn 386(l0): point = 1635
   Insn 385(l0): point = 1638
   Insn 384(l0): point = 1640
   Insn 383(l0): point = 1642
   Insn 382(l0): point = 1644
   Insn 381(l0): point = 1646
   Insn 380(l0): point = 1648
   Insn 378(l0): point = 1650
   Insn 377(l0): point = 1653
   Insn 376(l0): point = 1655
   Insn 374(l0): point = 1657
   Insn 1693(l0): point = 1660
   Insn 1688(l0): point = 1663
   Insn 599(l0): point = 1666
   Insn 598(l0): point = 1668
   Insn 597(l0): point = 1670
   Insn 596(l0): point = 1672
   Insn 1679(l0): point = 1675
   Insn 572(l0): point = 1678
   Insn 571(l0): point = 1680
   Insn 570(l0): point = 1682
   Insn 569(l0): point = 1684
   Insn 1682(l0): point = 1687
   Insn 581(l0): point = 1690
   Insn 580(l0): point = 1692
   Insn 579(l0): point = 1694
   Insn 578(l0): point = 1696
   Insn 1685(l0): point = 1699
   Insn 590(l0): point = 1702
   Insn 589(l0): point = 1704
   Insn 588(l0): point = 1706
   Insn 587(l0): point = 1708
   Insn 1691(l0): point = 1711
   Insn 608(l0): point = 1714
   Insn 607(l0): point = 1716
   Insn 606(l0): point = 1718
   Insn 605(l0): point = 1720
   Insn 563(l0): point = 1723
   Insn 562(l0): point = 1725
   Insn 561(l0): point = 1727
   Insn 560(l0): point = 1729
   Insn 559(l0): point = 1731
   Insn 558(l0): point = 1733
   Insn 557(l0): point = 1735
   Insn 556(l0): point = 1737
   Insn 555(l0): point = 1740
   Insn 554(l0): point = 1742
   Insn 553(l0): point = 1744
   Insn 551(l0): point = 1746
   Insn 550(l0): point = 1749
   Insn 549(l0): point = 1751
   Insn 547(l0): point = 1753
   Insn 546(l0): point = 1756
   Insn 545(l0): point = 1758
   Insn 543(l0): point = 1760
   Insn 542(l0): point = 1763
   Insn 541(l0): point = 1765
   Insn 540(l0): point = 1767
   Insn 539(l0): point = 1769
   Insn 538(l0): point = 1771
   Insn 537(l0): point = 1773
   Insn 535(l0): point = 1776
   Insn 534(l0): point = 1778
   Insn 533(l0): point = 1780
   Insn 531(l0): point = 1782
   Insn 530(l0): point = 1785
   Insn 529(l0): point = 1787
   Insn 528(l0): point = 1789
   Insn 527(l0): point = 1791
   Insn 525(l0): point = 1793
   Insn 524(l0): point = 1796
   Insn 523(l0): point = 1798
   Insn 521(l0): point = 1800
   Insn 520(l0): point = 1803
   Insn 519(l0): point = 1805
   Insn 517(l0): point = 1807
   Insn 516(l0): point = 1810
   Insn 515(l0): point = 1812
   Insn 514(l0): point = 1814
   Insn 513(l0): point = 1816
   Insn 512(l0): point = 1818
   Insn 511(l0): point = 1820
   Insn 1676(l0): point = 1823
   Insn 364(l0): point = 1825
   Insn 362(l0): point = 1828
   Insn 361(l0): point = 1830
   Insn 360(l0): point = 1832
   Insn 358(l0): point = 1834
   Insn 357(l0): point = 1837
   Insn 356(l0): point = 1839
   Insn 355(l0): point = 1841
   Insn 353(l0): point = 1843
   Insn 352(l0): point = 1846
   Insn 351(l0): point = 1848
   Insn 350(l0): point = 1850
   Insn 348(l0): point = 1852
   Insn 347(l0): point = 1855
   Insn 346(l0): point = 1857
   Insn 345(l0): point = 1859
   Insn 344(l0): point = 1861
   Insn 342(l0): point = 1863
   Insn 341(l0): point = 1866
   Insn 340(l0): point = 1868
   Insn 339(l0): point = 1870
   Insn 338(l0): point = 1872
   Insn 334(l0): point = 1875
   Insn 333(l0): point = 1877
   Insn 331(l0): point = 1880
   Insn 330(l0): point = 1882
   Insn 329(l0): point = 1884
   Insn 327(l0): point = 1886
   Insn 326(l0): point = 1889
   Insn 325(l0): point = 1891
   Insn 324(l0): point = 1893
   Insn 322(l0): point = 1895
   Insn 321(l0): point = 1898
   Insn 320(l0): point = 1900
   Insn 319(l0): point = 1902
   Insn 318(l0): point = 1904
   Insn 317(l0): point = 1906
   Insn 315(l0): point = 1908
   Insn 314(l0): point = 1911
   Insn 313(l0): point = 1913
   Insn 312(l0): point = 1915
   Insn 311(l0): point = 1917
   Insn 1674(l0): point = 1920
   Insn 305(l0): point = 1923
   Insn 304(l0): point = 1925
   Insn 303(l0): point = 1927
   Insn 301(l0): point = 1930
   Insn 300(l0): point = 1932
   Insn 299(l0): point = 1934
   Insn 297(l0): point = 1936
   Insn 296(l0): point = 1939
   Insn 295(l0): point = 1941
   Insn 294(l0): point = 1943
   Insn 293(l0): point = 1945
   Insn 292(l0): point = 1947
   Insn 290(l0): point = 1950
   Insn 289(l0): point = 1952
   Insn 288(l0): point = 1954
   Insn 287(l0): point = 1956
   Insn 286(l0): point = 1958
   Insn 285(l0): point = 1960
   Insn 1671(l0): point = 1963
   Insn 279(l0): point = 1966
   Insn 278(l0): point = 1968
   Insn 277(l0): point = 1970
   Insn 275(l0): point = 1973
   Insn 274(l0): point = 1975
   Insn 273(l0): point = 1977
   Insn 271(l0): point = 1979
   Insn 270(l0): point = 1982
   Insn 269(l0): point = 1984
   Insn 268(l0): point = 1986
   Insn 267(l0): point = 1988
   Insn 266(l0): point = 1990
   Insn 264(l0): point = 1993
   Insn 263(l0): point = 1995
   Insn 262(l0): point = 1997
   Insn 261(l0): point = 1999
   Insn 260(l0): point = 2001
   Insn 259(l0): point = 2003
   Insn 1668(l0): point = 2006
   Insn 253(l0): point = 2009
   Insn 252(l0): point = 2011
   Insn 251(l0): point = 2013
   Insn 249(l0): point = 2016
   Insn 248(l0): point = 2018
   Insn 247(l0): point = 2020
   Insn 245(l0): point = 2022
   Insn 244(l0): point = 2025
   Insn 243(l0): point = 2027
   Insn 242(l0): point = 2029
   Insn 241(l0): point = 2031
   Insn 240(l0): point = 2033
   Insn 238(l0): point = 2036
   Insn 237(l0): point = 2038
   Insn 236(l0): point = 2040
   Insn 235(l0): point = 2042
   Insn 234(l0): point = 2044
   Insn 233(l0): point = 2046
   Insn 1665(l0): point = 2049
   Insn 227(l0): point = 2052
   Insn 226(l0): point = 2054
   Insn 225(l0): point = 2056
   Insn 223(l0): point = 2059
   Insn 222(l0): point = 2061
   Insn 221(l0): point = 2063
   Insn 219(l0): point = 2065
   Insn 218(l0): point = 2068
   Insn 217(l0): point = 2070
   Insn 216(l0): point = 2072
   Insn 215(l0): point = 2074
   Insn 214(l0): point = 2076
   Insn 212(l0): point = 2079
   Insn 211(l0): point = 2081
   Insn 210(l0): point = 2083
   Insn 209(l0): point = 2085
   Insn 208(l0): point = 2087
   Insn 207(l0): point = 2089
   Insn 1662(l0): point = 2092
   Insn 201(l0): point = 2095
   Insn 200(l0): point = 2097
   Insn 199(l0): point = 2099
   Insn 197(l0): point = 2102
   Insn 196(l0): point = 2104
   Insn 195(l0): point = 2106
   Insn 193(l0): point = 2108
   Insn 192(l0): point = 2111
   Insn 191(l0): point = 2113
   Insn 190(l0): point = 2115
   Insn 189(l0): point = 2117
   Insn 188(l0): point = 2119
   Insn 186(l0): point = 2122
   Insn 185(l0): point = 2124
   Insn 184(l0): point = 2126
   Insn 183(l0): point = 2128
   Insn 182(l0): point = 2130
   Insn 181(l0): point = 2132
   Insn 1659(l0): point = 2135
   Insn 175(l0): point = 2138
   Insn 174(l0): point = 2140
   Insn 173(l0): point = 2142
   Insn 171(l0): point = 2145
   Insn 170(l0): point = 2147
   Insn 169(l0): point = 2149
   Insn 167(l0): point = 2151
   Insn 166(l0): point = 2154
   Insn 165(l0): point = 2156
   Insn 164(l0): point = 2158
   Insn 163(l0): point = 2160
   Insn 162(l0): point = 2162
   Insn 160(l0): point = 2165
   Insn 159(l0): point = 2167
   Insn 158(l0): point = 2169
   Insn 157(l0): point = 2171
   Insn 156(l0): point = 2173
   Insn 155(l0): point = 2175
   Insn 1656(l0): point = 2178
   Insn 149(l0): point = 2181
   Insn 148(l0): point = 2183
   Insn 147(l0): point = 2185
   Insn 145(l0): point = 2188
   Insn 144(l0): point = 2190
   Insn 143(l0): point = 2192
   Insn 141(l0): point = 2194
   Insn 140(l0): point = 2197
   Insn 139(l0): point = 2199
   Insn 138(l0): point = 2201
   Insn 137(l0): point = 2203
   Insn 136(l0): point = 2205
   Insn 134(l0): point = 2208
   Insn 133(l0): point = 2210
   Insn 132(l0): point = 2212
   Insn 131(l0): point = 2214
   Insn 130(l0): point = 2216
   Insn 129(l0): point = 2218
   Insn 123(l0): point = 2221
   Insn 122(l0): point = 2223
   Insn 121(l0): point = 2225
   Insn 120(l0): point = 2227
   Insn 119(l0): point = 2229
   Insn 118(l0): point = 2231
   Insn 117(l0): point = 2233
   Insn 116(l0): point = 2235
   Insn 115(l0): point = 2238
   Insn 114(l0): point = 2240
   Insn 113(l0): point = 2242
   Insn 111(l0): point = 2244
   Insn 110(l0): point = 2247
   Insn 109(l0): point = 2249
   Insn 108(l0): point = 2251
   Insn 107(l0): point = 2253
   Insn 105(l0): point = 2256
   Insn 104(l0): point = 2258
   Insn 103(l0): point = 2260
   Insn 101(l0): point = 2262
   Insn 100(l0): point = 2265
   Insn 99(l0): point = 2267
   Insn 98(l0): point = 2269
   Insn 96(l0): point = 2271
   Insn 95(l0): point = 2274
   Insn 94(l0): point = 2276
   Insn 93(l0): point = 2278
   Insn 91(l0): point = 2280
   Insn 90(l0): point = 2283
   Insn 89(l0): point = 2285
   Insn 88(l0): point = 2287
   Insn 86(l0): point = 2289
   Insn 85(l0): point = 2292
   Insn 84(l0): point = 2294
   Insn 83(l0): point = 2296
   Insn 82(l0): point = 2298
   Insn 80(l0): point = 2300
   Insn 79(l0): point = 2303
   Insn 78(l0): point = 2305
   Insn 77(l0): point = 2307
   Insn 76(l0): point = 2309
   Insn 74(l0): point = 2311
   Insn 73(l0): point = 2314
   Insn 72(l0): point = 2316
   Insn 71(l0): point = 2318
   Insn 70(l0): point = 2320
   Insn 66(l0): point = 2323
   Insn 65(l0): point = 2325
   Insn 64(l0): point = 2327
   Insn 63(l0): point = 2329
   Insn 62(l0): point = 2331
   Insn 60(l0): point = 2334
   Insn 59(l0): point = 2336
   Insn 58(l0): point = 2338
   Insn 57(l0): point = 2340
   Insn 55(l0): point = 2342
   Insn 54(l0): point = 2345
   Insn 53(l0): point = 2347
   Insn 52(l0): point = 2349
   Insn 51(l0): point = 2351
   Insn 50(l0): point = 2353
   Insn 49(l0): point = 2355
   Insn 48(l0): point = 2357
   Insn 47(l0): point = 2359
   Insn 46(l0): point = 2361
   Insn 45(l0): point = 2363
   Insn 44(l0): point = 2365
   Insn 43(l0): point = 2367
   Insn 42(l0): point = 2369
   Insn 41(l0): point = 2371
   Insn 40(l0): point = 2373
   Insn 38(l0): point = 2376
   Insn 37(l0): point = 2378
   Insn 36(l0): point = 2380
   Insn 35(l0): point = 2382
   Insn 34(l0): point = 2384
   Insn 32(l0): point = 2386
   Insn 31(l0): point = 2389
   Insn 30(l0): point = 2391
   Insn 29(l0): point = 2393
   Insn 27(l0): point = 2396
   Insn 26(l0): point = 2398
   Insn 25(l0): point = 2400
   Insn 24(l0): point = 2402
   Insn 23(l0): point = 2404
   Insn 22(l0): point = 2406
   Insn 21(l0): point = 2408
   Insn 19(l0): point = 2411
   Insn 18(l0): point = 2413
   Insn 17(l0): point = 2415
   Insn 16(l0): point = 2417
   Insn 15(l0): point = 2419
   Insn 14(l0): point = 2421
   Insn 13(l0): point = 2423
   Insn 12(l0): point = 2425
   Insn 11(l0): point = 2427
   Insn 10(l0): point = 2429
   Insn 9(l0): point = 2431
   Insn 8(l0): point = 2433
   Insn 7(l0): point = 2435
   Insn 3(l0): point = 2437
   Insn 2(l0): point = 2439
 a0(r275): [4..5]
 a1(r441): [122..124] [17..19] [6..14]
 a2(r469): [10..11]
 a3(r446): [109..111] [96..98] [83..85] [70..72] [57..59] [44..46] [31..33] [20..28]
 a4(r468): [24..25]
 a5(r466): [34..41]
 a6(r465): [38..39]
 a7(r463): [47..54]
 a8(r462): [51..52]
 a9(r460): [60..67]
 a10(r459): [64..65]
 a11(r457): [73..80]
 a12(r456): [77..78]
 a13(r454): [86..93]
 a14(r453): [90..91]
 a15(r451): [99..106]
 a16(r450): [103..104]
 a17(r447): [112..119]
 a18(r445): [116..117]
 a19(r442): [125..132]
 a20(r440): [129..130]
 a21(r439): [140..141]
 a22(r438): [147..148]
 a23(r179): [261..262]
 a24(r437): [267..270]
 a25(r436): [269..272]
 a26(r435): [275..276]
 a27(r434): [277..278]
 a28(r178): [284..285]
 a29(r177): [286..287]
 a30(r433): [288..289]
 a31(r432): [295..298]
 a32(r431): [304..307]
 a33(r430): [316..319]
 a34(r269): [325..326]
 a35(r268): [332..333]
 a36(r267): [334..335]
 a37(r429): [340..341]
 a38(r428): [165..166]
 a39(r427): [185..186]
 a40(r426): [496..499]
 a41(r425): [455..458]
 a42(r424): [484..487]
 a43(r423): [467..470]
 a44(r266): [505..521] [476..477]
 a45(r265): [522..523]
 a46(r264): [529..530]
 a47(r263): [536..537]
 a48(r262): [538..539]
 a49(r422): [544..545]
 a50(r421): [211..212]
 a51(r420): [394..397]
 a52(r419): [353..356]
 a53(r418): [382..385]
 a54(r417): [365..368]
 a55(r261): [403..419] [374..375]
 a56(r260): [420..421]
 a57(r259): [427..428]
 a58(r258): [434..435]
 a59(r257): [436..437]
 a60(r416): [442..443]
 a61(r256): [551..557]
 a62(r255): [558..559]
 a63(r254): [565..566]
 a64(r253): [572..573]
 a65(r252): [574..575]
 a66(r415): [580..581]
 a67(r414): [234..235]
 a68(r251): [775..778]
 a69(r250): [784..787]
 a70(r235): [786..898]
 a71(r249): [793..796]
 a72(r248): [802..805]
 a73(r240): [804..867]
 a74(r247): [811..814]
 a75(r246): [820..823]
 a76(r244): [822..843]
 a77(r245): [829..832]
 a78(r413): [838..841]
 a79(r243): [849..850]
 a80(r242): [856..857]
 a81(r241): [858..859]
 a82(r412): [864..865]
 a83(r239): [873..874]
 a84(r238): [880..881]
 a85(r237): [887..888]
 a86(r236): [889..890]
 a87(r411): [895..896]
 a88(r234): [904..905]
 a89(r233): [911..912]
 a90(r232): [918..919]
 a91(r231): [920..921]
 a92(r410): [926..927]
 a93(r230): [590..593]
 a94(r229): [599..602]
 a95(r210): [601..737]
 a96(r228): [608..611]
 a97(r227): [617..620]
 a98(r215): [619..706]
 a99(r226): [626..629]
 a100(r225): [635..638]
 a101(r219): [637..682]
 a102(r224): [644..647]
 a103(r409): [653..656]
 a104(r223): [655..658]
 a105(r222): [664..665]
 a106(r221): [671..672]
 a107(r220): [673..674]
 a108(r408): [679..680]
 a109(r218): [688..689]
 a110(r217): [695..696]
 a111(r216): [697..698]
 a112(r407): [703..704]
 a113(r214): [712..713]
 a114(r213): [719..720]
 a115(r212): [726..727]
 a116(r211): [728..729]
 a117(r406): [734..735]
 a118(r209): [743..744]
 a119(r208): [750..751]
 a120(r207): [757..758]
 a121(r206): [759..760]
 a122(r405): [765..766]
 a123(r205): [933..939]
 a124(r204): [940..941]
 a125(r203): [947..948]
 a126(r202): [954..955]
 a127(r201): [956..957]
 a128(r404): [962..963]
 a129(r200): [969..972]
 a130(r199): [978..981]
 a131(r182): [980..1102]
 a132(r198): [987..990]
 a133(r197): [996..999]
 a134(r186): [998..1078]
 a135(r196): [1005..1008]
 a136(r195): [1014..1017]
 a137(r190): [1016..1054]
 a138(r194): [1023..1026]
 a139(r403): [1032..1035]
 a140(r193): [1034..1037]
 a141(r192): [1043..1044]
 a142(r191): [1045..1046]
 a143(r402): [1051..1052]
 a144(r189): [1060..1061]
 a145(r188): [1067..1068]
 a146(r187): [1069..1070]
 a147(r401): [1075..1076]
 a148(r185): [1084..1085]
 a149(r184): [1091..1092]
 a150(r183): [1093..1094]
 a151(r400): [1099..1100]
 a152(r181): [246..247]
 a153(r180): [248..249]
 a154(r399): [254..255]
 a155(r398): [1108..1109]
 a156(r397): [1110..1111]
 a157(r176): [1117..1118]
 a158(r175): [1119..1120]
 a159(r396): [1121..1122]
 a160(r395): [1127..1128]
 a161(r174): [1134..1137]
 a162(r173): [1143..1146]
 a163(r172): [1145..1157]
 a164(r394): [1152..1155]
 a165(r171): [1163..1164]
 a166(r393): [1165..1166]
 a167(r119): [1225..1226]
 a168(r118): [1229..1230]
 a169(r117): [1236..1237]
 a170(r392): [1238..1239]
 a171(r391): [1248..1251]
 a172(r390): [1183..1184]
 a173(r389): [1317..1320]
 a174(r388): [1269..1272]
 a175(r387): [1305..1308]
 a176(r386): [1293..1296]
 a177(r385): [1281..1284]
 a178(r383): [1324..1325]
 a179(r384): [1326..1327]
 a180(r382): [1326..1329]
 a181(r381): [1330..1331]
 a182(r380): [1332..1333]
 a183(r379): [1332..1335]
 a184(r378): [1336..1337]
 a185(r170): [1338..1344]
 a186(r169): [1345..1346]
 a187(r168): [1352..1353]
 a188(r167): [1359..1360]
 a189(r166): [1366..1371]
 a190(r377): [1368..1369]
 a191(r376): [1372..1373]
 a192(r165): [1379..1382]
 a193(r375): [1388..1391]
 a194(r164): [1390..1393]
 a195(r163): [1399..1400]
 a196(r162): [1406..1407]
 a197(r161): [1413..1418]
 a198(r374): [1415..1416]
 a199(r373): [1419..1420]
 a200(r372): [1203..1204]
 a201(r371): [1717..1720]
 a202(r370): [1669..1672]
 a203(r369): [1705..1708]
 a204(r368): [1693..1696]
 a205(r367): [1681..1684]
 a206(r365): [1724..1725]
 a207(r366): [1726..1727]
 a208(r364): [1726..1729]
 a209(r363): [1730..1731]
 a210(r362): [1732..1733]
 a211(r361): [1732..1735]
 a212(r360): [1736..1737]
 a213(r160): [1738..1744]
 a214(r159): [1745..1746]
 a215(r158): [1752..1753]
 a216(r157): [1759..1760]
 a217(r156): [1766..1771]
 a218(r359): [1768..1769]
 a219(r358): [1772..1773]
 a220(r155): [1779..1782]
 a221(r357): [1788..1791]
 a222(r154): [1790..1793]
 a223(r153): [1799..1800]
 a224(r152): [1806..1807]
 a225(r151): [1813..1818]
 a226(r356): [1815..1816]
 a227(r355): [1819..1820]
 a228(r150): [1423..1427] [1257..1258]
 a229(r149): [1428..1429]
 a230(r148): [1435..1436]
 a231(r147): [1442..1443]
 a232(r146): [1449..1454]
 a233(r354): [1451..1452]
 a234(r353): [1455..1456]
 a235(r145): [1462..1465]
 a236(r144): [1471..1474]
 a237(r122): [1473..1650]
 a238(r143): [1480..1483]
 a239(r142): [1489..1492]
 a240(r125): [1491..1628]
 a241(r141): [1498..1501]
 a242(r140): [1507..1510]
 a243(r129): [1509..1599]
 a244(r139): [1516..1519]
 a245(r138): [1525..1528]
 a246(r133): [1527..1570]
 a247(r137): [1534..1537]
 a248(r352): [1543..1546]
 a249(r136): [1545..1548]
 a250(r135): [1554..1555]
 a251(r134): [1561..1566]
 a252(r351): [1563..1564]
 a253(r350): [1567..1568]
 a254(r132): [1576..1577]
 a255(r131): [1583..1584]
 a256(r130): [1590..1595]
 a257(r349): [1592..1593]
 a258(r348): [1596..1597]
 a259(r128): [1605..1606]
 a260(r127): [1612..1613]
 a261(r126): [1619..1624]
 a262(r347): [1621..1622]
 a263(r346): [1625..1626]
 a264(r124): [1634..1635]
 a265(r123): [1641..1646]
 a266(r345): [1643..1644]
 a267(r344): [1647..1648]
 a268(r121): [1656..1657]
 a269(r120): [1212..1217]
 a270(r343): [1214..1215]
 a271(r342): [1218..1219]
 a272(r116): [1831..1834]
 a273(r115): [1840..1843]
 a274(r114): [1849..1852]
 a275(r113): [1851..1863]
 a276(r341): [1858..1861]
 a277(r112): [1869..1870]
 a278(r340): [1871..1872]
 a279(r274): [1883..1886]
 a280(r273): [1892..1895]
 a281(r272): [1894..1906]
 a282(r339): [1901..1902]
 a283(r271): [1907..1908]
 a284(r270): [1914..1915]
 a285(r338): [1916..1917]
 a286(r337): [1926..1927]
 a287(r111): [1933..1936]
 a288(r336): [1942..1945]
 a289(r335): [1944..1947]
 a290(r334): [1953..1956]
 a291(r110): [1955..1958]
 a292(r333): [1959..1960]
 a293(r332): [1969..1970]
 a294(r109): [1976..1979]
 a295(r331): [1985..1988]
 a296(r330): [1987..1990]
 a297(r329): [1996..1999]
 a298(r108): [1998..2001]
 a299(r328): [2002..2003]
 a300(r327): [2012..2013]
 a301(r107): [2019..2022]
 a302(r326): [2028..2031]
 a303(r325): [2030..2033]
 a304(r324): [2039..2042]
 a305(r106): [2041..2044]
 a306(r323): [2045..2046]
 a307(r322): [2055..2056]
 a308(r105): [2062..2065]
 a309(r321): [2071..2074]
 a310(r320): [2073..2076]
 a311(r319): [2082..2085]
 a312(r104): [2084..2087]
 a313(r318): [2088..2089]
 a314(r317): [2098..2099]
 a315(r103): [2105..2108]
 a316(r316): [2114..2117]
 a317(r315): [2116..2119]
 a318(r314): [2125..2128]
 a319(r102): [2127..2130]
 a320(r313): [2131..2132]
 a321(r312): [2141..2142]
 a322(r101): [2148..2151]
 a323(r311): [2157..2160]
 a324(r310): [2159..2162]
 a325(r309): [2168..2171]
 a326(r100): [2170..2173]
 a327(r308): [2174..2175]
 a328(r307): [2184..2185]
 a329(r99): [2191..2194]
 a330(r306): [2200..2203]
 a331(r305): [2202..2205]
 a332(r304): [2211..2214]
 a333(r98): [2213..2216]
 a334(r303): [2217..2218]
 a335(r301): [2222..2223]
 a336(r302): [2224..2225]
 a337(r300): [2224..2227]
 a338(r299): [2228..2229]
 a339(r298): [2230..2231]
 a340(r297): [2230..2233]
 a341(r296): [2234..2235]
 a342(r97): [2236..2242]
 a343(r96): [2243..2244]
 a344(r95): [2250..2251]
 a345(r295): [2252..2253]
 a346(r94): [2259..2262]
 a347(r93): [2268..2271]
 a348(r88): [2270..2311]
 a349(r92): [2277..2280]
 a350(r91): [2286..2289]
 a351(r90): [2288..2300]
 a352(r294): [2295..2298]
 a353(r89): [2306..2307]
 a354(r293): [2308..2309]
 a355(r87): [2317..2318]
 a356(r292): [2319..2320]
 a357(r86): [2337..2338]
 a358(r85): [2339..2340]
 a359(r84): [2341..2342]
 a360(r291): [2348..2349]
 a361(r290): [2350..2351]
 a362(r289): [2356..2359]
 a363(r288): [2360..2361]
 a364(r287): [2366..2371]
 a365(r286): [2372..2373]
 a366(r285): [2379..2384]
 a367(r83): [2381..2386]
 a368(r284): [2392..2393]
 a369(r283): [2399..2402]
 a370(r282): [2407..2408]
 a371(r281): [2414..2419]
 a372(r280): [2416..2421]
 a373(r279): [2418..2423]
 a374(r278): [2428..2429]
 a375(r277): [2434..2435]
Compressing live ranges: from 2442 to 642 - 26%
Ranges after the compression:
 a0(r275): [0..1]
 a1(r441): [36..37] [2..5]
 a2(r469): [2..3]
 a3(r446): [32..33] [28..29] [24..25] [20..21] [16..17] [12..13] [6..9]
 a4(r468): [6..7]
 a5(r466): [10..11]
 a6(r465): [10..11]
 a7(r463): [14..15]
 a8(r462): [14..15]
 a9(r460): [18..19]
 a10(r459): [18..19]
 a11(r457): [22..23]
 a12(r456): [22..23]
 a13(r454): [26..27]
 a14(r453): [26..27]
 a15(r451): [30..31]
 a16(r450): [30..31]
 a17(r447): [34..35]
 a18(r445): [34..35]
 a19(r442): [38..39]
 a20(r440): [38..39]
 a21(r439): [40..41]
 a22(r438): [42..43]
 a23(r179): [58..59]
 a24(r437): [60..61]
 a25(r436): [60..61]
 a26(r435): [62..63]
 a27(r434): [64..65]
 a28(r178): [66..67]
 a29(r177): [68..69]
 a30(r433): [70..71]
 a31(r432): [72..73]
 a32(r431): [74..75]
 a33(r430): [76..77]
 a34(r269): [78..79]
 a35(r268): [80..81]
 a36(r267): [82..83]
 a37(r429): [84..85]
 a38(r428): [44..45]
 a39(r427): [46..47]
 a40(r426): [116..117]
 a41(r425): [108..109]
 a42(r424): [114..115]
 a43(r423): [110..111]
 a44(r266): [118..119] [112..113]
 a45(r265): [120..121]
 a46(r264): [122..123]
 a47(r263): [124..125]
 a48(r262): [126..127]
 a49(r422): [128..129]
 a50(r421): [48..49]
 a51(r420): [94..95]
 a52(r419): [86..87]
 a53(r418): [92..93]
 a54(r417): [88..89]
 a55(r261): [96..97] [90..91]
 a56(r260): [98..99]
 a57(r259): [100..101]
 a58(r258): [102..103]
 a59(r257): [104..105]
 a60(r416): [106..107]
 a61(r256): [130..131]
 a62(r255): [132..133]
 a63(r254): [134..135]
 a64(r253): [136..137]
 a65(r252): [138..139]
 a66(r415): [140..141]
 a67(r414): [50..51]
 a68(r251): [194..195]
 a69(r250): [196..197]
 a70(r235): [196..227]
 a71(r249): [198..199]
 a72(r248): [200..201]
 a73(r240): [200..217]
 a74(r247): [202..203]
 a75(r246): [204..205]
 a76(r244): [204..209]
 a77(r245): [206..207]
 a78(r413): [208..209]
 a79(r243): [210..211]
 a80(r242): [212..213]
 a81(r241): [214..215]
 a82(r412): [216..217]
 a83(r239): [218..219]
 a84(r238): [220..221]
 a85(r237): [222..223]
 a86(r236): [224..225]
 a87(r411): [226..227]
 a88(r234): [228..229]
 a89(r233): [230..231]
 a90(r232): [232..233]
 a91(r231): [234..235]
 a92(r410): [236..237]
 a93(r230): [142..143]
 a94(r229): [144..145]
 a95(r210): [144..183]
 a96(r228): [146..147]
 a97(r227): [148..149]
 a98(r215): [148..173]
 a99(r226): [150..151]
 a100(r225): [152..153]
 a101(r219): [152..165]
 a102(r224): [154..155]
 a103(r409): [156..157]
 a104(r223): [156..157]
 a105(r222): [158..159]
 a106(r221): [160..161]
 a107(r220): [162..163]
 a108(r408): [164..165]
 a109(r218): [166..167]
 a110(r217): [168..169]
 a111(r216): [170..171]
 a112(r407): [172..173]
 a113(r214): [174..175]
 a114(r213): [176..177]
 a115(r212): [178..179]
 a116(r211): [180..181]
 a117(r406): [182..183]
 a118(r209): [184..185]
 a119(r208): [186..187]
 a120(r207): [188..189]
 a121(r206): [190..191]
 a122(r405): [192..193]
 a123(r205): [238..239]
 a124(r204): [240..241]
 a125(r203): [242..243]
 a126(r202): [244..245]
 a127(r201): [246..247]
 a128(r404): [248..249]
 a129(r200): [250..251]
 a130(r199): [252..253]
 a131(r182): [252..287]
 a132(r198): [254..255]
 a133(r197): [256..257]
 a134(r186): [256..279]
 a135(r196): [258..259]
 a136(r195): [260..261]
 a137(r190): [260..271]
 a138(r194): [262..263]
 a139(r403): [264..265]
 a140(r193): [264..265]
 a141(r192): [266..267]
 a142(r191): [268..269]
 a143(r402): [270..271]
 a144(r189): [272..273]
 a145(r188): [274..275]
 a146(r187): [276..277]
 a147(r401): [278..279]
 a148(r185): [280..281]
 a149(r184): [282..283]
 a150(r183): [284..285]
 a151(r400): [286..287]
 a152(r181): [52..53]
 a153(r180): [54..55]
 a154(r399): [56..57]
 a155(r398): [288..289]
 a156(r397): [290..291]
 a157(r176): [292..293]
 a158(r175): [294..295]
 a159(r396): [296..297]
 a160(r395): [298..299]
 a161(r174): [300..301]
 a162(r173): [302..303]
 a163(r172): [302..305]
 a164(r394): [304..305]
 a165(r171): [306..307]
 a166(r393): [308..309]
 a167(r119): [318..319]
 a168(r118): [320..321]
 a169(r117): [322..323]
 a170(r392): [324..325]
 a171(r391): [326..327]
 a172(r390): [310..311]
 a173(r389): [338..339]
 a174(r388): [330..331]
 a175(r387): [336..337]
 a176(r386): [334..335]
 a177(r385): [332..333]
 a178(r383): [340..341]
 a179(r384): [342..343]
 a180(r382): [342..343]
 a181(r381): [344..345]
 a182(r380): [346..347]
 a183(r379): [346..347]
 a184(r378): [348..349]
 a185(r170): [350..351]
 a186(r169): [352..353]
 a187(r168): [354..355]
 a188(r167): [356..357]
 a189(r166): [358..359]
 a190(r377): [358..359]
 a191(r376): [360..361]
 a192(r165): [362..363]
 a193(r375): [364..365]
 a194(r164): [364..365]
 a195(r163): [366..367]
 a196(r162): [368..369]
 a197(r161): [370..371]
 a198(r374): [370..371]
 a199(r373): [372..373]
 a200(r372): [312..313]
 a201(r371): [444..445]
 a202(r370): [436..437]
 a203(r369): [442..443]
 a204(r368): [440..441]
 a205(r367): [438..439]
 a206(r365): [446..447]
 a207(r366): [448..449]
 a208(r364): [448..449]
 a209(r363): [450..451]
 a210(r362): [452..453]
 a211(r361): [452..453]
 a212(r360): [454..455]
 a213(r160): [456..457]
 a214(r159): [458..459]
 a215(r158): [460..461]
 a216(r157): [462..463]
 a217(r156): [464..465]
 a218(r359): [464..465]
 a219(r358): [466..467]
 a220(r155): [468..469]
 a221(r357): [470..471]
 a222(r154): [470..471]
 a223(r153): [472..473]
 a224(r152): [474..475]
 a225(r151): [476..477]
 a226(r356): [476..477]
 a227(r355): [478..479]
 a228(r150): [374..375] [328..329]
 a229(r149): [376..377]
 a230(r148): [378..379]
 a231(r147): [380..381]
 a232(r146): [382..383]
 a233(r354): [382..383]
 a234(r353): [384..385]
 a235(r145): [386..387]
 a236(r144): [388..389]
 a237(r122): [388..433]
 a238(r143): [390..391]
 a239(r142): [392..393]
 a240(r125): [392..427]
 a241(r141): [394..395]
 a242(r140): [396..397]
 a243(r129): [396..419]
 a244(r139): [398..399]
 a245(r138): [400..401]
 a246(r133): [400..411]
 a247(r137): [402..403]
 a248(r352): [404..405]
 a249(r136): [404..405]
 a250(r135): [406..407]
 a251(r134): [408..409]
 a252(r351): [408..409]
 a253(r350): [410..411]
 a254(r132): [412..413]
 a255(r131): [414..415]
 a256(r130): [416..417]
 a257(r349): [416..417]
 a258(r348): [418..419]
 a259(r128): [420..421]
 a260(r127): [422..423]
 a261(r126): [424..425]
 a262(r347): [424..425]
 a263(r346): [426..427]
 a264(r124): [428..429]
 a265(r123): [430..431]
 a266(r345): [430..431]
 a267(r344): [432..433]
 a268(r121): [434..435]
 a269(r120): [314..315]
 a270(r343): [314..315]
 a271(r342): [316..317]
 a272(r116): [480..481]
 a273(r115): [482..483]
 a274(r114): [484..485]
 a275(r113): [484..487]
 a276(r341): [486..487]
 a277(r112): [488..489]
 a278(r340): [490..491]
 a279(r274): [492..493]
 a280(r273): [494..495]
 a281(r272): [494..497]
 a282(r339): [496..497]
 a283(r271): [498..499]
 a284(r270): [500..501]
 a285(r338): [502..503]
 a286(r337): [504..505]
 a287(r111): [506..507]
 a288(r336): [508..509]
 a289(r335): [508..509]
 a290(r334): [510..511]
 a291(r110): [510..511]
 a292(r333): [512..513]
 a293(r332): [514..515]
 a294(r109): [516..517]
 a295(r331): [518..519]
 a296(r330): [518..519]
 a297(r329): [520..521]
 a298(r108): [520..521]
 a299(r328): [522..523]
 a300(r327): [524..525]
 a301(r107): [526..527]
 a302(r326): [528..529]
 a303(r325): [528..529]
 a304(r324): [530..531]
 a305(r106): [530..531]
 a306(r323): [532..533]
 a307(r322): [534..535]
 a308(r105): [536..537]
 a309(r321): [538..539]
 a310(r320): [538..539]
 a311(r319): [540..541]
 a312(r104): [540..541]
 a313(r318): [542..543]
 a314(r317): [544..545]
 a315(r103): [546..547]
 a316(r316): [548..549]
 a317(r315): [548..549]
 a318(r314): [550..551]
 a319(r102): [550..551]
 a320(r313): [552..553]
 a321(r312): [554..555]
 a322(r101): [556..557]
 a323(r311): [558..559]
 a324(r310): [558..559]
 a325(r309): [560..561]
 a326(r100): [560..561]
 a327(r308): [562..563]
 a328(r307): [564..565]
 a329(r99): [566..567]
 a330(r306): [568..569]
 a331(r305): [568..569]
 a332(r304): [570..571]
 a333(r98): [570..571]
 a334(r303): [572..573]
 a335(r301): [574..575]
 a336(r302): [576..577]
 a337(r300): [576..577]
 a338(r299): [578..579]
 a339(r298): [580..581]
 a340(r297): [580..581]
 a341(r296): [582..583]
 a342(r97): [584..585]
 a343(r96): [586..587]
 a344(r95): [588..589]
 a345(r295): [590..591]
 a346(r94): [592..593]
 a347(r93): [594..595]
 a348(r88): [594..605]
 a349(r92): [596..597]
 a350(r91): [598..599]
 a351(r90): [598..601]
 a352(r294): [600..601]
 a353(r89): [602..603]
 a354(r293): [604..605]
 a355(r87): [606..607]
 a356(r292): [608..609]
 a357(r86): [610..611]
 a358(r85): [612..613]
 a359(r84): [614..615]
 a360(r291): [616..617]
 a361(r290): [618..619]
 a362(r289): [620..621]
 a363(r288): [622..623]
 a364(r287): [624..625]
 a365(r286): [626..627]
 a366(r285): [628..629]
 a367(r83): [628..629]
 a368(r284): [630..631]
 a369(r283): [632..633]
 a370(r282): [634..635]
 a371(r281): [636..637]
 a372(r280): [636..637]
 a373(r279): [636..637]
 a374(r278): [638..639]
 a375(r277): [640..641]
  pref0:a76(r244)<-hr21@1
  pref1:a104(r223)<-hr21@1
  pref2:a101(r219)<-hr21@1
  pref3:a131(r182)<-hr21@1
  pref4:a246(r133)<-hr21@1
  pref5:a243(r129)<-hr21@1
  regions=1, blocks=276, points=642
    allocnos=376 (big 0), copies=0, conflicts=0, ranges=386
Disposition:
  367:r83  l0     2  359:r84  l0     0  358:r85  l0     0  357:r86  l0     0
  355:r87  l0     0  348:r88  l0     3  353:r89  l0     0  351:r90  l0    41
  350:r91  l0     0  349:r92  l0     0  347:r93  l0     0  346:r94  l0     0
  344:r95  l0     0  343:r96  l0     0  342:r97  l0     0  333:r98  l0     1
  329:r99  l0     0  326:r100 l0     1  322:r101 l0     0  319:r102 l0     1
  315:r103 l0     0  312:r104 l0     1  308:r105 l0     0  305:r106 l0     1
  301:r107 l0     0  298:r108 l0     1  294:r109 l0     0  291:r110 l0     1
  287:r111 l0     0  277:r112 l0     0  275:r113 l0     3  274:r114 l0     0
  273:r115 l0     0  272:r116 l0     0  169:r117 l0     0  168:r118 l0     0
  167:r119 l0     0  269:r120 l0     0  268:r121 l0     0  237:r122 l0     3
  265:r123 l0     0  264:r124 l0     0  240:r125 l0    41  261:r126 l0     0
  260:r127 l0     0  259:r128 l0     0  243:r129 l0    42  256:r130 l0     0
  255:r131 l0     0  254:r132 l0     0  246:r133 l0    43  251:r134 l0     0
  250:r135 l0     0  249:r136 l0     1  247:r137 l0     0  245:r138 l0     0
  244:r139 l0     0  242:r140 l0     0  241:r141 l0     0  239:r142 l0     0
  238:r143 l0     0  236:r144 l0     0  235:r145 l0     0  232:r146 l0     0
  231:r147 l0     0  230:r148 l0     0  229:r149 l0     0  228:r150 l0     0
  225:r151 l0     0  224:r152 l0     0  223:r153 l0     0  222:r154 l0     1
  220:r155 l0     0  217:r156 l0     0  216:r157 l0     0  215:r158 l0     0
  214:r159 l0     0  213:r160 l0     0  197:r161 l0     0  196:r162 l0     0
  195:r163 l0     0  194:r164 l0     1  192:r165 l0     0  189:r166 l0     0
  188:r167 l0     0  187:r168 l0     0  186:r169 l0     0  185:r170 l0     0
  165:r171 l0     0  163:r172 l0     3  162:r173 l0     0  161:r174 l0     0
  158:r175 l0     0  157:r176 l0     0   29:r177 l0     0   28:r178 l0     0
   23:r179 l0     0  153:r180 l0     0  152:r181 l0     0  131:r182 l0    42
  150:r183 l0     0  149:r184 l0     0  148:r185 l0     0  134:r186 l0     3
  146:r187 l0     0  145:r188 l0     0  144:r189 l0     0  137:r190 l0    41
  142:r191 l0     0  141:r192 l0     0  140:r193 l0     1  138:r194 l0     0
  136:r195 l0     0  135:r196 l0     0  133:r197 l0     0  132:r198 l0     0
  130:r199 l0     0  129:r200 l0     0  127:r201 l0     0  126:r202 l0     0
  125:r203 l0     0  124:r204 l0     0  123:r205 l0     0  121:r206 l0     0
  120:r207 l0     0  119:r208 l0     0  118:r209 l0     0   95:r210 l0     3
  116:r211 l0     0  115:r212 l0     0  114:r213 l0     0  113:r214 l0     0
   98:r215 l0    41  111:r216 l0     0  110:r217 l0     0  109:r218 l0     0
  101:r219 l0    42  107:r220 l0     0  106:r221 l0     0  105:r222 l0     0
  104:r223 l0     1  102:r224 l0     0  100:r225 l0     0   99:r226 l0     0
   97:r227 l0     0   96:r228 l0     0   94:r229 l0     0   93:r230 l0     0
   91:r231 l0     0   90:r232 l0     0   89:r233 l0     0   88:r234 l0     0
   70:r235 l0     3   86:r236 l0     0   85:r237 l0     0   84:r238 l0     0
   83:r239 l0     0   73:r240 l0    41   81:r241 l0     0   80:r242 l0     0
   79:r243 l0     0   76:r244 l0    42   77:r245 l0     0   75:r246 l0     0
   74:r247 l0     0   72:r248 l0     0   71:r249 l0     0   69:r250 l0     0
   68:r251 l0     0   65:r252 l0     0   64:r253 l0     0   63:r254 l0     0
   62:r255 l0     0   61:r256 l0     0   59:r257 l0     0   58:r258 l0     0
   57:r259 l0     0   56:r260 l0     0   55:r261 l0     0   48:r262 l0     0
   47:r263 l0     0   46:r264 l0     0   45:r265 l0     0   44:r266 l0     0
   36:r267 l0     0   35:r268 l0     0   34:r269 l0     0  284:r270 l0     0
  283:r271 l0     0  281:r272 l0     3  280:r273 l0     0  279:r274 l0     0
    0:r275 l0     0  375:r277 l0     0  374:r278 l0     0  373:r279 l0     1
  372:r280 l0     2  371:r281 l0     0  370:r282 l0     0  369:r283 l0     0
  368:r284 l0     0  366:r285 l0     0  365:r286 l0     0  364:r287 l0     0
  363:r288 l0     0  362:r289 l0     0  361:r290 l0     0  360:r291 l0     0
  356:r292 l0     0  354:r293 l0     0  352:r294 l0     0  345:r295 l0     0
  341:r296 l0     0  340:r297 l0     1  339:r298 l0     0  338:r299 l0     0
  337:r300 l0     1  335:r301 l0     0  336:r302 l0     0  334:r303 l0     0
  332:r304 l0     0  331:r305 l0     1  330:r306 l0     0  328:r307 l0     0
  327:r308 l0     0  325:r309 l0     0  324:r310 l0     1  323:r311 l0     0
  321:r312 l0     0  320:r313 l0     0  318:r314 l0     0  317:r315 l0     1
  316:r316 l0     0  314:r317 l0     0  313:r318 l0     0  311:r319 l0     0
  310:r320 l0     1  309:r321 l0     0  307:r322 l0     0  306:r323 l0     0
  304:r324 l0     0  303:r325 l0     1  302:r326 l0     0  300:r327 l0     0
  299:r328 l0     0  297:r329 l0     0  296:r330 l0     1  295:r331 l0     0
  293:r332 l0     0  292:r333 l0     0  290:r334 l0     0  289:r335 l0     1
  288:r336 l0     0  286:r337 l0     0  285:r338 l0     0  282:r339 l0     0
  278:r340 l0     0  276:r341 l0     0  271:r342 l0     0  270:r343 l0     1
  267:r344 l0     0  266:r345 l0     1  263:r346 l0     0  262:r347 l0     1
  258:r348 l0     0  257:r349 l0     1  253:r350 l0     0  252:r351 l0     1
  248:r352 l0     0  234:r353 l0     0  233:r354 l0     1  227:r355 l0     0
  226:r356 l0     1  221:r357 l0     0  219:r358 l0     0  218:r359 l0     1
  212:r360 l0     0  211:r361 l0     1  210:r362 l0     0  209:r363 l0     0
  208:r364 l0     1  206:r365 l0     0  207:r366 l0     0  205:r367 l0     0
  204:r368 l0     0  203:r369 l0     0  202:r370 l0     0  201:r371 l0     0
  200:r372 l0     0  199:r373 l0     0  198:r374 l0     1  193:r375 l0     0
  191:r376 l0     0  190:r377 l0     1  184:r378 l0     0  183:r379 l0     1
  182:r380 l0     0  181:r381 l0     0  180:r382 l0     1  178:r383 l0     0
  179:r384 l0     0  177:r385 l0     0  176:r386 l0     0  175:r387 l0     0
  174:r388 l0     0  173:r389 l0     0  172:r390 l0     0  171:r391 l0     0
  170:r392 l0     0  166:r393 l0     0  164:r394 l0     0  160:r395 l0     0
  159:r396 l0     0  156:r397 l0     0  155:r398 l0     0  154:r399 l0     0
  151:r400 l0     0  147:r401 l0     0  143:r402 l0     0  139:r403 l0     0
  128:r404 l0     0  122:r405 l0     0  117:r406 l0     0  112:r407 l0     0
  108:r408 l0     0  103:r409 l0     0   92:r410 l0     0   87:r411 l0     0
   82:r412 l0     0   78:r413 l0     0   67:r414 l0     0   66:r415 l0     0
   60:r416 l0     0   54:r417 l0     0   53:r418 l0     0   52:r419 l0     0
   51:r420 l0     0   50:r421 l0     0   49:r422 l0     0   43:r423 l0     0
   42:r424 l0     0   41:r425 l0     0   40:r426 l0     0   39:r427 l0     0
   38:r428 l0     0   37:r429 l0     0   33:r430 l0     0   32:r431 l0     0
   31:r432 l0     0   30:r433 l0     0   27:r434 l0     0   26:r435 l0     0
   25:r436 l0     1   24:r437 l0     0   22:r438 l0     0   21:r439 l0     0
   20:r440 l0     0    1:r441 l0     3   19:r442 l0     3   18:r445 l0     0
    3:r446 l0     3   17:r447 l0     3   16:r450 l0     0   15:r451 l0     3
   14:r453 l0     0   13:r454 l0     3   12:r456 l0     0   11:r457 l0     3
   10:r459 l0     0    9:r460 l0     3    8:r462 l0     0    7:r463 l0     3
    6:r465 l0     0    5:r466 l0     3    4:r468 l0     0    2:r469 l0     0
+++Costs: overall -317, reg -317, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void brite::Topology::BriteOutput(char*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0]
;;  ref usage 	r0={238d,142u} r1={247d,9u} r2={234d,6u} r4={346d,119u} r5={455d,228u} r6={1d,275u} r7={1d,502u} r8={227d} r9={227d} r10={227d} r11={227d} r12={227d} r13={227d} r14={227d} r15={227d} r16={1d,274u} r17={364d,24u} r18={227d} r19={227d} r20={1d,421u} r21={234d,12u} r22={228d} r23={228d} r24={228d} r25={228d} r26={228d} r27={228d} r28={228d} r29={227d} r30={227d} r31={227d} r32={227d} r33={227d} r34={227d} r35={227d} r36={227d} r37={228d} r38={228d} r39={227d} r40={227d} r45={227d} r46={227d} r47={227d} r48={227d} r49={227d} r50={227d} r51={227d} r52={227d} r53={227d} r54={227d} r55={227d} r56={227d} r57={227d} r58={227d} r59={227d} r60={227d} r61={227d} r62={227d} r63={227d} r64={227d} r65={227d} r66={227d} r67={227d} r68={227d} r69={227d} r70={227d} r71={227d} r72={227d} r73={227d} r74={227d} r75={227d} r76={227d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,2u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,2u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,2u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,2u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,2u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,2u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,5u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,5u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={1d,1u} r287={1d,1u} r288={1d,1u} r289={1d,1u} r290={1d,1u} r291={1d,1u} r292={1d,1u} r293={1d,1u} r294={1d,1u} r295={1d,1u} r296={1d,1u} r297={1d,1u} r298={1d,1u} r299={1d,1u} r300={1d,1u} r301={1d,1u} r302={1d,1u} r303={1d,1u} r304={1d,1u} r305={1d,1u} r306={1d,1u} r307={1d,1u} r308={1d,1u} r309={1d,1u} r310={1d,1u} r311={1d,1u} r312={1d,1u} r313={1d,1u} r314={1d,1u} r315={1d,1u} r316={1d,1u} r317={1d,1u} r318={1d,1u} r319={1d,1u} r320={1d,1u} r321={1d,1u} r322={1d,1u} r323={1d,1u} r324={1d,1u} r325={1d,1u} r326={1d,1u} r327={1d,1u} r328={1d,1u} r329={1d,1u} r330={1d,1u} r331={1d,1u} r332={1d,1u} r333={1d,1u} r334={1d,1u} r335={1d,1u} r336={1d,1u} r337={1d,1u} r338={1d,1u} r339={1d,1u} r340={1d,1u} r341={1d,1u} r342={1d,1u} r343={1d,1u} r344={1d,1u} r345={1d,1u} r346={1d,1u} r347={1d,1u} r348={1d,1u} r349={1d,1u} r350={1d,1u} r351={1d,1u} r352={1d,1u} r353={1d,1u} r354={1d,1u} r355={1d,1u} r356={1d,1u} r357={1d,1u} r358={1d,1u} r359={1d,1u} r360={1d,1u} r361={1d,1u} r362={1d,1u} r363={1d,1u} r364={1d,1u} r365={1d,1u} r366={1d,1u} r367={1d,1u} r368={1d,1u} r369={1d,1u} r370={1d,1u} r371={1d,1u} r372={1d,1u} r373={1d,1u} r374={1d,1u} r375={1d,1u} r376={1d,1u} r377={1d,1u} r378={1d,1u} r379={1d,1u} r380={1d,1u} r381={1d,1u} r382={1d,1u} r383={1d,1u} r384={1d,1u} r385={1d,1u} r386={1d,1u} r387={1d,1u} r388={1d,1u} r389={1d,1u} r390={1d,1u} r391={1d,1u} r392={1d,1u} r393={1d,1u} r394={1d,1u} r395={1d,1u} r396={1d,1u} r397={1d,1u} r398={1d,1u} r399={1d,1u} r400={1d,1u} r401={1d,1u} r402={1d,1u} r403={1d,1u} r404={1d,1u} r405={1d,1u} r406={1d,1u} r407={1d,1u} r408={1d,1u} r409={1d,1u} r410={1d,1u} r411={1d,1u} r412={1d,1u} r413={1d,1u} r414={1d,1u} r415={1d,1u} r416={1d,1u} r417={1d,1u} r418={1d,1u} r419={1d,1u} r420={1d,1u} r421={1d,1u} r422={1d,1u} r423={1d,1u} r424={1d,1u} r425={1d,1u} r426={1d,1u} r427={1d,1u} r428={1d,1u} r429={1d,1u} r430={1d,1u} r431={1d,1u} r432={1d,1u} r433={1d,1u} r434={1d,1u} r435={1d,1u} r436={1d,1u} r437={1d,1u} r438={1d,1u} r439={1d,1u} r440={1d,1u} r441={3d,1u} r442={1d,1u} r445={1d,1u} r446={8d,1u} r447={1d,1u} r450={1d,1u} r451={1d,1u} r453={1d,1u} r454={1d,1u} r456={1d,1u} r457={1d,1u} r459={1d,1u} r460={1d,1u} r462={1d,1u} r463={1d,1u} r465={1d,1u} r466={1d,1u} r468={1d,1u} r469={1d,1u} 
;;    total ref usage 18765{16363d,2402u,0e} in 1084{857 regular + 227 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 277 278 279 280 281
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1064 [0xfffffffffffffbd8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) Topology.cc:90 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1072 [0xfffffffffffffbd0])) [0 filename+0 S8 A64])
        (reg:DI 4 si [ filename ])) Topology.cc:90 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ filename ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (parallel [
            (set (reg:DI 277)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:92 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg:DI 277)) Topology.cc:92 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 277)
        (nil)))
(call_insn 9 8 10 2 (call (mem:QI (symbol_ref:DI ("_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev") [flags 0x41]  <function_decl 0x1032d6100 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) Topology.cc:92 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 278)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -129 [0xffffffffffffff7f])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:93 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 278)) Topology.cc:93 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 278)
        (nil)))
(call_insn 12 11 13 2 (call (mem:QI (symbol_ref:DI ("_ZNSaIcEC1Ev") [flags 0x41]  <function_decl 0x1028b2500 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) Topology.cc:93 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 279)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -129 [0xffffffffffffff7f])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:93 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 280)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1072 [0xfffffffffffffbd0])) [0 filename+0 S8 A64])) Topology.cc:93 89 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg:DI 281)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:93 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 1 dx)
        (reg:DI 279)) Topology.cc:93 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 279)
        (nil)))
(insn 17 16 18 2 (set (reg:DI 4 si)
        (reg:DI 280)) Topology.cc:93 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 280)
        (nil)))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg:DI 281)) Topology.cc:93 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 281)
        (nil)))
(call_insn 19 18 20 2 (call (mem:QI (symbol_ref:DI ("_ZNSsC1EPKcRKSaIcE") [flags 0x41]  <function_decl 0x102aded00 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) Topology.cc:93 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 2 [0x2])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       262 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 282 283
(note 20 19 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 3 (parallel [
            (set (reg:DI 282)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -129 [0xffffffffffffff7f])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:93 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 22 21 23 3 (set (reg:DI 5 di)
        (reg:DI 282)) Topology.cc:93 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 282)
        (nil)))
(call_insn 23 22 24 3 (call (mem:QI (symbol_ref:DI ("_ZNSaIcED1Ev") [flags 0x41]  <function_decl 0x1028b2700 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) Topology.cc:93 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 24 23 25 3 (parallel [
            (set (reg:DI 283)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:94 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 25 24 26 3 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC2") [flags 0x2]  <var_decl 0x1041aa260 *LC2>)) Topology.cc:94 89 {*movdi_internal}
     (nil))
(insn 26 25 27 3 (set (reg:DI 5 di)
        (reg:DI 283)) Topology.cc:94 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 283)
        (nil)))
(call_insn 27 26 28 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSspLEPKc") [flags 0x41]  <function_decl 0x102aab200 operator+=>) [0 operator+= S1 A8])
            (const_int 0 [0]))) Topology.cc:94 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 284
(note 28 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 4 (parallel [
            (set (reg:DI 284)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:95 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 30 29 31 4 (set (reg:DI 5 di)
        (reg:DI 284)) Topology.cc:95 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 284)
        (nil)))
(call_insn 31 30 1469 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNKSs5c_strEv") [flags 0x41]  <function_decl 0x102acd700 c_str>) [0 c_str S1 A8])
            (const_int 0 [0]))) Topology.cc:95 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 285
(note 1469 31 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 1469 34 5 (set (reg/f:DI 83 [ D.45035 ])
        (reg:DI 0 ax)) Topology.cc:95 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 34 32 35 5 (parallel [
            (set (reg:DI 285)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:95 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 35 34 36 5 (set (reg:SI 1 dx)
        (const_int 16 [0x10])) Topology.cc:95 90 {*movsi_internal}
     (nil))
(insn 36 35 37 5 (set (reg:DI 4 si)
        (reg/f:DI 83 [ D.45035 ])) Topology.cc:95 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45035 ])
        (nil)))
(insn 37 36 38 5 (set (reg:DI 5 di)
        (reg:DI 285)) Topology.cc:95 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 285)
        (nil)))
(call_insn 38 37 39 5 (call (mem:QI (symbol_ref:DI ("_ZNSt14basic_ofstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode") [flags 0x41]  <function_decl 0x1032ced00 open>) [0 open S1 A8])
        (const_int 0 [0])) Topology.cc:95 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 286 287 288 289 290 291
(note 39 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 6 (parallel [
            (set (reg:DI 286)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:96 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 41 40 42 6 (parallel [
            (set (reg:DI 287)
                (plus:DI (reg:DI 286)
                    (const_int 632 [0x278])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:96 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 286)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 42 41 43 6 (set (reg:SI 1 dx)
        (const_int 260 [0x104])) Topology.cc:96 90 {*movsi_internal}
     (nil))
(insn 43 42 44 6 (set (reg:SI 4 si)
        (const_int 4 [0x4])) Topology.cc:96 90 {*movsi_internal}
     (nil))
(insn 44 43 45 6 (set (reg:DI 5 di)
        (reg:DI 287)) Topology.cc:96 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 287)
        (nil)))
(call_insn 45 44 46 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_") [flags 0x1]  <function_decl 0x102c61e00 setf>) [0 setf S1 A8])
            (const_int 0 [0]))) Topology.cc:96 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 46 45 47 6 (parallel [
            (set (reg:DI 288)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:97 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 47 46 48 6 (parallel [
            (set (reg:DI 289)
                (plus:DI (reg:DI 288)
                    (const_int 632 [0x278])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:97 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 288)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 48 47 49 6 (set (reg:DI 4 si)
        (const_int 2 [0x2])) Topology.cc:97 89 {*movdi_internal}
     (nil))
(insn 49 48 50 6 (set (reg:DI 5 di)
        (reg:DI 289)) Topology.cc:97 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 289)
        (nil)))
(call_insn 50 49 51 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt8ios_base9precisionEl") [flags 0x1]  <function_decl 0x102c6b100 precision>) [0 precision S1 A8])
            (const_int 0 [0]))) Topology.cc:97 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 51 50 52 6 (parallel [
            (set (reg:DI 290)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:98 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 52 51 53 6 (parallel [
            (set (reg:DI 291)
                (plus:DI (reg:DI 290)
                    (const_int 632 [0x278])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:98 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 290)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 53 52 54 6 (set (reg:DI 5 di)
        (reg:DI 291)) Topology.cc:98 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 291)
        (nil)))
(call_insn 54 53 1470 6 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNKSt9basic_iosIcSt11char_traitsIcEEntEv") [flags 0x41]  <function_decl 0x102f33e00 operator!>) [0 operator! S1 A8])
            (const_int 0 [0]))) Topology.cc:98 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              7 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 84 85 86
(note 1470 54 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 55 1470 57 7 (set (reg:QI 84 [ D.45036 ])
        (reg:QI 0 ax)) Topology.cc:98 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 57 55 58 7 (set (reg:DI 85 [ D.45037 ])
        (zero_extend:DI (reg:QI 84 [ D.45036 ]))) Topology.cc:98 134 {zero_extendqidi2}
     (expr_list:REG_DEAD (reg:QI 84 [ D.45036 ])
        (nil)))
(insn 58 57 59 7 (set (reg:DI 86 [ D.45037 ])
        (reg:DI 85 [ D.45037 ])) Topology.cc:98 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85 [ D.45037 ])
        (nil)))
(insn 59 58 60 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 86 [ D.45037 ])
            (const_int 0 [0]))) Topology.cc:98 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 86 [ D.45037 ])
        (nil)))
(jump_insn 60 59 61 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) Topology.cc:98 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 68)
;;  succ:       8 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 61 60 62 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 8 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*LC3") [flags 0x2]  <var_decl 0x1041aa2f8 *LC3>)) Topology.cc:98 89 {*movdi_internal}
     (nil))
(insn 63 62 64 8 (set (reg:SI 1 dx)
        (const_int 98 [0x62])) Topology.cc:98 90 {*movsi_internal}
     (nil))
(insn 64 63 65 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC1") [flags 0x2]  <var_decl 0x10417fda8 *LC1>)) Topology.cc:98 89 {*movdi_internal}
     (nil))
(insn 65 64 66 8 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZZN5brite8Topology11BriteOutputEPcE8__func__") [flags 0x1c02]  <var_decl 0x103d087b8 __func__>)) Topology.cc:98 89 {*movdi_internal}
     (nil))
(call_insn 66 65 67 8 (call (mem:QI (symbol_ref:DI ("__assert_rtn") [flags 0x41]  <function_decl 0x1035dc600 __assert_rtn>) [0 __assert_rtn S1 A8])
        (const_int 0 [0])) Topology.cc:98 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 4 [0x4])
                        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                            (expr_list:REG_NORETURN (const_int 0 [0])
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 67 66 68)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 87 292
(code_label 68 67 69 9 44 "" [1 uses])
(note 69 68 70 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 9 (set (reg/f:DI 292)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1064 [0xfffffffffffffbd8])) [0 this+0 S8 A64])) Topology.cc:101 89 {*movdi_internal}
     (nil))
(insn 71 70 72 9 (set (reg/f:DI 87 [ D.45038 ])
        (mem/f/j:DI (reg/f:DI 292) [0 this_9(D)->g+0 S8 A64])) Topology.cc:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 292)
        (nil)))
(insn 72 71 73 9 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.45038 ])) Topology.cc:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.45038 ])
        (nil)))
(call_insn 73 72 1471 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5brite5Graph11GetNumEdgesEv") [flags 0x41]  <function_decl 0x10363b900 GetNumEdges>) [0 GetNumEdges S1 A8])
            (const_int 0 [0]))) Topology.cc:101 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              10 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 88 89 293
(note 1471 73 74 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 74 1471 76 10 (set (reg:SI 88 [ D.45039 ])
        (reg:SI 0 ax)) Topology.cc:101 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 76 74 77 10 (set (reg/f:DI 293)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1064 [0xfffffffffffffbd8])) [0 this+0 S8 A64])) Topology.cc:100 89 {*movdi_internal}
     (nil))
(insn 77 76 78 10 (set (reg/f:DI 89 [ D.45038 ])
        (mem/f/j:DI (reg/f:DI 293) [0 this_9(D)->g+0 S8 A64])) Topology.cc:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 293)
        (nil)))
(insn 78 77 79 10 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.45038 ])) Topology.cc:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.45038 ])
        (nil)))
(call_insn 79 78 1472 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5brite5Graph11GetNumNodesEv") [flags 0x41]  <function_decl 0x10363b800 GetNumNodes>) [0 GetNumNodes S1 A8])
            (const_int 0 [0]))) Topology.cc:100 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              11 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 90 294
(note 1472 79 80 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 80 1472 82 11 (set (reg:SI 90 [ D.45039 ])
        (reg:SI 0 ax)) Topology.cc:100 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 82 80 83 11 (parallel [
            (set (reg:DI 294)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:100 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 83 82 84 11 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC4") [flags 0x2]  <var_decl 0x1041aa390 *LC4>)) Topology.cc:100 89 {*movdi_internal}
     (nil))
(insn 84 83 85 11 (set (reg:DI 5 di)
        (reg:DI 294)) Topology.cc:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 294)
        (nil)))
(call_insn 85 84 1473 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:100 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              12 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 90

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 90
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 91
(note 1473 85 86 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 86 1473 88 12 (set (reg/f:DI 91 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 88 86 89 12 (set (reg:SI 4 si)
        (reg:SI 90 [ D.45039 ])) Topology.cc:100 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90 [ D.45039 ])
        (nil)))
(insn 89 88 90 12 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.45040 ])) Topology.cc:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.45040 ])
        (nil)))
(call_insn 90 89 1474 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x102fb5700 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:100 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              13 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 92
(note 1474 90 91 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 91 1474 93 13 (set (reg/f:DI 92 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 93 91 94 13 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC5") [flags 0x2]  <var_decl 0x1041aa428 *LC5>)) Topology.cc:100 89 {*movdi_internal}
     (nil))
(insn 94 93 95 13 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.45040 ])) Topology.cc:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.45040 ])
        (nil)))
(call_insn 95 94 1475 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:100 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              14 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 93
(note 1475 95 96 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 96 1475 98 14 (set (reg/f:DI 93 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 98 96 99 14 (set (reg:SI 4 si)
        (reg:SI 88 [ D.45039 ])) Topology.cc:101 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88 [ D.45039 ])
        (nil)))
(insn 99 98 100 14 (set (reg:DI 5 di)
        (reg/f:DI 93 [ D.45040 ])) Topology.cc:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.45040 ])
        (nil)))
(call_insn 100 99 1476 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x102fb5700 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:101 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              15 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 94
(note 1476 100 101 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 101 1476 103 15 (set (reg/f:DI 94 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 103 101 104 15 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC6") [flags 0x2]  <var_decl 0x1041aa4c0 *LC6>)) Topology.cc:101 89 {*movdi_internal}
     (nil))
(insn 104 103 105 15 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.45040 ])) Topology.cc:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.45040 ])
        (nil)))
(call_insn 105 104 106 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:101 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              16 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 95 295
(note 106 105 107 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 16 (set (reg/f:DI 295)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1064 [0xfffffffffffffbd8])) [0 this+0 S8 A64])) Topology.cc:104 89 {*movdi_internal}
     (nil))
(insn 108 107 109 16 (set (reg/f:DI 95 [ D.45041 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 295)
                (const_int 8 [0x8])) [0 this_9(D)->m+0 S8 A64])) Topology.cc:104 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 295)
        (nil)))
(insn 109 108 110 16 (set (reg:DI 5 di)
        (reg/f:DI 95 [ D.45041 ])) Topology.cc:104 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.45041 ])
        (nil)))
(call_insn 110 109 1477 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite5Model7GetTypeEv") [flags 0x41]  <function_decl 0x103b38800 GetType>) [0 GetType S1 A8])
            (const_int 0 [0]))) Topology.cc:104 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              17 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 96 97
(note 1477 110 111 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 111 1477 113 17 (set (reg:SI 96 [ D.45042 ])
        (reg:SI 0 ax)) Topology.cc:104 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 113 111 114 17 (set (reg:SI 97 [ D.45039 ])
        (reg:SI 96 [ D.45042 ])) Topology.cc:104 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 96 [ D.45042 ])
        (nil)))
(insn 114 113 115 17 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 97 [ D.45039 ])
            (const_int 8 [0x8]))) Topology.cc:104 7 {*cmpsi_1}
     (nil))
(jump_insn 115 114 1478 17 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 309)
            (pc))) Topology.cc:104 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 309)
;;  succ:       54
;;              18 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97
;; lr  def 	 17 [flags] 296 297 298 299 300 301 302
(note 1478 115 116 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 116 1478 117 18 (set (reg:DI 296)
        (zero_extend:DI (reg:SI 97 [ D.45039 ]))) Topology.cc:104 133 {*zero_extendsidi2}
     (expr_list:REG_DEAD (reg:SI 97 [ D.45039 ])
        (nil)))
(insn 117 116 118 18 (parallel [
            (set (reg:DI 297)
                (ashift:DI (reg:DI 296)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:104 497 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 296)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 118 117 119 18 (set (reg:DI 298)
        (label_ref:DI 124)) Topology.cc:104 89 {*movdi_internal}
     (insn_list:REG_LABEL_OPERAND 124 (nil)))
(insn 119 118 120 18 (set (reg:SI 299)
        (mem/u/c:SI (plus:DI (reg:DI 297)
                (reg:DI 298)) [0  S4 A8])) Topology.cc:104 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 298)
        (expr_list:REG_DEAD (reg:DI 297)
            (nil))))
(insn 120 119 121 18 (set (reg:DI 300)
        (sign_extend:DI (reg:SI 299))) Topology.cc:104 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 299)
        (nil)))
(insn 121 120 122 18 (set (reg:DI 302)
        (label_ref:DI 124)) Topology.cc:104 89 {*movdi_internal}
     (insn_list:REG_LABEL_OPERAND 124 (nil)))
(insn 122 121 123 18 (parallel [
            (set (reg:DI 301)
                (plus:DI (reg:DI 300)
                    (reg:DI 302)))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:104 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 302)
        (expr_list:REG_DEAD (reg:DI 300)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(jump_insn 123 122 124 18 (parallel [
            (set (pc)
                (reg:DI 301))
            (use (label_ref 124))
        ]) Topology.cc:104 640 {*tablejump_1}
     (expr_list:REG_DEAD (reg:DI 301)
        (nil))
 -> 124)
;;  succ:       54
;;              19
;;              24
;;              29
;;              34
;;              39
;;              44
;;              49
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Insn is not within a basic block
(code_label 124 123 125 47 "" [3 uses])
;; Insn is not within a basic block
(jump_table_data 125 124 126 (addr_diff_vec:SI (label_ref:DI 124)
         [
            (label_ref:DI 309)
            (label_ref:DI 127)
            (label_ref:DI 153)
            (label_ref:DI 179)
            (label_ref:DI 205)
            (label_ref:DI 231)
            (label_ref:DI 257)
            (label_ref:DI 283)
            (label_ref:DI 283)
        ]
        (const_int 0 [0])
        (const_int 0 [0])))
(barrier 126 125 127)
;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 98 303 304
(code_label 127 126 128 19 46 "" [1 uses])
(note 128 127 129 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 19 (set (reg/f:DI 303)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1064 [0xfffffffffffffbd8])) [0 this+0 S8 A64])) Topology.cc:106 89 {*movdi_internal}
     (nil))
(insn 130 129 131 19 (set (reg/f:DI 98 [ D.45041 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 303)
                (const_int 8 [0x8])) [0 this_9(D)->m+0 S8 A64])) Topology.cc:106 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 303)
        (nil)))
(insn 131 130 132 19 (parallel [
            (set (reg:DI 304)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:106 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 132 131 133 19 (set (reg:DI 4 si)
        (reg/f:DI 98 [ D.45041 ])) Topology.cc:106 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98 [ D.45041 ])
        (nil)))
(insn 133 132 134 19 (set (reg:DI 5 di)
        (reg:DI 304)) Topology.cc:106 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 304)
        (nil)))
(call_insn 134 133 135 19 (call (mem:QI (symbol_ref:DI ("_ZN5brite12RouterWaxman8ToStringEv") [flags 0x41]  <function_decl 0x103b5ca00 ToString>) [0 ToString S1 A8])
        (const_int 0 [0])) Topology.cc:106 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              20 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 305 306
(note 135 134 136 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 137 20 (parallel [
            (set (reg:DI 305)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:106 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 137 136 138 20 (parallel [
            (set (reg:DI 306)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:106 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 138 137 139 20 (set (reg:DI 4 si)
        (reg:DI 305)) Topology.cc:106 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 305)
        (nil)))
(insn 139 138 140 20 (set (reg:DI 5 di)
        (reg:DI 306)) Topology.cc:106 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 306)
        (nil)))
(call_insn 140 139 1479 20 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKSbIS4_S5_T1_E") [flags 0x41]  <function_decl 0x102b13c00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:106 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 5 [0x5])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       263 (ABNORMAL,ABNORMAL_CALL,EH)
;;              21 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 99
(note 1479 140 141 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 141 1479 143 21 (set (reg/f:DI 99 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:106 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 143 141 144 21 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC7") [flags 0x2]  <var_decl 0x1041aa5f0 *LC7>)) Topology.cc:106 89 {*movdi_internal}
     (nil))
(insn 144 143 145 21 (set (reg:DI 5 di)
        (reg/f:DI 99 [ D.45040 ])) Topology.cc:106 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99 [ D.45040 ])
        (nil)))
(call_insn 145 144 146 21 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:106 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 5 [0x5])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       263 (ABNORMAL,ABNORMAL_CALL,EH)
;;              22 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 307
(note 146 145 147 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 22 (parallel [
            (set (reg:DI 307)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:106 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 148 147 149 22 (set (reg:DI 5 di)
        (reg:DI 307)) Topology.cc:106 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 307)
        (nil)))
(call_insn 149 148 1655 22 (call (mem:QI (symbol_ref:DI ("_ZNSsD1Ev") [flags 0x41]  <function_decl 0x102ae3b00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) Topology.cc:106 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              23 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1655 149 1656 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1656 1655 1657 23 (set (pc)
        (label_ref 336)) Topology.cc:107 636 {jump}
     (nil)
 -> 336)
;;  succ:       59 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1657 1656 153)
;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 100 308 309
(code_label 153 1657 154 24 48 "" [1 uses])
(note 154 153 155 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 156 24 (set (reg/f:DI 308)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1064 [0xfffffffffffffbd8])) [0 this+0 S8 A64])) Topology.cc:109 89 {*movdi_internal}
     (nil))
(insn 156 155 157 24 (set (reg/f:DI 100 [ D.45041 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 308)
                (const_int 8 [0x8])) [0 this_9(D)->m+0 S8 A64])) Topology.cc:109 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 308)
        (nil)))
(insn 157 156 158 24 (parallel [
            (set (reg:DI 309)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:109 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 158 157 159 24 (set (reg:DI 4 si)
        (reg/f:DI 100 [ D.45041 ])) Topology.cc:109 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100 [ D.45041 ])
        (nil)))
(insn 159 158 160 24 (set (reg:DI 5 di)
        (reg:DI 309)) Topology.cc:109 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 309)
        (nil)))
(call_insn 160 159 161 24 (call (mem:QI (symbol_ref:DI ("_ZN5brite20RouterBarabasiAlbert8ToStringEv") [flags 0x41]  <function_decl 0x103b68500 ToString>) [0 ToString S1 A8])
        (const_int 0 [0])) Topology.cc:109 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              25 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 310 311
(note 161 160 162 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 163 25 (parallel [
            (set (reg:DI 310)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:109 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 163 162 164 25 (parallel [
            (set (reg:DI 311)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:109 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 164 163 165 25 (set (reg:DI 4 si)
        (reg:DI 310)) Topology.cc:109 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 310)
        (nil)))
(insn 165 164 166 25 (set (reg:DI 5 di)
        (reg:DI 311)) Topology.cc:109 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 311)
        (nil)))
(call_insn 166 165 1480 25 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKSbIS4_S5_T1_E") [flags 0x41]  <function_decl 0x102b13c00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:109 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 6 [0x6])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       264 (ABNORMAL,ABNORMAL_CALL,EH)
;;              26 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 101
(note 1480 166 167 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 167 1480 169 26 (set (reg/f:DI 101 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:109 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 169 167 170 26 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC7") [flags 0x2]  <var_decl 0x1041aa5f0 *LC7>)) Topology.cc:109 89 {*movdi_internal}
     (nil))
(insn 170 169 171 26 (set (reg:DI 5 di)
        (reg/f:DI 101 [ D.45040 ])) Topology.cc:109 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101 [ D.45040 ])
        (nil)))
(call_insn 171 170 172 26 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:109 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 6 [0x6])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       264 (ABNORMAL,ABNORMAL_CALL,EH)
;;              27 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 312
(note 172 171 173 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 173 172 174 27 (parallel [
            (set (reg:DI 312)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:109 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 174 173 175 27 (set (reg:DI 5 di)
        (reg:DI 312)) Topology.cc:109 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 312)
        (nil)))
(call_insn 175 174 1658 27 (call (mem:QI (symbol_ref:DI ("_ZNSsD1Ev") [flags 0x41]  <function_decl 0x102ae3b00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) Topology.cc:109 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              28 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1658 175 1659 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1659 1658 1660 28 (set (pc)
        (label_ref 336)) Topology.cc:110 636 {jump}
     (nil)
 -> 336)
;;  succ:       59 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1660 1659 179)
;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 102 313 314
(code_label 179 1660 180 29 49 "" [1 uses])
(note 180 179 181 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 181 180 182 29 (set (reg/f:DI 313)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1064 [0xfffffffffffffbd8])) [0 this+0 S8 A64])) Topology.cc:112 89 {*movdi_internal}
     (nil))
(insn 182 181 183 29 (set (reg/f:DI 102 [ D.45041 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 313)
                (const_int 8 [0x8])) [0 this_9(D)->m+0 S8 A64])) Topology.cc:112 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 313)
        (nil)))
(insn 183 182 184 29 (parallel [
            (set (reg:DI 314)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:112 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 184 183 185 29 (set (reg:DI 4 si)
        (reg/f:DI 102 [ D.45041 ])) Topology.cc:112 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102 [ D.45041 ])
        (nil)))
(insn 185 184 186 29 (set (reg:DI 5 di)
        (reg:DI 314)) Topology.cc:112 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 314)
        (nil)))
(call_insn 186 185 187 29 (call (mem:QI (symbol_ref:DI ("_ZN5brite8ASWaxman8ToStringEv") [flags 0x41]  <function_decl 0x103b68f00 ToString>) [0 ToString S1 A8])
        (const_int 0 [0])) Topology.cc:112 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              30 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       29 (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 315 316
(note 187 186 188 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 188 187 189 30 (parallel [
            (set (reg:DI 315)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:112 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 189 188 190 30 (parallel [
            (set (reg:DI 316)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:112 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 190 189 191 30 (set (reg:DI 4 si)
        (reg:DI 315)) Topology.cc:112 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 315)
        (nil)))
(insn 191 190 192 30 (set (reg:DI 5 di)
        (reg:DI 316)) Topology.cc:112 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 316)
        (nil)))
(call_insn 192 191 1481 30 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKSbIS4_S5_T1_E") [flags 0x41]  <function_decl 0x102b13c00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:112 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 7 [0x7])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       265 (ABNORMAL,ABNORMAL_CALL,EH)
;;              31 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       30 (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 103
(note 1481 192 193 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 193 1481 195 31 (set (reg/f:DI 103 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:112 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 195 193 196 31 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC7") [flags 0x2]  <var_decl 0x1041aa5f0 *LC7>)) Topology.cc:112 89 {*movdi_internal}
     (nil))
(insn 196 195 197 31 (set (reg:DI 5 di)
        (reg/f:DI 103 [ D.45040 ])) Topology.cc:112 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103 [ D.45040 ])
        (nil)))
(call_insn 197 196 198 31 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:112 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 7 [0x7])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       265 (ABNORMAL,ABNORMAL_CALL,EH)
;;              32 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       31 (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 317
(note 198 197 199 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 199 198 200 32 (parallel [
            (set (reg:DI 317)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:112 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 200 199 201 32 (set (reg:DI 5 di)
        (reg:DI 317)) Topology.cc:112 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 317)
        (nil)))
(call_insn 201 200 1661 32 (call (mem:QI (symbol_ref:DI ("_ZNSsD1Ev") [flags 0x41]  <function_decl 0x102ae3b00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) Topology.cc:112 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              33 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, RTL, MODIFIED)
;;  pred:       32 (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1661 201 1662 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1662 1661 1663 33 (set (pc)
        (label_ref 336)) Topology.cc:113 636 {jump}
     (nil)
 -> 336)
;;  succ:       59 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1663 1662 205)
;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 104 318 319
(code_label 205 1663 206 34 50 "" [1 uses])
(note 206 205 207 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 207 206 208 34 (set (reg/f:DI 318)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1064 [0xfffffffffffffbd8])) [0 this+0 S8 A64])) Topology.cc:115 89 {*movdi_internal}
     (nil))
(insn 208 207 209 34 (set (reg/f:DI 104 [ D.45041 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 318)
                (const_int 8 [0x8])) [0 this_9(D)->m+0 S8 A64])) Topology.cc:115 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 318)
        (nil)))
(insn 209 208 210 34 (parallel [
            (set (reg:DI 319)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:115 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 210 209 211 34 (set (reg:DI 4 si)
        (reg/f:DI 104 [ D.45041 ])) Topology.cc:115 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 104 [ D.45041 ])
        (nil)))
(insn 211 210 212 34 (set (reg:DI 5 di)
        (reg:DI 319)) Topology.cc:115 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 319)
        (nil)))
(call_insn 212 211 213 34 (call (mem:QI (symbol_ref:DI ("_ZN5brite16ASBarabasiAlbert8ToStringEv") [flags 0x41]  <function_decl 0x103b71b00 ToString>) [0 ToString S1 A8])
        (const_int 0 [0])) Topology.cc:115 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              35 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       34 (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 320 321
(note 213 212 214 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 35 (parallel [
            (set (reg:DI 320)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:115 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 215 214 216 35 (parallel [
            (set (reg:DI 321)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:115 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 216 215 217 35 (set (reg:DI 4 si)
        (reg:DI 320)) Topology.cc:115 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 320)
        (nil)))
(insn 217 216 218 35 (set (reg:DI 5 di)
        (reg:DI 321)) Topology.cc:115 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 321)
        (nil)))
(call_insn 218 217 1482 35 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKSbIS4_S5_T1_E") [flags 0x41]  <function_decl 0x102b13c00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:115 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       266 (ABNORMAL,ABNORMAL_CALL,EH)
;;              36 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       35 (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 105
(note 1482 218 219 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 219 1482 221 36 (set (reg/f:DI 105 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:115 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 221 219 222 36 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC7") [flags 0x2]  <var_decl 0x1041aa5f0 *LC7>)) Topology.cc:115 89 {*movdi_internal}
     (nil))
(insn 222 221 223 36 (set (reg:DI 5 di)
        (reg/f:DI 105 [ D.45040 ])) Topology.cc:115 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 105 [ D.45040 ])
        (nil)))
(call_insn 223 222 224 36 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:115 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 8 [0x8])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       266 (ABNORMAL,ABNORMAL_CALL,EH)
;;              37 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       36 (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 322
(note 224 223 225 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 225 224 226 37 (parallel [
            (set (reg:DI 322)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:115 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 226 225 227 37 (set (reg:DI 5 di)
        (reg:DI 322)) Topology.cc:115 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 322)
        (nil)))
(call_insn 227 226 1664 37 (call (mem:QI (symbol_ref:DI ("_ZNSsD1Ev") [flags 0x41]  <function_decl 0x102ae3b00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) Topology.cc:115 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              38 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (NEW, RTL, MODIFIED)
;;  pred:       37 (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1664 227 1665 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1665 1664 1666 38 (set (pc)
        (label_ref 336)) Topology.cc:116 636 {jump}
     (nil)
 -> 336)
;;  succ:       59 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1666 1665 231)
;; basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 106 323 324
(code_label 231 1666 232 39 51 "" [1 uses])
(note 232 231 233 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 233 232 234 39 (set (reg/f:DI 323)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1064 [0xfffffffffffffbd8])) [0 this+0 S8 A64])) Topology.cc:118 89 {*movdi_internal}
     (nil))
(insn 234 233 235 39 (set (reg/f:DI 106 [ D.45041 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 323)
                (const_int 8 [0x8])) [0 this_9(D)->m+0 S8 A64])) Topology.cc:118 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 323)
        (nil)))
(insn 235 234 236 39 (parallel [
            (set (reg:DI 324)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:118 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 236 235 237 39 (set (reg:DI 4 si)
        (reg/f:DI 106 [ D.45041 ])) Topology.cc:118 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106 [ D.45041 ])
        (nil)))
(insn 237 236 238 39 (set (reg:DI 5 di)
        (reg:DI 324)) Topology.cc:118 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 324)
        (nil)))
(call_insn 238 237 239 39 (call (mem:QI (symbol_ref:DI ("_ZN5brite16TopDownHierModel8ToStringEv") [flags 0x41]  <function_decl 0x103c0c700 ToString>) [0 ToString S1 A8])
        (const_int 0 [0])) Topology.cc:118 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              40 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       39 (FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 325 326
(note 239 238 240 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 240 239 241 40 (parallel [
            (set (reg:DI 325)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:118 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 241 240 242 40 (parallel [
            (set (reg:DI 326)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:118 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 242 241 243 40 (set (reg:DI 4 si)
        (reg:DI 325)) Topology.cc:118 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 325)
        (nil)))
(insn 243 242 244 40 (set (reg:DI 5 di)
        (reg:DI 326)) Topology.cc:118 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 326)
        (nil)))
(call_insn 244 243 1483 40 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKSbIS4_S5_T1_E") [flags 0x41]  <function_decl 0x102b13c00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:118 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 9 [0x9])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       267 (ABNORMAL,ABNORMAL_CALL,EH)
;;              41 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       40 (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 107
(note 1483 244 245 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 245 1483 247 41 (set (reg/f:DI 107 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:118 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 247 245 248 41 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC7") [flags 0x2]  <var_decl 0x1041aa5f0 *LC7>)) Topology.cc:118 89 {*movdi_internal}
     (nil))
(insn 248 247 249 41 (set (reg:DI 5 di)
        (reg/f:DI 107 [ D.45040 ])) Topology.cc:118 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 107 [ D.45040 ])
        (nil)))
(call_insn 249 248 250 41 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:118 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 9 [0x9])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       267 (ABNORMAL,ABNORMAL_CALL,EH)
;;              42 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       41 (FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 327
(note 250 249 251 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 251 250 252 42 (parallel [
            (set (reg:DI 327)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:118 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 252 251 253 42 (set (reg:DI 5 di)
        (reg:DI 327)) Topology.cc:118 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 327)
        (nil)))
(call_insn 253 252 1667 42 (call (mem:QI (symbol_ref:DI ("_ZNSsD1Ev") [flags 0x41]  <function_decl 0x102ae3b00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) Topology.cc:118 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              43 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 42, next block 44, flags: (NEW, RTL, MODIFIED)
;;  pred:       42 (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1667 253 1668 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1668 1667 1669 43 (set (pc)
        (label_ref 336)) Topology.cc:119 636 {jump}
     (nil)
 -> 336)
;;  succ:       59 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1669 1668 257)
;; basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 108 328 329
(code_label 257 1669 258 44 52 "" [1 uses])
(note 258 257 259 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 259 258 260 44 (set (reg/f:DI 328)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1064 [0xfffffffffffffbd8])) [0 this+0 S8 A64])) Topology.cc:121 89 {*movdi_internal}
     (nil))
(insn 260 259 261 44 (set (reg/f:DI 108 [ D.45041 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 328)
                (const_int 8 [0x8])) [0 this_9(D)->m+0 S8 A64])) Topology.cc:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 328)
        (nil)))
(insn 261 260 262 44 (parallel [
            (set (reg:DI 329)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:121 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 262 261 263 44 (set (reg:DI 4 si)
        (reg/f:DI 108 [ D.45041 ])) Topology.cc:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 108 [ D.45041 ])
        (nil)))
(insn 263 262 264 44 (set (reg:DI 5 di)
        (reg:DI 329)) Topology.cc:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 329)
        (nil)))
(call_insn 264 263 265 44 (call (mem:QI (symbol_ref:DI ("_ZN5brite17BottomUpHierModel8ToStringEv") [flags 0x41]  <function_decl 0x103c8a000 ToString>) [0 ToString S1 A8])
        (const_int 0 [0])) Topology.cc:121 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              45 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       44 (FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 330 331
(note 265 264 266 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 266 265 267 45 (parallel [
            (set (reg:DI 330)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:121 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 267 266 268 45 (parallel [
            (set (reg:DI 331)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:121 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 268 267 269 45 (set (reg:DI 4 si)
        (reg:DI 330)) Topology.cc:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 330)
        (nil)))
(insn 269 268 270 45 (set (reg:DI 5 di)
        (reg:DI 331)) Topology.cc:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 331)
        (nil)))
(call_insn 270 269 1484 45 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKSbIS4_S5_T1_E") [flags 0x41]  <function_decl 0x102b13c00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:121 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 10 [0xa])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       268 (ABNORMAL,ABNORMAL_CALL,EH)
;;              46 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       45 (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 109
(note 1484 270 271 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 271 1484 273 46 (set (reg/f:DI 109 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 273 271 274 46 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC7") [flags 0x2]  <var_decl 0x1041aa5f0 *LC7>)) Topology.cc:121 89 {*movdi_internal}
     (nil))
(insn 274 273 275 46 (set (reg:DI 5 di)
        (reg/f:DI 109 [ D.45040 ])) Topology.cc:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 109 [ D.45040 ])
        (nil)))
(call_insn 275 274 276 46 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:121 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 10 [0xa])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       268 (ABNORMAL,ABNORMAL_CALL,EH)
;;              47 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       46 (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 332
(note 276 275 277 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 277 276 278 47 (parallel [
            (set (reg:DI 332)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:121 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 278 277 279 47 (set (reg:DI 5 di)
        (reg:DI 332)) Topology.cc:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 332)
        (nil)))
(call_insn 279 278 1670 47 (call (mem:QI (symbol_ref:DI ("_ZNSsD1Ev") [flags 0x41]  <function_decl 0x102ae3b00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) Topology.cc:121 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              48 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 47, next block 49, flags: (NEW, RTL, MODIFIED)
;;  pred:       47 (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1670 279 1671 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1671 1670 1672 48 (set (pc)
        (label_ref 336)) Topology.cc:122 636 {jump}
     (nil)
 -> 336)
;;  succ:       59 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1672 1671 283)
;; basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 110 333 334
(code_label 283 1672 284 49 53 "" [2 uses])
(note 284 283 285 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 285 284 286 49 (set (reg/f:DI 333)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1064 [0xfffffffffffffbd8])) [0 this+0 S8 A64])) Topology.cc:125 89 {*movdi_internal}
     (nil))
(insn 286 285 287 49 (set (reg/f:DI 110 [ D.45041 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 333)
                (const_int 8 [0x8])) [0 this_9(D)->m+0 S8 A64])) Topology.cc:125 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 333)
        (nil)))
(insn 287 286 288 49 (parallel [
            (set (reg:DI 334)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:125 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 288 287 289 49 (set (reg:DI 4 si)
        (reg/f:DI 110 [ D.45041 ])) Topology.cc:125 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 110 [ D.45041 ])
        (nil)))
(insn 289 288 290 49 (set (reg:DI 5 di)
        (reg:DI 334)) Topology.cc:125 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 334)
        (nil)))
(call_insn 290 289 291 49 (call (mem:QI (symbol_ref:DI ("_ZN5brite17ImportedFileModel8ToStringEv") [flags 0x41]  <function_decl 0x103b78900 ToString>) [0 ToString S1 A8])
        (const_int 0 [0])) Topology.cc:125 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              50 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 49, next block 51, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       49 (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 335 336
(note 291 290 292 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 292 291 293 50 (parallel [
            (set (reg:DI 335)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:125 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 293 292 294 50 (parallel [
            (set (reg:DI 336)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:125 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 294 293 295 50 (set (reg:DI 4 si)
        (reg:DI 335)) Topology.cc:125 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 335)
        (nil)))
(insn 295 294 296 50 (set (reg:DI 5 di)
        (reg:DI 336)) Topology.cc:125 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 336)
        (nil)))
(call_insn 296 295 1485 50 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKSbIS4_S5_T1_E") [flags 0x41]  <function_decl 0x102b13c00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:125 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 11 [0xb])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       269 (ABNORMAL,ABNORMAL_CALL,EH)
;;              51 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 50, next block 52, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       50 (FALLTHRU)
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 111
(note 1485 296 297 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 297 1485 299 51 (set (reg/f:DI 111 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:125 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 299 297 300 51 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC7") [flags 0x2]  <var_decl 0x1041aa5f0 *LC7>)) Topology.cc:125 89 {*movdi_internal}
     (nil))
(insn 300 299 301 51 (set (reg:DI 5 di)
        (reg/f:DI 111 [ D.45040 ])) Topology.cc:125 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 111 [ D.45040 ])
        (nil)))
(call_insn 301 300 302 51 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:125 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 11 [0xb])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       269 (ABNORMAL,ABNORMAL_CALL,EH)
;;              52 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 51, next block 53, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       51 (FALLTHRU)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 337
(note 302 301 303 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 303 302 304 52 (parallel [
            (set (reg:DI 337)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:125 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 304 303 305 52 (set (reg:DI 5 di)
        (reg:DI 337)) Topology.cc:125 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 337)
        (nil)))
(call_insn 305 304 1673 52 (call (mem:QI (symbol_ref:DI ("_ZNSsD1Ev") [flags 0x41]  <function_decl 0x102ae3b00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) Topology.cc:125 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              53 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 52, next block 54, flags: (NEW, RTL, MODIFIED)
;;  pred:       52 (FALLTHRU)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1673 305 1674 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1674 1673 1675 53 (set (pc)
        (label_ref 336)) Topology.cc:126 636 {jump}
     (nil)
 -> 336)
;;  succ:       59 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1675 1674 309)
;; basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 53, next block 55, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18
;;              17
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 270 338
(code_label 309 1675 310 54 45 "" [2 uses])
(note 310 309 311 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 311 310 312 54 (set (reg/f:DI 338)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1064 [0xfffffffffffffbd8])) [0 this+0 S8 A64])) Topology.cc:128 89 {*movdi_internal}
     (nil))
(insn 312 311 313 54 (set (reg/f:DI 270 [ D.45041 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 338)
                (const_int 8 [0x8])) [0 this_9(D)->m+0 S8 A64])) Topology.cc:128 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 338)
        (nil)))
(insn 313 312 314 54 (set (reg:DI 5 di)
        (reg/f:DI 270 [ D.45041 ])) Topology.cc:128 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 270 [ D.45041 ])
        (nil)))
(call_insn 314 313 1486 54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite5Model7GetTypeEv") [flags 0x41]  <function_decl 0x103b38800 GetType>) [0 GetType S1 A8])
            (const_int 0 [0]))) Topology.cc:128 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              55 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 55, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 54, next block 56, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       54 (FALLTHRU)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 271 272 339
(note 1486 314 315 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 315 1486 317 55 (set (reg:SI 271 [ D.45042 ])
        (reg:SI 0 ax)) Topology.cc:128 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 317 315 318 55 (set (reg:SI 272 [ D.45039 ])
        (reg:SI 271 [ D.45042 ])) Topology.cc:128 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 271 [ D.45042 ])
        (nil)))
(insn 318 317 319 55 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC8") [flags 0x2]  <var_decl 0x1041aaa18 *LC8>)) Topology.cc:128 89 {*movdi_internal}
     (nil))
(insn 319 318 320 55 (set (reg:DI 339)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cerr") [flags 0x1040]  <var_decl 0x1031027b8 cerr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) Topology.cc:128 89 {*movdi_internal}
     (nil))
(insn 320 319 321 55 (set (reg:DI 5 di)
        (reg:DI 339)) Topology.cc:128 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 339)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cerr") [flags 0x1040]  <var_decl 0x1031027b8 cerr>)
            (nil))))
(call_insn 321 320 1487 55 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:128 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              56 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 272

;; basic block 56, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 55, next block 57, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       55 (FALLTHRU)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 272
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 272
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 273
(note 1487 321 322 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 322 1487 324 56 (set (reg/f:DI 273 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:128 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 324 322 325 56 (set (reg:SI 4 si)
        (reg:SI 272 [ D.45039 ])) Topology.cc:128 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 272 [ D.45039 ])
        (nil)))
(insn 325 324 326 56 (set (reg:DI 5 di)
        (reg/f:DI 273 [ D.45040 ])) Topology.cc:128 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 273 [ D.45040 ])
        (nil)))
(call_insn 326 325 1488 56 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x102fb5700 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:128 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              57 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 57, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 56, next block 58, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       56 (FALLTHRU)
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 274
(note 1488 326 327 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 327 1488 329 57 (set (reg/f:DI 274 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:128 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 329 327 330 57 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC9") [flags 0x2]  <var_decl 0x1041aaab0 *LC9>)) Topology.cc:128 89 {*movdi_internal}
     (nil))
(insn 330 329 331 57 (set (reg:DI 5 di)
        (reg/f:DI 274 [ D.45040 ])) Topology.cc:128 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 274 [ D.45040 ])
        (nil)))
(call_insn 331 330 332 57 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:128 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              58 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 57, next block 59, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       57 (FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 332 331 333 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 333 332 334 58 (set (reg:SI 5 di)
        (const_int 0 [0])) Topology.cc:129 90 {*movsi_internal}
     (nil))
(call_insn 334 333 335 58 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x1430e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) Topology.cc:129 642 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 335 334 336)
;; basic block 59, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 58, next block 60, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48 [100.0%] 
;;              23 [100.0%] 
;;              28 [100.0%] 
;;              33 [100.0%] 
;;              38 [100.0%] 
;;              43 [100.0%] 
;;              53 [100.0%] 
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 112 340
(code_label 336 335 337 59 54 "" [7 uses])
(note 337 336 338 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 338 337 339 59 (set (reg/f:DI 340)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1064 [0xfffffffffffffbd8])) [0 this+0 S8 A64])) Topology.cc:133 89 {*movdi_internal}
     (nil))
(insn 339 338 340 59 (set (reg/f:DI 112 [ D.45038 ])
        (mem/f/j:DI (reg/f:DI 340) [0 this_9(D)->g+0 S8 A64])) Topology.cc:133 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 340)
        (nil)))
(insn 340 339 341 59 (set (reg:DI 5 di)
        (reg/f:DI 112 [ D.45038 ])) Topology.cc:133 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 112 [ D.45038 ])
        (nil)))
(call_insn 341 340 1489 59 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5brite5Graph11GetNumNodesEv") [flags 0x41]  <function_decl 0x10363b800 GetNumNodes>) [0 GetNumNodes S1 A8])
            (const_int 0 [0]))) Topology.cc:133 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              60 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 60, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 59, next block 61, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       59 (FALLTHRU)
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 113 341
(note 1489 341 342 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 342 1489 344 60 (set (reg:SI 113 [ D.45039 ])
        (reg:SI 0 ax)) Topology.cc:133 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 344 342 345 60 (parallel [
            (set (reg:DI 341)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:133 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 345 344 346 60 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC10") [flags 0x2]  <var_decl 0x1041aab48 *LC10>)) Topology.cc:133 89 {*movdi_internal}
     (nil))
(insn 346 345 347 60 (set (reg:DI 5 di)
        (reg:DI 341)) Topology.cc:133 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 341)
        (nil)))
(call_insn 347 346 1490 60 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:133 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              61 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113

;; basic block 61, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 60, next block 62, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       60 (FALLTHRU)
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 114
(note 1490 347 348 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 348 1490 350 61 (set (reg/f:DI 114 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:133 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 350 348 351 61 (set (reg:SI 4 si)
        (reg:SI 113 [ D.45039 ])) Topology.cc:133 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 113 [ D.45039 ])
        (nil)))
(insn 351 350 352 61 (set (reg:DI 5 di)
        (reg/f:DI 114 [ D.45040 ])) Topology.cc:133 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 114 [ D.45040 ])
        (nil)))
(call_insn 352 351 1491 61 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x102fb5700 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:133 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              62 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 62, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 61, next block 63, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       61 (FALLTHRU)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 115
(note 1491 352 353 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 353 1491 355 62 (set (reg/f:DI 115 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:133 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 355 353 356 62 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC11") [flags 0x2]  <var_decl 0x1041aabe0 *LC11>)) Topology.cc:133 89 {*movdi_internal}
     (nil))
(insn 356 355 357 62 (set (reg:DI 5 di)
        (reg/f:DI 115 [ D.45040 ])) Topology.cc:133 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 115 [ D.45040 ])
        (nil)))
(call_insn 357 356 1492 62 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:133 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              63 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 63, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 62, next block 64, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       62 (FALLTHRU)
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 116
(note 1492 357 358 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 358 1492 360 63 (set (reg/f:DI 116 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:133 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 360 358 361 63 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC12") [flags 0x2]  <var_decl 0x1041aac78 *LC12>)) Topology.cc:133 89 {*movdi_internal}
     (nil))
(insn 361 360 362 63 (set (reg:DI 5 di)
        (reg/f:DI 116 [ D.45040 ])) Topology.cc:133 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 116 [ D.45040 ])
        (nil)))
(call_insn 362 361 363 63 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:133 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              64 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 64, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 63, next block 65, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       63 (FALLTHRU)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 363 362 364 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 364 363 1676 64 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) Topology.cc:134 90 {*movsi_internal}
     (nil))
(jump_insn 1676 364 1677 64 (set (pc)
        (label_ref 755)) Topology.cc:134 636 {jump}
     (nil)
 -> 755)
;;  succ:       140 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1677 1676 765)
;; basic block 65, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 64, next block 66, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       141
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 120 342 343
(code_label 765 1677 367 65 75 "" [1 uses])
(note 367 765 368 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 368 367 369 65 (set (reg/f:DI 342)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1064 [0xfffffffffffffbd8])) [0 this+0 S8 A64])) Topology.cc:140 89 {*movdi_internal}
     (nil))
(insn 369 368 370 65 (set (reg/f:DI 120 [ D.45038 ])
        (mem/f/j:DI (reg/f:DI 342) [0 this_9(D)->g+0 S8 A64])) Topology.cc:140 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 342)
        (nil)))
(insn 370 369 371 65 (set (reg:SI 343)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) Topology.cc:140 90 {*movsi_internal}
     (nil))
(insn 371 370 372 65 (set (reg:SI 4 si)
        (reg:SI 343)) Topology.cc:140 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 343)
        (nil)))
(insn 372 371 373 65 (set (reg:DI 5 di)
        (reg/f:DI 120 [ D.45038 ])) Topology.cc:140 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 120 [ D.45038 ])
        (nil)))
(call_insn 373 372 1493 65 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5brite5Graph10GetNodePtrEi") [flags 0x41]  <function_decl 0x10363b400 GetNodePtr>) [0 GetNodePtr S1 A8])
            (const_int 0 [0]))) Topology.cc:140 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              66 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 66, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 65, next block 67, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       65 (FALLTHRU)
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 121
(note 1493 373 374 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 374 1493 376 66 (set (reg/f:DI 121 [ D.45043 ])
        (reg:DI 0 ax)) Topology.cc:140 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 376 374 377 66 (set (reg:DI 5 di)
        (reg/f:DI 121 [ D.45043 ])) Topology.cc:140 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 121 [ D.45043 ])
        (nil)))
(call_insn 377 376 1494 66 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode12GetOutDegreeEv") [flags 0x41]  <function_decl 0x1035e6600 GetOutDegree>) [0 GetOutDegree S1 A8])
            (const_int 0 [0]))) Topology.cc:140 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              67 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 67, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 66, next block 68, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       66 (FALLTHRU)
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 122 123 344 345
(note 1494 377 378 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 378 1494 380 67 (set (reg:SI 122 [ D.45039 ])
        (reg:SI 0 ax)) Topology.cc:140 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 380 378 381 67 (set (reg/f:DI 344)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1064 [0xfffffffffffffbd8])) [0 this+0 S8 A64])) Topology.cc:139 89 {*movdi_internal}
     (nil))
(insn 381 380 382 67 (set (reg/f:DI 123 [ D.45038 ])
        (mem/f/j:DI (reg/f:DI 344) [0 this_9(D)->g+0 S8 A64])) Topology.cc:139 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 344)
        (nil)))
(insn 382 381 383 67 (set (reg:SI 345)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) Topology.cc:139 90 {*movsi_internal}
     (nil))
(insn 383 382 384 67 (set (reg:SI 4 si)
        (reg:SI 345)) Topology.cc:139 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 345)
        (nil)))
(insn 384 383 385 67 (set (reg:DI 5 di)
        (reg/f:DI 123 [ D.45038 ])) Topology.cc:139 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 123 [ D.45038 ])
        (nil)))
(call_insn 385 384 1495 67 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5brite5Graph10GetNodePtrEi") [flags 0x41]  <function_decl 0x10363b400 GetNodePtr>) [0 GetNodePtr S1 A8])
            (const_int 0 [0]))) Topology.cc:139 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              68 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122

;; basic block 68, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 67, next block 69, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       67 (FALLTHRU)
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 124
(note 1495 385 386 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 386 1495 388 68 (set (reg/f:DI 124 [ D.45043 ])
        (reg:DI 0 ax)) Topology.cc:139 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 388 386 389 68 (set (reg:DI 5 di)
        (reg/f:DI 124 [ D.45043 ])) Topology.cc:139 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 124 [ D.45043 ])
        (nil)))
(call_insn 389 388 1496 68 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetInDegreeEv") [flags 0x41]  <function_decl 0x1035e6500 GetInDegree>) [0 GetInDegree S1 A8])
            (const_int 0 [0]))) Topology.cc:139 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              69 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122

;; basic block 69, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 68, next block 70, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       68 (FALLTHRU)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 125 126 346 347
(note 1496 389 390 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 390 1496 392 69 (set (reg:SI 125 [ D.45039 ])
        (reg:SI 0 ax)) Topology.cc:139 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 392 390 393 69 (set (reg/f:DI 346)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1064 [0xfffffffffffffbd8])) [0 this+0 S8 A64])) Topology.cc:138 89 {*movdi_internal}
     (nil))
(insn 393 392 394 69 (set (reg/f:DI 126 [ D.45038 ])
        (mem/f/j:DI (reg/f:DI 346) [0 this_9(D)->g+0 S8 A64])) Topology.cc:138 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 346)
        (nil)))
(insn 394 393 395 69 (set (reg:SI 347)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) Topology.cc:138 90 {*movsi_internal}
     (nil))
(insn 395 394 396 69 (set (reg:SI 4 si)
        (reg:SI 347)) Topology.cc:138 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 347)
        (nil)))
(insn 396 395 397 69 (set (reg:DI 5 di)
        (reg/f:DI 126 [ D.45038 ])) Topology.cc:138 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 126 [ D.45038 ])
        (nil)))
(call_insn 397 396 1497 69 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5brite5Graph10GetNodePtrEi") [flags 0x41]  <function_decl 0x10363b400 GetNodePtr>) [0 GetNodePtr S1 A8])
            (const_int 0 [0]))) Topology.cc:138 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              70 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122 125

;; basic block 70, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 69, next block 71, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       69 (FALLTHRU)
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122 125
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 127
(note 1497 397 398 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 398 1497 400 70 (set (reg/f:DI 127 [ D.45043 ])
        (reg:DI 0 ax)) Topology.cc:138 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 400 398 401 70 (set (reg:DI 5 di)
        (reg/f:DI 127 [ D.45043 ])) Topology.cc:138 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 127 [ D.45043 ])
        (nil)))
(call_insn 401 400 1498 70 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:138 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              71 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122 125

;; basic block 71, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 70, next block 72, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       70 (FALLTHRU)
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122 125
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 128
(note 1498 401 402 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 402 1498 404 71 (set (reg/f:DI 128 [ D.45044 ])
        (reg:DI 0 ax)) Topology.cc:138 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 404 402 405 71 (set (reg:DI 5 di)
        (reg/f:DI 128 [ D.45044 ])) Topology.cc:138 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 128 [ D.45044 ])
        (nil)))
(call_insn 405 404 1499 71 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite8NodeConf9GetCoordYEv") [flags 0x41]  <function_decl 0x1035f8d00 GetCoordY>) [0 GetCoordY S1 A8])
            (const_int 0 [0]))) Topology.cc:138 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              72 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 122 125

;; basic block 72, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 71, next block 73, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       71 (FALLTHRU)
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 122 125
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 129 130 348 349
(note 1499 405 406 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 406 1499 408 72 (set (reg:DF 129 [ D.45045 ])
        (reg:DF 21 xmm0)) Topology.cc:138 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 408 406 409 72 (set (reg/f:DI 348)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1064 [0xfffffffffffffbd8])) [0 this+0 S8 A64])) Topology.cc:137 89 {*movdi_internal}
     (nil))
(insn 409 408 410 72 (set (reg/f:DI 130 [ D.45038 ])
        (mem/f/j:DI (reg/f:DI 348) [0 this_9(D)->g+0 S8 A64])) Topology.cc:137 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 348)
        (nil)))
(insn 410 409 411 72 (set (reg:SI 349)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) Topology.cc:137 90 {*movsi_internal}
     (nil))
(insn 411 410 412 72 (set (reg:SI 4 si)
        (reg:SI 349)) Topology.cc:137 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 349)
        (nil)))
(insn 412 411 413 72 (set (reg:DI 5 di)
        (reg/f:DI 130 [ D.45038 ])) Topology.cc:137 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 130 [ D.45038 ])
        (nil)))
(call_insn 413 412 1500 72 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5brite5Graph10GetNodePtrEi") [flags 0x41]  <function_decl 0x10363b400 GetNodePtr>) [0 GetNodePtr S1 A8])
            (const_int 0 [0]))) Topology.cc:137 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              73 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122 125 129

;; basic block 73, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 72, next block 74, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       72 (FALLTHRU)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122 125 129
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 131
(note 1500 413 414 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 414 1500 416 73 (set (reg/f:DI 131 [ D.45043 ])
        (reg:DI 0 ax)) Topology.cc:137 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 416 414 417 73 (set (reg:DI 5 di)
        (reg/f:DI 131 [ D.45043 ])) Topology.cc:137 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 131 [ D.45043 ])
        (nil)))
(call_insn 417 416 1501 73 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:137 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              74 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122 125 129

;; basic block 74, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 73, next block 75, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       73 (FALLTHRU)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122 125 129
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 132
(note 1501 417 418 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 418 1501 420 74 (set (reg/f:DI 132 [ D.45044 ])
        (reg:DI 0 ax)) Topology.cc:137 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 420 418 421 74 (set (reg:DI 5 di)
        (reg/f:DI 132 [ D.45044 ])) Topology.cc:137 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 132 [ D.45044 ])
        (nil)))
(call_insn 421 420 1502 74 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite8NodeConf9GetCoordXEv") [flags 0x41]  <function_decl 0x1035f8c00 GetCoordX>) [0 GetCoordX S1 A8])
            (const_int 0 [0]))) Topology.cc:137 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              75 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 122 125 129

;; basic block 75, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 74, next block 76, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       74 (FALLTHRU)
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 122 125 129
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 133 134 350 351
(note 1502 421 422 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 422 1502 424 75 (set (reg:DF 133 [ D.45045 ])
        (reg:DF 21 xmm0)) Topology.cc:137 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 424 422 425 75 (set (reg/f:DI 350)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1064 [0xfffffffffffffbd8])) [0 this+0 S8 A64])) Topology.cc:136 89 {*movdi_internal}
     (nil))
(insn 425 424 426 75 (set (reg/f:DI 134 [ D.45038 ])
        (mem/f/j:DI (reg/f:DI 350) [0 this_9(D)->g+0 S8 A64])) Topology.cc:136 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 350)
        (nil)))
(insn 426 425 427 75 (set (reg:SI 351)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) Topology.cc:136 90 {*movsi_internal}
     (nil))
(insn 427 426 428 75 (set (reg:SI 4 si)
        (reg:SI 351)) Topology.cc:136 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 351)
        (nil)))
(insn 428 427 429 75 (set (reg:DI 5 di)
        (reg/f:DI 134 [ D.45038 ])) Topology.cc:136 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 134 [ D.45038 ])
        (nil)))
(call_insn 429 428 1503 75 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5brite5Graph10GetNodePtrEi") [flags 0x41]  <function_decl 0x10363b400 GetNodePtr>) [0 GetNodePtr S1 A8])
            (const_int 0 [0]))) Topology.cc:136 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              76 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122 125 129 133

;; basic block 76, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 75, next block 77, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       75 (FALLTHRU)
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122 125 129 133
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 135
(note 1503 429 430 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 430 1503 432 76 (set (reg/f:DI 135 [ D.45043 ])
        (reg:DI 0 ax)) Topology.cc:136 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 432 430 433 76 (set (reg:DI 5 di)
        (reg/f:DI 135 [ D.45043 ])) Topology.cc:136 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 135 [ D.45043 ])
        (nil)))
(call_insn 433 432 1504 76 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode5GetIdEv") [flags 0x41]  <function_decl 0x1035e6e00 GetId>) [0 GetId S1 A8])
            (const_int 0 [0]))) Topology.cc:136 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              77 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122 125 129 133

;; basic block 77, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 76, next block 78, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       76 (FALLTHRU)
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122 125 129 133
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 136 352
(note 1504 433 434 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 434 1504 436 77 (set (reg:SI 136 [ D.45039 ])
        (reg:SI 0 ax)) Topology.cc:136 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 436 434 437 77 (parallel [
            (set (reg:DI 352)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:136 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 437 436 438 77 (set (reg:SI 4 si)
        (reg:SI 136 [ D.45039 ])) Topology.cc:136 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 136 [ D.45039 ])
        (nil)))
(insn 438 437 439 77 (set (reg:DI 5 di)
        (reg:DI 352)) Topology.cc:136 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 352)
        (nil)))
(call_insn 439 438 1505 77 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x102fb5700 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:136 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              78 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122 125 129 133

;; basic block 78, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 77, next block 79, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       77 (FALLTHRU)
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122 125 129 133
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 137
(note 1505 439 440 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 440 1505 442 78 (set (reg/f:DI 137 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:136 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 442 440 443 78 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC13") [flags 0x2]  <var_decl 0x1041aad10 *LC13>)) Topology.cc:136 89 {*movdi_internal}
     (nil))
(insn 443 442 444 78 (set (reg:DI 5 di)
        (reg/f:DI 137 [ D.45040 ])) Topology.cc:136 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 137 [ D.45040 ])
        (nil)))
(call_insn 444 443 1506 78 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:136 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              79 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122 125 129 133

;; basic block 79, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 78, next block 80, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       78 (FALLTHRU)
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122 125 129 133
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 133
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 138
(note 1506 444 445 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 445 1506 447 79 (set (reg/f:DI 138 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:136 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 447 445 448 79 (set (reg:DF 21 xmm0)
        (reg:DF 133 [ D.45045 ])) Topology.cc:137 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 133 [ D.45045 ])
        (nil)))
(insn 448 447 449 79 (set (reg:DI 5 di)
        (reg/f:DI 138 [ D.45040 ])) Topology.cc:137 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 138 [ D.45040 ])
        (nil)))
(call_insn 449 448 1507 79 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEd") [flags 0x41]  <function_decl 0x102fb5b00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:137 649 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              80 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122 125 129

;; basic block 80, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 79, next block 81, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       79 (FALLTHRU)
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122 125 129
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 139
(note 1507 449 450 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 450 1507 452 80 (set (reg/f:DI 139 [ D.45046 ])
        (reg:DI 0 ax)) Topology.cc:137 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 452 450 453 80 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC13") [flags 0x2]  <var_decl 0x1041aad10 *LC13>)) Topology.cc:137 89 {*movdi_internal}
     (nil))
(insn 453 452 454 80 (set (reg:DI 5 di)
        (reg/f:DI 139 [ D.45046 ])) Topology.cc:137 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 139 [ D.45046 ])
        (nil)))
(call_insn 454 453 1508 80 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:137 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              81 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122 125 129

;; basic block 81, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 80, next block 82, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       80 (FALLTHRU)
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122 125 129
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 140
(note 1508 454 455 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 455 1508 457 81 (set (reg/f:DI 140 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:137 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 457 455 458 81 (set (reg:DF 21 xmm0)
        (reg:DF 129 [ D.45045 ])) Topology.cc:138 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 129 [ D.45045 ])
        (nil)))
(insn 458 457 459 81 (set (reg:DI 5 di)
        (reg/f:DI 140 [ D.45040 ])) Topology.cc:138 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 140 [ D.45040 ])
        (nil)))
(call_insn 459 458 1509 81 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEd") [flags 0x41]  <function_decl 0x102fb5b00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:138 649 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              82 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122 125

;; basic block 82, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 81, next block 83, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       81 (FALLTHRU)
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122 125
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 141
(note 1509 459 460 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 460 1509 462 82 (set (reg/f:DI 141 [ D.45046 ])
        (reg:DI 0 ax)) Topology.cc:138 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 462 460 463 82 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC13") [flags 0x2]  <var_decl 0x1041aad10 *LC13>)) Topology.cc:138 89 {*movdi_internal}
     (nil))
(insn 463 462 464 82 (set (reg:DI 5 di)
        (reg/f:DI 141 [ D.45046 ])) Topology.cc:138 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 141 [ D.45046 ])
        (nil)))
(call_insn 464 463 1510 82 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:138 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              83 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122 125

;; basic block 83, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 82, next block 84, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       82 (FALLTHRU)
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122 125
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 142
(note 1510 464 465 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 465 1510 467 83 (set (reg/f:DI 142 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:138 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 467 465 468 83 (set (reg:SI 4 si)
        (reg:SI 125 [ D.45039 ])) Topology.cc:139 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 125 [ D.45039 ])
        (nil)))
(insn 468 467 469 83 (set (reg:DI 5 di)
        (reg/f:DI 142 [ D.45040 ])) Topology.cc:139 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 142 [ D.45040 ])
        (nil)))
(call_insn 469 468 1511 83 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x102fb5700 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:139 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              84 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122

;; basic block 84, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 83, next block 85, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       83 (FALLTHRU)
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 143
(note 1511 469 470 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 470 1511 472 84 (set (reg/f:DI 143 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:139 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 472 470 473 84 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC13") [flags 0x2]  <var_decl 0x1041aad10 *LC13>)) Topology.cc:139 89 {*movdi_internal}
     (nil))
(insn 473 472 474 84 (set (reg:DI 5 di)
        (reg/f:DI 143 [ D.45040 ])) Topology.cc:139 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 143 [ D.45040 ])
        (nil)))
(call_insn 474 473 1512 84 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:139 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              85 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122

;; basic block 85, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 84, next block 86, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       84 (FALLTHRU)
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 144
(note 1512 474 475 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 475 1512 477 85 (set (reg/f:DI 144 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:139 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 477 475 478 85 (set (reg:SI 4 si)
        (reg:SI 122 [ D.45039 ])) Topology.cc:140 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 122 [ D.45039 ])
        (nil)))
(insn 478 477 479 85 (set (reg:DI 5 di)
        (reg/f:DI 144 [ D.45040 ])) Topology.cc:140 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 144 [ D.45040 ])
        (nil)))
(call_insn 479 478 1513 85 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x102fb5700 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:140 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              86 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 86, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 85, next block 87, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       85 (FALLTHRU)
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 145
(note 1513 479 480 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 480 1513 482 86 (set (reg/f:DI 145 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:140 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 482 480 483 86 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC13") [flags 0x2]  <var_decl 0x1041aad10 *LC13>)) Topology.cc:140 89 {*movdi_internal}
     (nil))
(insn 483 482 484 86 (set (reg:DI 5 di)
        (reg/f:DI 145 [ D.45040 ])) Topology.cc:140 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 145 [ D.45040 ])
        (nil)))
(call_insn 484 483 485 86 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:140 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              87 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 87, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 86, next block 88, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       86 (FALLTHRU)
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 146 353 354
(note 485 484 486 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 486 485 487 87 (set (reg/f:DI 353)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1064 [0xfffffffffffffbd8])) [0 this+0 S8 A64])) Topology.cc:143 89 {*movdi_internal}
     (nil))
(insn 487 486 488 87 (set (reg/f:DI 146 [ D.45038 ])
        (mem/f/j:DI (reg/f:DI 353) [0 this_9(D)->g+0 S8 A64])) Topology.cc:143 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 353)
        (nil)))
(insn 488 487 489 87 (set (reg:SI 354)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) Topology.cc:143 90 {*movsi_internal}
     (nil))
(insn 489 488 490 87 (set (reg:SI 4 si)
        (reg:SI 354)) Topology.cc:143 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 354)
        (nil)))
(insn 490 489 491 87 (set (reg:DI 5 di)
        (reg/f:DI 146 [ D.45038 ])) Topology.cc:143 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 146 [ D.45038 ])
        (nil)))
(call_insn 491 490 1514 87 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5brite5Graph10GetNodePtrEi") [flags 0x41]  <function_decl 0x10363b400 GetNodePtr>) [0 GetNodePtr S1 A8])
            (const_int 0 [0]))) Topology.cc:143 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              88 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 88, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 87, next block 89, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       87 (FALLTHRU)
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 147
(note 1514 491 492 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 492 1514 494 88 (set (reg/f:DI 147 [ D.45043 ])
        (reg:DI 0 ax)) Topology.cc:143 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 494 492 495 88 (set (reg:DI 5 di)
        (reg/f:DI 147 [ D.45043 ])) Topology.cc:143 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 147 [ D.45043 ])
        (nil)))
(call_insn 495 494 1515 88 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:143 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              89 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 89, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 88, next block 90, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       88 (FALLTHRU)
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 148
(note 1515 495 496 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 496 1515 498 89 (set (reg/f:DI 148 [ D.45044 ])
        (reg:DI 0 ax)) Topology.cc:143 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 498 496 499 89 (set (reg:DI 5 di)
        (reg/f:DI 148 [ D.45044 ])) Topology.cc:143 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 148 [ D.45044 ])
        (nil)))
(call_insn 499 498 1516 89 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite8NodeConf11GetNodeTypeEv") [flags 0x41]  <function_decl 0x1035f8a00 GetNodeType>) [0 GetNodeType S1 A8])
            (const_int 0 [0]))) Topology.cc:143 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              90 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 90, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 89, next block 91, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       89 (FALLTHRU)
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 149 150
(note 1516 499 500 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 500 1516 502 90 (set (reg:SI 149 [ D.45047 ])
        (reg:SI 0 ax)) Topology.cc:143 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 502 500 503 90 (set (reg:SI 150 [ D.45039 ])
        (reg:SI 149 [ D.45047 ])) Topology.cc:143 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 149 [ D.45047 ])
        (nil)))
(insn 503 502 504 90 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 150 [ D.45039 ])
            (const_int 1 [0x1]))) Topology.cc:143 7 {*cmpsi_1}
     (nil))
(jump_insn 504 503 1517 90 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 629)
            (pc))) Topology.cc:143 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 629)
;;  succ:       115
;;              91 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150

;; basic block 91, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 90, next block 92, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       90 (FALLTHRU)
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150
;; lr  def 	 17 [flags]
(note 1517 504 505 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 505 1517 506 91 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 150 [ D.45039 ])
            (const_int 2 [0x2]))) Topology.cc:143 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 150 [ D.45039 ])
        (nil)))
(jump_insn 506 505 510 91 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 747)
            (pc))) Topology.cc:143 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 747)
;;  succ:       92 (FALLTHRU)
;;              138
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 92, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 91, next block 93, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       91 (FALLTHRU)
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 151 355 356
(note 510 506 511 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 511 510 512 92 (set (reg/f:DI 355)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1064 [0xfffffffffffffbd8])) [0 this+0 S8 A64])) Topology.cc:145 89 {*movdi_internal}
     (nil))
(insn 512 511 513 92 (set (reg/f:DI 151 [ D.45038 ])
        (mem/f/j:DI (reg/f:DI 355) [0 this_9(D)->g+0 S8 A64])) Topology.cc:145 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 355)
        (nil)))
(insn 513 512 514 92 (set (reg:SI 356)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) Topology.cc:145 90 {*movsi_internal}
     (nil))
(insn 514 513 515 92 (set (reg:SI 4 si)
        (reg:SI 356)) Topology.cc:145 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 356)
        (nil)))
(insn 515 514 516 92 (set (reg:DI 5 di)
        (reg/f:DI 151 [ D.45038 ])) Topology.cc:145 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 151 [ D.45038 ])
        (nil)))
(call_insn 516 515 1519 92 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5brite5Graph10GetNodePtrEi") [flags 0x41]  <function_decl 0x10363b400 GetNodePtr>) [0 GetNodePtr S1 A8])
            (const_int 0 [0]))) Topology.cc:145 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              93 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 93, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 92, next block 94, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       92 (FALLTHRU)
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 152
(note 1519 516 517 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 517 1519 519 93 (set (reg/f:DI 152 [ D.45043 ])
        (reg:DI 0 ax)) Topology.cc:145 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 519 517 520 93 (set (reg:DI 5 di)
        (reg/f:DI 152 [ D.45043 ])) Topology.cc:145 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 152 [ D.45043 ])
        (nil)))
(call_insn 520 519 1520 93 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:145 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              94 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 94, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 93, next block 95, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       93 (FALLTHRU)
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 153
(note 1520 520 521 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 521 1520 523 94 (set (reg/f:DI 153 [ D.45044 ])
        (reg:DI 0 ax)) Topology.cc:145 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 523 521 524 94 (set (reg:DI 5 di)
        (reg/f:DI 153 [ D.45044 ])) Topology.cc:145 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 153 [ D.45044 ])
        (nil)))
(call_insn 524 523 1521 94 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite14RouterNodeConf7GetASIdEv") [flags 0x41]  <function_decl 0x103609300 GetASId>) [0 GetASId S1 A8])
            (const_int 0 [0]))) Topology.cc:145 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              95 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 95, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 94, next block 96, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       94 (FALLTHRU)
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 154 357
(note 1521 524 525 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 525 1521 527 95 (set (reg:SI 154 [ D.45039 ])
        (reg:SI 0 ax)) Topology.cc:145 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 527 525 528 95 (parallel [
            (set (reg:DI 357)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:145 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 528 527 529 95 (set (reg:SI 4 si)
        (reg:SI 154 [ D.45039 ])) Topology.cc:145 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 154 [ D.45039 ])
        (nil)))
(insn 529 528 530 95 (set (reg:DI 5 di)
        (reg:DI 357)) Topology.cc:145 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 357)
        (nil)))
(call_insn 530 529 1522 95 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x102fb5700 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:145 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              96 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 96, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 95, next block 97, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       95 (FALLTHRU)
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 155
(note 1522 530 531 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 531 1522 533 96 (set (reg/f:DI 155 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:145 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 533 531 534 96 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC13") [flags 0x2]  <var_decl 0x1041aad10 *LC13>)) Topology.cc:145 89 {*movdi_internal}
     (nil))
(insn 534 533 535 96 (set (reg:DI 5 di)
        (reg/f:DI 155 [ D.45040 ])) Topology.cc:145 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 155 [ D.45040 ])
        (nil)))
(call_insn 535 534 536 96 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:145 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              97 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 97, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 96, next block 98, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       96 (FALLTHRU)
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 156 358 359
(note 536 535 537 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 537 536 538 97 (set (reg/f:DI 358)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1064 [0xfffffffffffffbd8])) [0 this+0 S8 A64])) Topology.cc:147 89 {*movdi_internal}
     (nil))
(insn 538 537 539 97 (set (reg/f:DI 156 [ D.45038 ])
        (mem/f/j:DI (reg/f:DI 358) [0 this_9(D)->g+0 S8 A64])) Topology.cc:147 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 358)
        (nil)))
(insn 539 538 540 97 (set (reg:SI 359)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) Topology.cc:147 90 {*movsi_internal}
     (nil))
(insn 540 539 541 97 (set (reg:SI 4 si)
        (reg:SI 359)) Topology.cc:147 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 359)
        (nil)))
(insn 541 540 542 97 (set (reg:DI 5 di)
        (reg/f:DI 156 [ D.45038 ])) Topology.cc:147 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 156 [ D.45038 ])
        (nil)))
(call_insn 542 541 1523 97 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5brite5Graph10GetNodePtrEi") [flags 0x41]  <function_decl 0x10363b400 GetNodePtr>) [0 GetNodePtr S1 A8])
            (const_int 0 [0]))) Topology.cc:147 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              98 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 98, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 97, next block 99, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       97 (FALLTHRU)
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 157
(note 1523 542 543 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 543 1523 545 98 (set (reg/f:DI 157 [ D.45043 ])
        (reg:DI 0 ax)) Topology.cc:147 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 545 543 546 98 (set (reg:DI 5 di)
        (reg/f:DI 157 [ D.45043 ])) Topology.cc:147 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 157 [ D.45043 ])
        (nil)))
(call_insn 546 545 1524 98 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:147 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              99 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 99, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 98, next block 100, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       98 (FALLTHRU)
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 158
(note 1524 546 547 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 547 1524 549 99 (set (reg/f:DI 158 [ D.45044 ])
        (reg:DI 0 ax)) Topology.cc:147 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 549 547 550 99 (set (reg:DI 5 di)
        (reg/f:DI 158 [ D.45044 ])) Topology.cc:147 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 158 [ D.45044 ])
        (nil)))
(call_insn 550 549 1525 99 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite14RouterNodeConf13GetRouterTypeEv") [flags 0x41]  <function_decl 0x103609100 GetRouterType>) [0 GetRouterType S1 A8])
            (const_int 0 [0]))) Topology.cc:147 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              100 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 100, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 99, next block 101, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       99 (FALLTHRU)
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 159 160
(note 1525 550 551 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 551 1525 553 100 (set (reg:SI 159 [ D.45048 ])
        (reg:SI 0 ax)) Topology.cc:147 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 553 551 554 100 (set (reg:SI 160 [ D.45039 ])
        (reg:SI 159 [ D.45048 ])) Topology.cc:147 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 159 [ D.45048 ])
        (nil)))
(insn 554 553 555 100 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 160 [ D.45039 ])
            (const_int 4 [0x4]))) Topology.cc:147 7 {*cmpsi_1}
     (nil))
(jump_insn 555 554 1526 100 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 612)
            (pc))) Topology.cc:147 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 612)
;;  succ:       112
;;              101 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 160

;; basic block 101, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 100, next block 102, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       100 (FALLTHRU)
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 160
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 160
;; lr  def 	 17 [flags] 360 361 362 363 364 365 366
(note 1526 555 556 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 556 1526 557 101 (set (reg:DI 360)
        (zero_extend:DI (reg:SI 160 [ D.45039 ]))) Topology.cc:147 133 {*zero_extendsidi2}
     (expr_list:REG_DEAD (reg:SI 160 [ D.45039 ])
        (nil)))
(insn 557 556 558 101 (parallel [
            (set (reg:DI 361)
                (ashift:DI (reg:DI 360)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:147 497 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 360)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 558 557 559 101 (set (reg:DI 362)
        (label_ref:DI 564)) Topology.cc:147 89 {*movdi_internal}
     (insn_list:REG_LABEL_OPERAND 564 (nil)))
(insn 559 558 560 101 (set (reg:SI 363)
        (mem/u/c:SI (plus:DI (reg:DI 361)
                (reg:DI 362)) [0  S4 A8])) Topology.cc:147 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 362)
        (expr_list:REG_DEAD (reg:DI 361)
            (nil))))
(insn 560 559 561 101 (set (reg:DI 364)
        (sign_extend:DI (reg:SI 363))) Topology.cc:147 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 363)
        (nil)))
(insn 561 560 562 101 (set (reg:DI 366)
        (label_ref:DI 564)) Topology.cc:147 89 {*movdi_internal}
     (insn_list:REG_LABEL_OPERAND 564 (nil)))
(insn 562 561 563 101 (parallel [
            (set (reg:DI 365)
                (plus:DI (reg:DI 364)
                    (reg:DI 366)))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:147 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 366)
        (expr_list:REG_DEAD (reg:DI 364)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(jump_insn 563 562 564 101 (parallel [
            (set (pc)
                (reg:DI 365))
            (use (label_ref 564))
        ]) Topology.cc:147 640 {*tablejump_1}
     (expr_list:REG_DEAD (reg:DI 365)
        (nil))
 -> 564)
;;  succ:       110
;;              102
;;              104
;;              106
;;              108
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Insn is not within a basic block
(code_label 564 563 565 61 "" [3 uses])
;; Insn is not within a basic block
(jump_table_data 565 564 566 (addr_diff_vec:SI (label_ref:DI 564)
         [
            (label_ref:DI 567)
            (label_ref:DI 576)
            (label_ref:DI 585)
            (label_ref:DI 594)
            (label_ref:DI 603)
        ]
        (const_int 0 [0])
        (const_int 0 [0])))
(barrier 566 565 567)
;; basic block 102, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 101, next block 103, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       101
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 367
(code_label 567 566 568 102 60 "" [1 uses])
(note 568 567 569 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 569 568 570 102 (parallel [
            (set (reg:DI 367)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:149 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 570 569 571 102 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC14") [flags 0x2]  <var_decl 0x1041aada8 *LC14>)) Topology.cc:149 89 {*movdi_internal}
     (nil))
(insn 571 570 572 102 (set (reg:DI 5 di)
        (reg:DI 367)) Topology.cc:149 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 367)
        (nil)))
(call_insn 572 571 1678 102 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:149 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              103 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 103, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 102, next block 104, flags: (NEW, RTL, MODIFIED)
;;  pred:       102 (FALLTHRU)
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1678 572 1679 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1679 1678 1680 103 (set (pc)
        (label_ref 625)) Topology.cc:150 636 {jump}
     (nil)
 -> 625)
;;  succ:       114 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1680 1679 576)
;; basic block 104, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 103, next block 105, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       101
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 368
(code_label 576 1680 577 104 62 "" [1 uses])
(note 577 576 578 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 578 577 579 104 (parallel [
            (set (reg:DI 368)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:152 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 579 578 580 104 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC15") [flags 0x2]  <var_decl 0x1041aae40 *LC15>)) Topology.cc:152 89 {*movdi_internal}
     (nil))
(insn 580 579 581 104 (set (reg:DI 5 di)
        (reg:DI 368)) Topology.cc:152 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 368)
        (nil)))
(call_insn 581 580 1681 104 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:152 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              105 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 105, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 104, next block 106, flags: (NEW, RTL, MODIFIED)
;;  pred:       104 (FALLTHRU)
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1681 581 1682 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1682 1681 1683 105 (set (pc)
        (label_ref 625)) Topology.cc:153 636 {jump}
     (nil)
 -> 625)
;;  succ:       114 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1683 1682 585)
;; basic block 106, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 105, next block 107, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       101
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 369
(code_label 585 1683 586 106 63 "" [1 uses])
(note 586 585 587 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 587 586 588 106 (parallel [
            (set (reg:DI 369)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:155 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 588 587 589 106 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC16") [flags 0x2]  <var_decl 0x1041aaed8 *LC16>)) Topology.cc:155 89 {*movdi_internal}
     (nil))
(insn 589 588 590 106 (set (reg:DI 5 di)
        (reg:DI 369)) Topology.cc:155 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 369)
        (nil)))
(call_insn 590 589 1684 106 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:155 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              107 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 107, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 106, next block 108, flags: (NEW, RTL, MODIFIED)
;;  pred:       106 (FALLTHRU)
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1684 590 1685 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1685 1684 1686 107 (set (pc)
        (label_ref 625)) Topology.cc:156 636 {jump}
     (nil)
 -> 625)
;;  succ:       114 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1686 1685 594)
;; basic block 108, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 107, next block 109, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       101
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 370
(code_label 594 1686 595 108 64 "" [1 uses])
(note 595 594 596 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 596 595 597 108 (parallel [
            (set (reg:DI 370)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:158 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 597 596 598 108 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC17") [flags 0x2]  <var_decl 0x1041c9000 *LC17>)) Topology.cc:158 89 {*movdi_internal}
     (nil))
(insn 598 597 599 108 (set (reg:DI 5 di)
        (reg:DI 370)) Topology.cc:158 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 370)
        (nil)))
(call_insn 599 598 1687 108 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:158 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              109 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 109, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 108, next block 110, flags: (NEW, RTL, MODIFIED)
;;  pred:       108 (FALLTHRU)
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1687 599 1688 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1688 1687 1689 109 (set (pc)
        (label_ref 625)) Topology.cc:159 636 {jump}
     (nil)
 -> 625)
;;  succ:       114 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1689 1688 603)
;; basic block 110, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 109, next block 111, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       101
;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 371
(code_label 603 1689 604 110 65 "" [1 uses])
(note 604 603 605 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 605 604 606 110 (parallel [
            (set (reg:DI 371)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:161 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 606 605 607 110 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC18") [flags 0x2]  <var_decl 0x1041c9098 *LC18>)) Topology.cc:161 89 {*movdi_internal}
     (nil))
(insn 607 606 608 110 (set (reg:DI 5 di)
        (reg:DI 371)) Topology.cc:161 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 371)
        (nil)))
(call_insn 608 607 1690 110 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:161 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              111 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 111, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 110, next block 112, flags: (NEW, RTL, MODIFIED)
;;  pred:       110 (FALLTHRU)
;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1690 608 1691 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1691 1690 1692 111 (set (pc)
        (label_ref 625)) Topology.cc:162 636 {jump}
     (nil)
 -> 625)
;;  succ:       114 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1692 1691 612)
;; basic block 112, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 111, next block 113, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       100
;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 372
(code_label 612 1692 613 112 59 "" [1 uses])
(note 613 612 614 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 614 613 615 112 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC19") [flags 0x2]  <var_decl 0x1041c9130 *LC19>)) Topology.cc:164 89 {*movdi_internal}
     (nil))
(insn 615 614 616 112 (set (reg:DI 372)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cerr") [flags 0x1040]  <var_decl 0x1031027b8 cerr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) Topology.cc:164 89 {*movdi_internal}
     (nil))
(insn 616 615 617 112 (set (reg:DI 5 di)
        (reg:DI 372)) Topology.cc:164 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 372)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cerr") [flags 0x1040]  <var_decl 0x1031027b8 cerr>)
            (nil))))
(call_insn 617 616 618 112 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:164 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              113 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 113, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 112, next block 114, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       112 (FALLTHRU)
;; bb 113 artificial_defs: { }
;; bb 113 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 618 617 619 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 619 618 620 113 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*LC20") [flags 0x2]  <var_decl 0x1041c91c8 *LC20>)) Topology.cc:165 89 {*movdi_internal}
     (nil))
(insn 620 619 621 113 (set (reg:SI 1 dx)
        (const_int 165 [0xa5])) Topology.cc:165 90 {*movsi_internal}
     (nil))
(insn 621 620 622 113 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC1") [flags 0x2]  <var_decl 0x10417fda8 *LC1>)) Topology.cc:165 89 {*movdi_internal}
     (nil))
(insn 622 621 623 113 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZZN5brite8Topology11BriteOutputEPcE8__func__") [flags 0x1c02]  <var_decl 0x103d087b8 __func__>)) Topology.cc:165 89 {*movdi_internal}
     (nil))
(call_insn 623 622 624 113 (call (mem:QI (symbol_ref:DI ("__assert_rtn") [flags 0x41]  <function_decl 0x1035dc600 __assert_rtn>) [0 __assert_rtn S1 A8])
        (const_int 0 [0])) Topology.cc:165 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 4 [0x4])
                        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                            (expr_list:REG_NORETURN (const_int 0 [0])
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 624 623 625)
;; basic block 114, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 113, next block 115, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       109 [100.0%] 
;;              103 [100.0%] 
;;              105 [100.0%] 
;;              107 [100.0%] 
;;              111 [100.0%] 
;; bb 114 artificial_defs: { }
;; bb 114 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 625 624 626 114 66 "" [5 uses])
(note 626 625 1693 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1693 626 1694 114 (set (pc)
        (label_ref 747)) Topology.cc:167 636 {jump}
     (nil)
 -> 747)
;;  succ:       138 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1694 1693 629)
;; basic block 115, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 114, next block 116, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       90
;; bb 115 artificial_defs: { }
;; bb 115 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 161 373 374
(code_label 629 1694 630 115 57 "" [1 uses])
(note 630 629 631 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 631 630 632 115 (set (reg/f:DI 373)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1064 [0xfffffffffffffbd8])) [0 this+0 S8 A64])) Topology.cc:170 89 {*movdi_internal}
     (nil))
(insn 632 631 633 115 (set (reg/f:DI 161 [ D.45038 ])
        (mem/f/j:DI (reg/f:DI 373) [0 this_9(D)->g+0 S8 A64])) Topology.cc:170 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 373)
        (nil)))
(insn 633 632 634 115 (set (reg:SI 374)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) Topology.cc:170 90 {*movsi_internal}
     (nil))
(insn 634 633 635 115 (set (reg:SI 4 si)
        (reg:SI 374)) Topology.cc:170 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 374)
        (nil)))
(insn 635 634 636 115 (set (reg:DI 5 di)
        (reg/f:DI 161 [ D.45038 ])) Topology.cc:170 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 161 [ D.45038 ])
        (nil)))
(call_insn 636 635 1527 115 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5brite5Graph10GetNodePtrEi") [flags 0x41]  <function_decl 0x10363b400 GetNodePtr>) [0 GetNodePtr S1 A8])
            (const_int 0 [0]))) Topology.cc:170 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              116 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 116, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 115, next block 117, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       115 (FALLTHRU)
;; bb 116 artificial_defs: { }
;; bb 116 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 162
(note 1527 636 637 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 637 1527 639 116 (set (reg/f:DI 162 [ D.45043 ])
        (reg:DI 0 ax)) Topology.cc:170 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 639 637 640 116 (set (reg:DI 5 di)
        (reg/f:DI 162 [ D.45043 ])) Topology.cc:170 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 162 [ D.45043 ])
        (nil)))
(call_insn 640 639 1528 116 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:170 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              117 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 117, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 116, next block 118, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       116 (FALLTHRU)
;; bb 117 artificial_defs: { }
;; bb 117 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 163
(note 1528 640 641 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 641 1528 643 117 (set (reg/f:DI 163 [ D.45044 ])
        (reg:DI 0 ax)) Topology.cc:170 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 643 641 644 117 (set (reg:DI 5 di)
        (reg/f:DI 163 [ D.45044 ])) Topology.cc:170 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 163 [ D.45044 ])
        (nil)))
(call_insn 644 643 1529 117 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite10ASNodeConf7GetASIdEv") [flags 0x41]  <function_decl 0x103609d00 GetASId>) [0 GetASId S1 A8])
            (const_int 0 [0]))) Topology.cc:170 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              118 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 118, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 117, next block 119, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       117 (FALLTHRU)
;; bb 118 artificial_defs: { }
;; bb 118 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 164 375
(note 1529 644 645 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 645 1529 647 118 (set (reg:SI 164 [ D.45039 ])
        (reg:SI 0 ax)) Topology.cc:170 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 647 645 648 118 (parallel [
            (set (reg:DI 375)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:170 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 648 647 649 118 (set (reg:SI 4 si)
        (reg:SI 164 [ D.45039 ])) Topology.cc:170 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 164 [ D.45039 ])
        (nil)))
(insn 649 648 650 118 (set (reg:DI 5 di)
        (reg:DI 375)) Topology.cc:170 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 375)
        (nil)))
(call_insn 650 649 1530 118 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x102fb5700 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:170 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              119 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 119, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 118, next block 120, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       118 (FALLTHRU)
;; bb 119 artificial_defs: { }
;; bb 119 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 165
(note 1530 650 651 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 651 1530 653 119 (set (reg/f:DI 165 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:170 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 653 651 654 119 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC13") [flags 0x2]  <var_decl 0x1041aad10 *LC13>)) Topology.cc:170 89 {*movdi_internal}
     (nil))
(insn 654 653 655 119 (set (reg:DI 5 di)
        (reg/f:DI 165 [ D.45040 ])) Topology.cc:170 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 165 [ D.45040 ])
        (nil)))
(call_insn 655 654 656 119 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:170 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              120 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 120, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 119, next block 121, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       119 (FALLTHRU)
;; bb 120 artificial_defs: { }
;; bb 120 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 166 376 377
(note 656 655 657 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 657 656 658 120 (set (reg/f:DI 376)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1064 [0xfffffffffffffbd8])) [0 this+0 S8 A64])) Topology.cc:172 89 {*movdi_internal}
     (nil))
(insn 658 657 659 120 (set (reg/f:DI 166 [ D.45038 ])
        (mem/f/j:DI (reg/f:DI 376) [0 this_9(D)->g+0 S8 A64])) Topology.cc:172 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 376)
        (nil)))
(insn 659 658 660 120 (set (reg:SI 377)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) Topology.cc:172 90 {*movsi_internal}
     (nil))
(insn 660 659 661 120 (set (reg:SI 4 si)
        (reg:SI 377)) Topology.cc:172 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 377)
        (nil)))
(insn 661 660 662 120 (set (reg:DI 5 di)
        (reg/f:DI 166 [ D.45038 ])) Topology.cc:172 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 166 [ D.45038 ])
        (nil)))
(call_insn 662 661 1531 120 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5brite5Graph10GetNodePtrEi") [flags 0x41]  <function_decl 0x10363b400 GetNodePtr>) [0 GetNodePtr S1 A8])
            (const_int 0 [0]))) Topology.cc:172 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              121 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 121, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 120, next block 122, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       120 (FALLTHRU)
;; bb 121 artificial_defs: { }
;; bb 121 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 167
(note 1531 662 663 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 663 1531 665 121 (set (reg/f:DI 167 [ D.45043 ])
        (reg:DI 0 ax)) Topology.cc:172 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 665 663 666 121 (set (reg:DI 5 di)
        (reg/f:DI 167 [ D.45043 ])) Topology.cc:172 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 167 [ D.45043 ])
        (nil)))
(call_insn 666 665 1532 121 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:172 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              122 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 122, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 121, next block 123, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       121 (FALLTHRU)
;; bb 122 artificial_defs: { }
;; bb 122 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 168
(note 1532 666 667 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 667 1532 669 122 (set (reg/f:DI 168 [ D.45044 ])
        (reg:DI 0 ax)) Topology.cc:172 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 669 667 670 122 (set (reg:DI 5 di)
        (reg/f:DI 168 [ D.45044 ])) Topology.cc:172 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 168 [ D.45044 ])
        (nil)))
(call_insn 670 669 1533 122 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite10ASNodeConf9GetASTypeEv") [flags 0x41]  <function_decl 0x103609b00 GetASType>) [0 GetASType S1 A8])
            (const_int 0 [0]))) Topology.cc:172 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              123 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 123, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 122, next block 124, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       122 (FALLTHRU)
;; bb 123 artificial_defs: { }
;; bb 123 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 169 170
(note 1533 670 671 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 671 1533 673 123 (set (reg:SI 169 [ D.45049 ])
        (reg:SI 0 ax)) Topology.cc:172 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 673 671 674 123 (set (reg:SI 170 [ D.45039 ])
        (reg:SI 169 [ D.45049 ])) Topology.cc:172 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 169 [ D.45049 ])
        (nil)))
(insn 674 673 675 123 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 170 [ D.45039 ])
            (const_int 4 [0x4]))) Topology.cc:172 7 {*cmpsi_1}
     (nil))
(jump_insn 675 674 1534 123 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 732)
            (pc))) Topology.cc:172 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 732)
;;  succ:       135
;;              124 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 170

;; basic block 124, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 123, next block 125, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       123 (FALLTHRU)
;; bb 124 artificial_defs: { }
;; bb 124 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 170
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 170
;; lr  def 	 17 [flags] 378 379 380 381 382 383 384
(note 1534 675 676 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 676 1534 677 124 (set (reg:DI 378)
        (zero_extend:DI (reg:SI 170 [ D.45039 ]))) Topology.cc:172 133 {*zero_extendsidi2}
     (expr_list:REG_DEAD (reg:SI 170 [ D.45039 ])
        (nil)))
(insn 677 676 678 124 (parallel [
            (set (reg:DI 379)
                (ashift:DI (reg:DI 378)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:172 497 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 378)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 678 677 679 124 (set (reg:DI 380)
        (label_ref:DI 684)) Topology.cc:172 89 {*movdi_internal}
     (insn_list:REG_LABEL_OPERAND 684 (nil)))
(insn 679 678 680 124 (set (reg:SI 381)
        (mem/u/c:SI (plus:DI (reg:DI 379)
                (reg:DI 380)) [0  S4 A8])) Topology.cc:172 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 380)
        (expr_list:REG_DEAD (reg:DI 379)
            (nil))))
(insn 680 679 681 124 (set (reg:DI 382)
        (sign_extend:DI (reg:SI 381))) Topology.cc:172 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 381)
        (nil)))
(insn 681 680 682 124 (set (reg:DI 384)
        (label_ref:DI 684)) Topology.cc:172 89 {*movdi_internal}
     (insn_list:REG_LABEL_OPERAND 684 (nil)))
(insn 682 681 683 124 (parallel [
            (set (reg:DI 383)
                (plus:DI (reg:DI 382)
                    (reg:DI 384)))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:172 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 384)
        (expr_list:REG_DEAD (reg:DI 382)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(jump_insn 683 682 684 124 (parallel [
            (set (pc)
                (reg:DI 383))
            (use (label_ref 684))
        ]) Topology.cc:172 640 {*tablejump_1}
     (expr_list:REG_DEAD (reg:DI 383)
        (nil))
 -> 684)
;;  succ:       133
;;              125
;;              127
;;              129
;;              131
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Insn is not within a basic block
(code_label 684 683 685 69 "" [3 uses])
;; Insn is not within a basic block
(jump_table_data 685 684 686 (addr_diff_vec:SI (label_ref:DI 684)
         [
            (label_ref:DI 687)
            (label_ref:DI 696)
            (label_ref:DI 705)
            (label_ref:DI 714)
            (label_ref:DI 723)
        ]
        (const_int 0 [0])
        (const_int 0 [0])))
(barrier 686 685 687)
;; basic block 125, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 124, next block 126, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       124
;; bb 125 artificial_defs: { }
;; bb 125 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 385
(code_label 687 686 688 125 68 "" [1 uses])
(note 688 687 689 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 689 688 690 125 (parallel [
            (set (reg:DI 385)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:174 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 690 689 691 125 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC21") [flags 0x2]  <var_decl 0x1041c9260 *LC21>)) Topology.cc:174 89 {*movdi_internal}
     (nil))
(insn 691 690 692 125 (set (reg:DI 5 di)
        (reg:DI 385)) Topology.cc:174 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 385)
        (nil)))
(call_insn 692 691 1695 125 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:174 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              126 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 126, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 125, next block 127, flags: (NEW, RTL, MODIFIED)
;;  pred:       125 (FALLTHRU)
;; bb 126 artificial_defs: { }
;; bb 126 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1695 692 1696 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1696 1695 1697 126 (set (pc)
        (label_ref 745)) Topology.cc:175 636 {jump}
     (nil)
 -> 745)
;;  succ:       137 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1697 1696 696)
;; basic block 127, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 126, next block 128, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       124
;; bb 127 artificial_defs: { }
;; bb 127 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 386
(code_label 696 1697 697 127 70 "" [1 uses])
(note 697 696 698 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 698 697 699 127 (parallel [
            (set (reg:DI 386)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:177 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 699 698 700 127 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC22") [flags 0x2]  <var_decl 0x1041c92f8 *LC22>)) Topology.cc:177 89 {*movdi_internal}
     (nil))
(insn 700 699 701 127 (set (reg:DI 5 di)
        (reg:DI 386)) Topology.cc:177 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 386)
        (nil)))
(call_insn 701 700 1698 127 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:177 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              128 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 128, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 127, next block 129, flags: (NEW, RTL, MODIFIED)
;;  pred:       127 (FALLTHRU)
;; bb 128 artificial_defs: { }
;; bb 128 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1698 701 1699 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1699 1698 1700 128 (set (pc)
        (label_ref 745)) Topology.cc:178 636 {jump}
     (nil)
 -> 745)
;;  succ:       137 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1700 1699 705)
;; basic block 129, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 128, next block 130, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       124
;; bb 129 artificial_defs: { }
;; bb 129 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 387
(code_label 705 1700 706 129 71 "" [1 uses])
(note 706 705 707 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 707 706 708 129 (parallel [
            (set (reg:DI 387)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:180 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 708 707 709 129 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC23") [flags 0x2]  <var_decl 0x1041c9390 *LC23>)) Topology.cc:180 89 {*movdi_internal}
     (nil))
(insn 709 708 710 129 (set (reg:DI 5 di)
        (reg:DI 387)) Topology.cc:180 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 387)
        (nil)))
(call_insn 710 709 1701 129 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:180 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              130 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 130, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 129, next block 131, flags: (NEW, RTL, MODIFIED)
;;  pred:       129 (FALLTHRU)
;; bb 130 artificial_defs: { }
;; bb 130 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1701 710 1702 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1702 1701 1703 130 (set (pc)
        (label_ref 745)) Topology.cc:181 636 {jump}
     (nil)
 -> 745)
;;  succ:       137 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1703 1702 714)
;; basic block 131, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 130, next block 132, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       124
;; bb 131 artificial_defs: { }
;; bb 131 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 388
(code_label 714 1703 715 131 72 "" [1 uses])
(note 715 714 716 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(insn 716 715 717 131 (parallel [
            (set (reg:DI 388)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:183 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 717 716 718 131 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC24") [flags 0x2]  <var_decl 0x1041c9428 *LC24>)) Topology.cc:183 89 {*movdi_internal}
     (nil))
(insn 718 717 719 131 (set (reg:DI 5 di)
        (reg:DI 388)) Topology.cc:183 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 388)
        (nil)))
(call_insn 719 718 1704 131 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:183 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              132 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 132, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 131, next block 133, flags: (NEW, RTL, MODIFIED)
;;  pred:       131 (FALLTHRU)
;; bb 132 artificial_defs: { }
;; bb 132 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1704 719 1705 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1705 1704 1706 132 (set (pc)
        (label_ref 745)) Topology.cc:184 636 {jump}
     (nil)
 -> 745)
;;  succ:       137 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1706 1705 723)
;; basic block 133, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 132, next block 134, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       124
;; bb 133 artificial_defs: { }
;; bb 133 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 389
(code_label 723 1706 724 133 73 "" [1 uses])
(note 724 723 725 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(insn 725 724 726 133 (parallel [
            (set (reg:DI 389)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:186 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 726 725 727 133 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC25") [flags 0x2]  <var_decl 0x1041c94c0 *LC25>)) Topology.cc:186 89 {*movdi_internal}
     (nil))
(insn 727 726 728 133 (set (reg:DI 5 di)
        (reg:DI 389)) Topology.cc:186 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 389)
        (nil)))
(call_insn 728 727 1707 133 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:186 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              134 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 134, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 133, next block 135, flags: (NEW, RTL, MODIFIED)
;;  pred:       133 (FALLTHRU)
;; bb 134 artificial_defs: { }
;; bb 134 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1707 728 1708 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1708 1707 1709 134 (set (pc)
        (label_ref 745)) Topology.cc:187 636 {jump}
     (nil)
 -> 745)
;;  succ:       137 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1709 1708 732)
;; basic block 135, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 134, next block 136, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       123
;; bb 135 artificial_defs: { }
;; bb 135 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 390
(code_label 732 1709 733 135 67 "" [1 uses])
(note 733 732 734 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 734 733 735 135 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC26") [flags 0x2]  <var_decl 0x1041c9558 *LC26>)) Topology.cc:189 89 {*movdi_internal}
     (nil))
(insn 735 734 736 135 (set (reg:DI 390)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cerr") [flags 0x1040]  <var_decl 0x1031027b8 cerr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) Topology.cc:189 89 {*movdi_internal}
     (nil))
(insn 736 735 737 135 (set (reg:DI 5 di)
        (reg:DI 390)) Topology.cc:189 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 390)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cerr") [flags 0x1040]  <var_decl 0x1031027b8 cerr>)
            (nil))))
(call_insn 737 736 738 135 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:189 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              136 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 136, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 135, next block 137, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       135 (FALLTHRU)
;; bb 136 artificial_defs: { }
;; bb 136 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 738 737 739 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(insn 739 738 740 136 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*LC20") [flags 0x2]  <var_decl 0x1041c91c8 *LC20>)) Topology.cc:190 89 {*movdi_internal}
     (nil))
(insn 740 739 741 136 (set (reg:SI 1 dx)
        (const_int 190 [0xbe])) Topology.cc:190 90 {*movsi_internal}
     (nil))
(insn 741 740 742 136 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC1") [flags 0x2]  <var_decl 0x10417fda8 *LC1>)) Topology.cc:190 89 {*movdi_internal}
     (nil))
(insn 742 741 743 136 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZZN5brite8Topology11BriteOutputEPcE8__func__") [flags 0x1c02]  <var_decl 0x103d087b8 __func__>)) Topology.cc:190 89 {*movdi_internal}
     (nil))
(call_insn 743 742 744 136 (call (mem:QI (symbol_ref:DI ("__assert_rtn") [flags 0x41]  <function_decl 0x1035dc600 __assert_rtn>) [0 __assert_rtn S1 A8])
        (const_int 0 [0])) Topology.cc:190 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 4 [0x4])
                        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                            (expr_list:REG_NORETURN (const_int 0 [0])
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 744 743 745)
;; basic block 137, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 136, next block 275, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       132 [100.0%] 
;;              126 [100.0%] 
;;              128 [100.0%] 
;;              130 [100.0%] 
;;              134 [100.0%] 
;; bb 137 artificial_defs: { }
;; bb 137 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 745 744 746 137 74 "" [5 uses])
(note 746 745 1790 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
;;  succ:       275 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 275, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 137, next block 138, flags: (NEW, RTL, MODIFIED)
;;  pred:       137 (FALLTHRU)
;; bb 275 artificial_defs: { }
;; bb 275 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1790 746 1791 275 [bb 275] NOTE_INSN_BASIC_BLOCK)
(insn 1791 1790 747 275 (const_int 0 [0]) Topology.cc:192 662 {nop}
     (nil))
;;  succ:       138 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 138, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 275, next block 139, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       91
;;              275 [100.0%]  (FALLTHRU)
;;              114 [100.0%] 
;; bb 138 artificial_defs: { }
;; bb 138 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 391
(code_label 747 1791 748 138 56 "" [2 uses])
(note 748 747 749 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(insn 749 748 750 138 (parallel [
            (set (reg:DI 391)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:194 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 750 749 751 138 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC12") [flags 0x2]  <var_decl 0x1041aac78 *LC12>)) Topology.cc:194 89 {*movdi_internal}
     (nil))
(insn 751 750 752 138 (set (reg:DI 5 di)
        (reg:DI 391)) Topology.cc:194 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 391)
        (nil)))
(call_insn 752 751 753 138 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:194 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              139 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 139, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 138, next block 140, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       138 (FALLTHRU)
;; bb 139 artificial_defs: { }
;; bb 139 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 753 752 754 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(insn 754 753 755 139 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:134 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       140 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 140, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 139, next block 141, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       139 (FALLTHRU,DFS_BACK)
;;              64 [100.0%] 
;; bb 140 artificial_defs: { }
;; bb 140 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 117 392
(code_label 755 754 756 140 55 "" [1 uses])
(note 756 755 757 140 [bb 140] NOTE_INSN_BASIC_BLOCK)
(insn 757 756 758 140 (set (reg/f:DI 392)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1064 [0xfffffffffffffbd8])) [0 this+0 S8 A64])) Topology.cc:134 89 {*movdi_internal}
     (nil))
(insn 758 757 759 140 (set (reg/f:DI 117 [ D.45038 ])
        (mem/f/j:DI (reg/f:DI 392) [0 this_9(D)->g+0 S8 A64])) Topology.cc:134 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 392)
        (nil)))
(insn 759 758 760 140 (set (reg:DI 5 di)
        (reg/f:DI 117 [ D.45038 ])) Topology.cc:134 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 117 [ D.45038 ])
        (nil)))
(call_insn 760 759 1535 140 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5brite5Graph11GetNumNodesEv") [flags 0x41]  <function_decl 0x10363b800 GetNumNodes>) [0 GetNumNodes S1 A8])
            (const_int 0 [0]))) Topology.cc:134 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              141 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 141, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 140, next block 142, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       140 (FALLTHRU)
;; bb 141 artificial_defs: { }
;; bb 141 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 118 119
(note 1535 760 761 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(insn 761 1535 763 141 (set (reg:SI 118 [ D.45039 ])
        (reg:SI 0 ax)) Topology.cc:134 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 763 761 764 141 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 118 [ D.45039 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) Topology.cc:134 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 118 [ D.45039 ])
        (nil)))
(insn 764 763 766 141 (set (reg:QI 119 [ D.45036 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) Topology.cc:134 592 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
(insn 766 764 767 141 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 119 [ D.45036 ])
            (const_int 0 [0]))) Topology.cc:134 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 119 [ D.45036 ])
        (nil)))
(jump_insn 767 766 768 141 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 765)
            (pc))) Topology.cc:134 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 765)
;;  succ:       65
;;              142 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 142, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 141, next block 143, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       141 (FALLTHRU)
;; bb 142 artificial_defs: { }
;; bb 142 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 171 393
(note 768 767 769 142 [bb 142] NOTE_INSN_BASIC_BLOCK)
(insn 769 768 770 142 (set (reg/f:DI 393)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1064 [0xfffffffffffffbd8])) [0 this+0 S8 A64])) Topology.cc:197 89 {*movdi_internal}
     (nil))
(insn 770 769 771 142 (set (reg/f:DI 171 [ D.45038 ])
        (mem/f/j:DI (reg/f:DI 393) [0 this_9(D)->g+0 S8 A64])) Topology.cc:197 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 393)
        (nil)))
(insn 771 770 772 142 (set (reg:DI 5 di)
        (reg/f:DI 171 [ D.45038 ])) Topology.cc:197 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 171 [ D.45038 ])
        (nil)))
(call_insn 772 771 1536 142 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5brite5Graph11GetNumEdgesEv") [flags 0x41]  <function_decl 0x10363b900 GetNumEdges>) [0 GetNumEdges S1 A8])
            (const_int 0 [0]))) Topology.cc:197 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              143 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 143, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 142, next block 144, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       142 (FALLTHRU)
;; bb 143 artificial_defs: { }
;; bb 143 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 172 394
(note 1536 772 773 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
(insn 773 1536 775 143 (set (reg:SI 172 [ D.45039 ])
        (reg:SI 0 ax)) Topology.cc:197 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 775 773 776 143 (parallel [
            (set (reg:DI 394)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:197 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 776 775 777 143 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC27") [flags 0x2]  <var_decl 0x1041c95f0 *LC27>)) Topology.cc:197 89 {*movdi_internal}
     (nil))
(insn 777 776 778 143 (set (reg:DI 5 di)
        (reg:DI 394)) Topology.cc:197 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 394)
        (nil)))
(call_insn 778 777 1537 143 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:197 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              144 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 172

;; basic block 144, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 143, next block 145, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       143 (FALLTHRU)
;; bb 144 artificial_defs: { }
;; bb 144 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 172
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 172
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 173
(note 1537 778 779 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
(insn 779 1537 781 144 (set (reg/f:DI 173 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:197 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 781 779 782 144 (set (reg:SI 4 si)
        (reg:SI 172 [ D.45039 ])) Topology.cc:197 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 172 [ D.45039 ])
        (nil)))
(insn 782 781 783 144 (set (reg:DI 5 di)
        (reg/f:DI 173 [ D.45040 ])) Topology.cc:197 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 173 [ D.45040 ])
        (nil)))
(call_insn 783 782 1538 144 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x102fb5700 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:197 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              145 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 145, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 144, next block 146, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       144 (FALLTHRU)
;; bb 145 artificial_defs: { }
;; bb 145 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 174
(note 1538 783 784 145 [bb 145] NOTE_INSN_BASIC_BLOCK)
(insn 784 1538 786 145 (set (reg/f:DI 174 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:197 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 786 784 787 145 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC28") [flags 0x2]  <var_decl 0x1041c9688 *LC28>)) Topology.cc:197 89 {*movdi_internal}
     (nil))
(insn 787 786 788 145 (set (reg:DI 5 di)
        (reg/f:DI 174 [ D.45040 ])) Topology.cc:197 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 174 [ D.45040 ])
        (nil)))
(call_insn 788 787 789 145 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:197 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              146 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 146, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 145, next block 147, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       145 (FALLTHRU)
;; bb 146 artificial_defs: { }
;; bb 146 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 175 176 395 396
(note 789 788 790 146 [bb 146] NOTE_INSN_BASIC_BLOCK)
(insn 790 789 791 146 (parallel [
            (set (reg:DI 395)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:199 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 791 790 792 146 (set (reg:DI 5 di)
        (reg:DI 395)) Topology.cc:199 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 395)
        (nil)))
(call_insn 792 791 793 146 (call (mem:QI (symbol_ref/i:DI ("_ZNSt14_List_iteratorIPN5brite4EdgeEEC1Ev") [flags 0x1]  <function_decl 0x103d5da00 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) Topology.cc:199 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 793 792 794 146 (set (reg/f:DI 396)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1064 [0xfffffffffffffbd8])) [0 this+0 S8 A64])) Topology.cc:200 89 {*movdi_internal}
     (nil))
(insn 794 793 795 146 (set (reg/f:DI 175 [ D.45038 ])
        (mem/f/j:DI (reg/f:DI 396) [0 this_9(D)->g+0 S8 A64])) Topology.cc:200 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 396)
        (nil)))
(insn 795 794 796 146 (parallel [
            (set (reg/f:DI 176 [ D.45050 ])
                (plus:DI (reg/f:DI 175 [ D.45038 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:200 221 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 175 [ D.45038 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 796 795 797 146 (set (reg:DI 5 di)
        (reg/f:DI 176 [ D.45050 ])) Topology.cc:200 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 176 [ D.45050 ])
        (nil)))
(call_insn 797 796 1539 146 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt4listIPN5brite4EdgeESaIS2_EE5beginEv") [flags 0x1]  <function_decl 0x1036f0200 begin>) [0 begin S1 A8])
            (const_int 0 [0]))) Topology.cc:200 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              147 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 147, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 146, next block 148, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       146 (FALLTHRU)
;; bb 147 artificial_defs: { }
;; bb 147 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 397 398
(note 1539 797 798 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
(insn 798 1539 799 147 (set (reg:DI 397)
        (reg:DI 0 ax)) Topology.cc:200 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 799 798 800 147 (set (reg:DI 398)
        (reg:DI 397)) Topology.cc:200 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 397)
        (nil)))
(insn 800 799 1710 147 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -160 [0xffffffffffffff60])) [0 el+0 S8 A64])
        (reg:DI 398)) Topology.cc:200 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 398)
        (nil)))
(jump_insn 1710 800 1711 147 (set (pc)
        (label_ref 1351)) Topology.cc:200 636 {jump}
     (nil)
 -> 1351)
;;  succ:       258 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1711 1710 1368)
;; basic block 148, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 147, next block 149, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       259
;; bb 148 artificial_defs: { }
;; bb 148 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 180 181 399
(code_label 1368 1711 804 148 101 "" [1 uses])
(note 804 1368 805 148 [bb 148] NOTE_INSN_BASIC_BLOCK)
(insn 805 804 806 148 (parallel [
            (set (reg:DI 399)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:205 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 806 805 807 148 (set (reg:DI 5 di)
        (reg:DI 399)) Topology.cc:205 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 399)
        (nil)))
(call_insn 807 806 808 148 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:205 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 808 807 809 148 (set (reg/f:DI 180 [ D.45051 ])
        (reg:DI 0 ax)) Topology.cc:205 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 809 808 810 148 (set (reg/f:DI 181 [ D.45052 ])
        (mem/f:DI (reg/f:DI 180 [ D.45051 ]) [0 *_165+0 S8 A64])) Topology.cc:205 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 180 [ D.45051 ])
        (nil)))
(insn 810 809 811 148 (set (reg:DI 5 di)
        (reg/f:DI 181 [ D.45052 ])) Topology.cc:205 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 181 [ D.45052 ])
        (nil)))
(call_insn 811 810 1540 148 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("_ZN5brite4Edge6LengthEv") [flags 0x41]  <function_decl 0x103612e00 Length>) [0 Length S1 A8])
            (const_int 0 [0]))) Topology.cc:205 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              149 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]

;; basic block 149, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 148, next block 150, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       148 (FALLTHRU)
;; bb 149 artificial_defs: { }
;; bb 149 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 182 183 184 400
(note 1540 811 812 149 [bb 149] NOTE_INSN_BASIC_BLOCK)
(insn 812 1540 814 149 (set (reg:DF 182 [ D.45045 ])
        (reg:DF 21 xmm0)) Topology.cc:205 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 814 812 815 149 (parallel [
            (set (reg:DI 400)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:204 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 815 814 816 149 (set (reg:DI 5 di)
        (reg:DI 400)) Topology.cc:204 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 400)
        (nil)))
(call_insn 816 815 817 149 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:204 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 817 816 818 149 (set (reg/f:DI 183 [ D.45051 ])
        (reg:DI 0 ax)) Topology.cc:204 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 818 817 819 149 (set (reg/f:DI 184 [ D.45052 ])
        (mem/f:DI (reg/f:DI 183 [ D.45051 ]) [0 *_169+0 S8 A64])) Topology.cc:204 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 183 [ D.45051 ])
        (nil)))
(insn 819 818 820 149 (set (reg:DI 5 di)
        (reg/f:DI 184 [ D.45052 ])) Topology.cc:204 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 184 [ D.45052 ])
        (nil)))
(call_insn 820 819 1541 149 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge6GetDstEv") [flags 0x41]  <function_decl 0x103612d00 GetDst>) [0 GetDst S1 A8])
            (const_int 0 [0]))) Topology.cc:204 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              150 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 182

;; basic block 150, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 149, next block 151, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       149 (FALLTHRU)
;; bb 150 artificial_defs: { }
;; bb 150 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 182
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 185
(note 1541 820 821 150 [bb 150] NOTE_INSN_BASIC_BLOCK)
(insn 821 1541 823 150 (set (reg/f:DI 185 [ D.45043 ])
        (reg:DI 0 ax)) Topology.cc:204 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 823 821 824 150 (set (reg:DI 5 di)
        (reg/f:DI 185 [ D.45043 ])) Topology.cc:204 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 185 [ D.45043 ])
        (nil)))
(call_insn 824 823 1542 150 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode5GetIdEv") [flags 0x41]  <function_decl 0x1035e6e00 GetId>) [0 GetId S1 A8])
            (const_int 0 [0]))) Topology.cc:204 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              151 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 182

;; basic block 151, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 150, next block 152, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       150 (FALLTHRU)
;; bb 151 artificial_defs: { }
;; bb 151 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 182
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 186 187 188 401
(note 1542 824 825 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(insn 825 1542 827 151 (set (reg:SI 186 [ D.45039 ])
        (reg:SI 0 ax)) Topology.cc:204 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 827 825 828 151 (parallel [
            (set (reg:DI 401)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:203 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 828 827 829 151 (set (reg:DI 5 di)
        (reg:DI 401)) Topology.cc:203 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 401)
        (nil)))
(call_insn 829 828 830 151 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:203 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 830 829 831 151 (set (reg/f:DI 187 [ D.45051 ])
        (reg:DI 0 ax)) Topology.cc:203 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 831 830 832 151 (set (reg/f:DI 188 [ D.45052 ])
        (mem/f:DI (reg/f:DI 187 [ D.45051 ]) [0 *_175+0 S8 A64])) Topology.cc:203 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 187 [ D.45051 ])
        (nil)))
(insn 832 831 833 151 (set (reg:DI 5 di)
        (reg/f:DI 188 [ D.45052 ])) Topology.cc:203 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 188 [ D.45052 ])
        (nil)))
(call_insn 833 832 1543 151 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge6GetSrcEv") [flags 0x41]  <function_decl 0x103612c00 GetSrc>) [0 GetSrc S1 A8])
            (const_int 0 [0]))) Topology.cc:203 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              152 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 182 186

;; basic block 152, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 151, next block 153, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       151 (FALLTHRU)
;; bb 152 artificial_defs: { }
;; bb 152 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 182 186
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 189
(note 1543 833 834 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
(insn 834 1543 836 152 (set (reg/f:DI 189 [ D.45043 ])
        (reg:DI 0 ax)) Topology.cc:203 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 836 834 837 152 (set (reg:DI 5 di)
        (reg/f:DI 189 [ D.45043 ])) Topology.cc:203 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 189 [ D.45043 ])
        (nil)))
(call_insn 837 836 1544 152 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode5GetIdEv") [flags 0x41]  <function_decl 0x1035e6e00 GetId>) [0 GetId S1 A8])
            (const_int 0 [0]))) Topology.cc:203 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              153 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 182 186

;; basic block 153, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 152, next block 154, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       152 (FALLTHRU)
;; bb 153 artificial_defs: { }
;; bb 153 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 182 186
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 190 191 192 402
(note 1544 837 838 153 [bb 153] NOTE_INSN_BASIC_BLOCK)
(insn 838 1544 840 153 (set (reg:SI 190 [ D.45039 ])
        (reg:SI 0 ax)) Topology.cc:203 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 840 838 841 153 (parallel [
            (set (reg:DI 402)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:202 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 841 840 842 153 (set (reg:DI 5 di)
        (reg:DI 402)) Topology.cc:202 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 402)
        (nil)))
(call_insn 842 841 843 153 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:202 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 843 842 844 153 (set (reg/f:DI 191 [ D.45051 ])
        (reg:DI 0 ax)) Topology.cc:202 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 844 843 845 153 (set (reg/f:DI 192 [ D.45052 ])
        (mem/f:DI (reg/f:DI 191 [ D.45051 ]) [0 *_181+0 S8 A64])) Topology.cc:202 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 191 [ D.45051 ])
        (nil)))
(insn 845 844 846 153 (set (reg:DI 5 di)
        (reg/f:DI 192 [ D.45052 ])) Topology.cc:202 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 192 [ D.45052 ])
        (nil)))
(call_insn 846 845 1545 153 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge5GetIdEv") [flags 0x41]  <function_decl 0x103612600 GetId>) [0 GetId S1 A8])
            (const_int 0 [0]))) Topology.cc:202 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              154 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 182 186 190

;; basic block 154, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 153, next block 155, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       153 (FALLTHRU)
;; bb 154 artificial_defs: { }
;; bb 154 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 182 186 190
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 193 403
(note 1545 846 847 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
(insn 847 1545 849 154 (set (reg:SI 193 [ D.45039 ])
        (reg:SI 0 ax)) Topology.cc:202 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 849 847 850 154 (parallel [
            (set (reg:DI 403)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:202 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 850 849 851 154 (set (reg:SI 4 si)
        (reg:SI 193 [ D.45039 ])) Topology.cc:202 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 193 [ D.45039 ])
        (nil)))
(insn 851 850 852 154 (set (reg:DI 5 di)
        (reg:DI 403)) Topology.cc:202 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 403)
        (nil)))
(call_insn 852 851 1546 154 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x102fb5700 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:202 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              155 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 182 186 190

;; basic block 155, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 154, next block 156, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       154 (FALLTHRU)
;; bb 155 artificial_defs: { }
;; bb 155 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 182 186 190
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 194
(note 1546 852 853 155 [bb 155] NOTE_INSN_BASIC_BLOCK)
(insn 853 1546 855 155 (set (reg/f:DI 194 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:202 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 855 853 856 155 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC13") [flags 0x2]  <var_decl 0x1041aad10 *LC13>)) Topology.cc:202 89 {*movdi_internal}
     (nil))
(insn 856 855 857 155 (set (reg:DI 5 di)
        (reg/f:DI 194 [ D.45040 ])) Topology.cc:202 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 194 [ D.45040 ])
        (nil)))
(call_insn 857 856 1547 155 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:202 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              156 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 182 186 190

;; basic block 156, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 155, next block 157, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       155 (FALLTHRU)
;; bb 156 artificial_defs: { }
;; bb 156 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 182 186 190
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 190
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 195
(note 1547 857 858 156 [bb 156] NOTE_INSN_BASIC_BLOCK)
(insn 858 1547 860 156 (set (reg/f:DI 195 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:202 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 860 858 861 156 (set (reg:SI 4 si)
        (reg:SI 190 [ D.45039 ])) Topology.cc:203 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 190 [ D.45039 ])
        (nil)))
(insn 861 860 862 156 (set (reg:DI 5 di)
        (reg/f:DI 195 [ D.45040 ])) Topology.cc:203 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 195 [ D.45040 ])
        (nil)))
(call_insn 862 861 1548 156 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x102fb5700 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:203 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              157 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 182 186

;; basic block 157, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 156, next block 158, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       156 (FALLTHRU)
;; bb 157 artificial_defs: { }
;; bb 157 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 182 186
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 196
(note 1548 862 863 157 [bb 157] NOTE_INSN_BASIC_BLOCK)
(insn 863 1548 865 157 (set (reg/f:DI 196 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:203 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 865 863 866 157 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC13") [flags 0x2]  <var_decl 0x1041aad10 *LC13>)) Topology.cc:203 89 {*movdi_internal}
     (nil))
(insn 866 865 867 157 (set (reg:DI 5 di)
        (reg/f:DI 196 [ D.45040 ])) Topology.cc:203 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 196 [ D.45040 ])
        (nil)))
(call_insn 867 866 1549 157 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:203 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              158 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 182 186

;; basic block 158, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 157, next block 159, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       157 (FALLTHRU)
;; bb 158 artificial_defs: { }
;; bb 158 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 182 186
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 186
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 197
(note 1549 867 868 158 [bb 158] NOTE_INSN_BASIC_BLOCK)
(insn 868 1549 870 158 (set (reg/f:DI 197 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:203 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 870 868 871 158 (set (reg:SI 4 si)
        (reg:SI 186 [ D.45039 ])) Topology.cc:204 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 186 [ D.45039 ])
        (nil)))
(insn 871 870 872 158 (set (reg:DI 5 di)
        (reg/f:DI 197 [ D.45040 ])) Topology.cc:204 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 197 [ D.45040 ])
        (nil)))
(call_insn 872 871 1550 158 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x102fb5700 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:204 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              159 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 182

;; basic block 159, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 158, next block 160, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       158 (FALLTHRU)
;; bb 159 artificial_defs: { }
;; bb 159 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 182
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 198
(note 1550 872 873 159 [bb 159] NOTE_INSN_BASIC_BLOCK)
(insn 873 1550 875 159 (set (reg/f:DI 198 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:204 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 875 873 876 159 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC13") [flags 0x2]  <var_decl 0x1041aad10 *LC13>)) Topology.cc:204 89 {*movdi_internal}
     (nil))
(insn 876 875 877 159 (set (reg:DI 5 di)
        (reg/f:DI 198 [ D.45040 ])) Topology.cc:204 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 198 [ D.45040 ])
        (nil)))
(call_insn 877 876 1551 159 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:204 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              160 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 182

;; basic block 160, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 159, next block 161, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       159 (FALLTHRU)
;; bb 160 artificial_defs: { }
;; bb 160 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 182
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 182
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 199
(note 1551 877 878 160 [bb 160] NOTE_INSN_BASIC_BLOCK)
(insn 878 1551 880 160 (set (reg/f:DI 199 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:204 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 880 878 881 160 (set (reg:DF 21 xmm0)
        (reg:DF 182 [ D.45045 ])) Topology.cc:205 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 182 [ D.45045 ])
        (nil)))
(insn 881 880 882 160 (set (reg:DI 5 di)
        (reg/f:DI 199 [ D.45040 ])) Topology.cc:205 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 199 [ D.45040 ])
        (nil)))
(call_insn 882 881 1552 160 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEd") [flags 0x41]  <function_decl 0x102fb5b00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:205 649 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              161 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 161, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 160, next block 162, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       160 (FALLTHRU)
;; bb 161 artificial_defs: { }
;; bb 161 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 200
(note 1552 882 883 161 [bb 161] NOTE_INSN_BASIC_BLOCK)
(insn 883 1552 885 161 (set (reg/f:DI 200 [ D.45046 ])
        (reg:DI 0 ax)) Topology.cc:205 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 885 883 886 161 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC13") [flags 0x2]  <var_decl 0x1041aad10 *LC13>)) Topology.cc:205 89 {*movdi_internal}
     (nil))
(insn 886 885 887 161 (set (reg:DI 5 di)
        (reg/f:DI 200 [ D.45046 ])) Topology.cc:205 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 200 [ D.45046 ])
        (nil)))
(call_insn 887 886 888 161 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:205 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              162 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 162, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 161, next block 163, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       161 (FALLTHRU)
;; bb 162 artificial_defs: { }
;; bb 162 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 201 202 404
(note 888 887 889 162 [bb 162] NOTE_INSN_BASIC_BLOCK)
(insn 889 888 890 162 (parallel [
            (set (reg:DI 404)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:207 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 890 889 891 162 (set (reg:DI 5 di)
        (reg:DI 404)) Topology.cc:207 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 404)
        (nil)))
(call_insn 891 890 892 162 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:207 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 892 891 893 162 (set (reg/f:DI 201 [ D.45051 ])
        (reg:DI 0 ax)) Topology.cc:207 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 893 892 894 162 (set (reg/f:DI 202 [ D.45052 ])
        (mem/f:DI (reg/f:DI 201 [ D.45051 ]) [0 *_199+0 S8 A64])) Topology.cc:207 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 201 [ D.45051 ])
        (nil)))
(insn 894 893 895 162 (set (reg:DI 5 di)
        (reg/f:DI 202 [ D.45052 ])) Topology.cc:207 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 202 [ D.45052 ])
        (nil)))
(call_insn 895 894 1553 162 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge7GetConfEv") [flags 0x41]  <function_decl 0x103612500 GetConf>) [0 GetConf S1 A8])
            (const_int 0 [0]))) Topology.cc:207 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              163 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 163, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 162, next block 164, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       162 (FALLTHRU)
;; bb 163 artificial_defs: { }
;; bb 163 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 203
(note 1553 895 896 163 [bb 163] NOTE_INSN_BASIC_BLOCK)
(insn 896 1553 898 163 (set (reg/f:DI 203 [ D.45053 ])
        (reg:DI 0 ax)) Topology.cc:207 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 898 896 899 163 (set (reg:DI 5 di)
        (reg/f:DI 203 [ D.45053 ])) Topology.cc:207 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 203 [ D.45053 ])
        (nil)))
(call_insn 899 898 1554 163 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite8EdgeConf11GetEdgeTypeEv") [flags 0x41]  <function_decl 0x10361c500 GetEdgeType>) [0 GetEdgeType S1 A8])
            (const_int 0 [0]))) Topology.cc:207 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              164 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 164, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 163, next block 165, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       163 (FALLTHRU)
;; bb 164 artificial_defs: { }
;; bb 164 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 204 205
(note 1554 899 900 164 [bb 164] NOTE_INSN_BASIC_BLOCK)
(insn 900 1554 902 164 (set (reg:SI 204 [ D.45054 ])
        (reg:SI 0 ax)) Topology.cc:207 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 902 900 903 164 (set (reg:SI 205 [ D.45039 ])
        (reg:SI 204 [ D.45054 ])) Topology.cc:207 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 204 [ D.45054 ])
        (nil)))
(insn 903 902 904 164 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 205 [ D.45039 ])
            (const_int 0 [0]))) Topology.cc:207 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 904 903 1555 164 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 909)
            (pc))) Topology.cc:207 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 909)
;;  succ:       167
;;              165 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 205

;; basic block 165, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 164, next block 166, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       164 (FALLTHRU)
;; bb 165 artificial_defs: { }
;; bb 165 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 205
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 205
;; lr  def 	 17 [flags]
(note 1555 904 905 165 [bb 165] NOTE_INSN_BASIC_BLOCK)
(insn 905 1555 906 165 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 205 [ D.45039 ])
            (const_int 1 [0x1]))) Topology.cc:207 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 205 [ D.45039 ])
        (nil)))
(jump_insn 906 905 1712 165 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1013)
            (pc))) Topology.cc:207 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 1013)
;;  succ:       186
;;              166 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 166, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 165, next block 167, flags: (NEW, RTL, MODIFIED)
;;  pred:       165 (FALLTHRU)
;; bb 166 artificial_defs: { }
;; bb 166 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1712 906 1714 166 [bb 166] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1714 1712 1715 166 (set (pc)
        (label_ref 1713)) Topology.cc:207 636 {jump}
     (nil)
 -> 1713)
;;  succ:       203 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1715 1714 909)
;; basic block 167, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 166, next block 168, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       164
;; bb 167 artificial_defs: { }
;; bb 167 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 206 207 405
(code_label 909 1715 910 167 78 "" [1 uses])
(note 910 909 911 167 [bb 167] NOTE_INSN_BASIC_BLOCK)
(insn 911 910 912 167 (parallel [
            (set (reg:DI 405)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:212 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 912 911 913 167 (set (reg:DI 5 di)
        (reg:DI 405)) Topology.cc:212 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 405)
        (nil)))
(call_insn 913 912 914 167 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:212 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 914 913 915 167 (set (reg/f:DI 206 [ D.45051 ])
        (reg:DI 0 ax)) Topology.cc:212 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 915 914 916 167 (set (reg/f:DI 207 [ D.45052 ])
        (mem/f:DI (reg/f:DI 206 [ D.45051 ]) [0 *_206+0 S8 A64])) Topology.cc:212 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 206 [ D.45051 ])
        (nil)))
(insn 916 915 917 167 (set (reg:DI 5 di)
        (reg/f:DI 207 [ D.45052 ])) Topology.cc:212 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 207 [ D.45052 ])
        (nil)))
(call_insn 917 916 1557 167 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge6GetDstEv") [flags 0x41]  <function_decl 0x103612d00 GetDst>) [0 GetDst S1 A8])
            (const_int 0 [0]))) Topology.cc:212 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              168 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 168, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 167, next block 169, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       167 (FALLTHRU)
;; bb 168 artificial_defs: { }
;; bb 168 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 208
(note 1557 917 918 168 [bb 168] NOTE_INSN_BASIC_BLOCK)
(insn 918 1557 920 168 (set (reg/f:DI 208 [ D.45043 ])
        (reg:DI 0 ax)) Topology.cc:212 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 920 918 921 168 (set (reg:DI 5 di)
        (reg/f:DI 208 [ D.45043 ])) Topology.cc:212 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 208 [ D.45043 ])
        (nil)))
(call_insn 921 920 1558 168 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:212 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              169 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 169, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 168, next block 170, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       168 (FALLTHRU)
;; bb 169 artificial_defs: { }
;; bb 169 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 209
(note 1558 921 922 169 [bb 169] NOTE_INSN_BASIC_BLOCK)
(insn 922 1558 924 169 (set (reg/f:DI 209 [ D.45044 ])
        (reg:DI 0 ax)) Topology.cc:212 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 924 922 925 169 (set (reg:DI 5 di)
        (reg/f:DI 209 [ D.45044 ])) Topology.cc:212 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 209 [ D.45044 ])
        (nil)))
(call_insn 925 924 1559 169 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite14RouterNodeConf7GetASIdEv") [flags 0x41]  <function_decl 0x103609300 GetASId>) [0 GetASId S1 A8])
            (const_int 0 [0]))) Topology.cc:212 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              170 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 170, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 169, next block 171, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       169 (FALLTHRU)
;; bb 170 artificial_defs: { }
;; bb 170 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 210 211 212 406
(note 1559 925 926 170 [bb 170] NOTE_INSN_BASIC_BLOCK)
(insn 926 1559 928 170 (set (reg:SI 210 [ D.45039 ])
        (reg:SI 0 ax)) Topology.cc:212 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 928 926 929 170 (parallel [
            (set (reg:DI 406)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:211 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 929 928 930 170 (set (reg:DI 5 di)
        (reg:DI 406)) Topology.cc:211 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 406)
        (nil)))
(call_insn 930 929 931 170 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:211 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 931 930 932 170 (set (reg/f:DI 211 [ D.45051 ])
        (reg:DI 0 ax)) Topology.cc:211 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 932 931 933 170 (set (reg/f:DI 212 [ D.45052 ])
        (mem/f:DI (reg/f:DI 211 [ D.45051 ]) [0 *_214+0 S8 A64])) Topology.cc:211 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 211 [ D.45051 ])
        (nil)))
(insn 933 932 934 170 (set (reg:DI 5 di)
        (reg/f:DI 212 [ D.45052 ])) Topology.cc:211 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 212 [ D.45052 ])
        (nil)))
(call_insn 934 933 1560 170 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge6GetSrcEv") [flags 0x41]  <function_decl 0x103612c00 GetSrc>) [0 GetSrc S1 A8])
            (const_int 0 [0]))) Topology.cc:211 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              171 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 210

;; basic block 171, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 170, next block 172, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       170 (FALLTHRU)
;; bb 171 artificial_defs: { }
;; bb 171 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 210
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 213
(note 1560 934 935 171 [bb 171] NOTE_INSN_BASIC_BLOCK)
(insn 935 1560 937 171 (set (reg/f:DI 213 [ D.45043 ])
        (reg:DI 0 ax)) Topology.cc:211 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 937 935 938 171 (set (reg:DI 5 di)
        (reg/f:DI 213 [ D.45043 ])) Topology.cc:211 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 213 [ D.45043 ])
        (nil)))
(call_insn 938 937 1561 171 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:211 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              172 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 210

;; basic block 172, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 171, next block 173, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       171 (FALLTHRU)
;; bb 172 artificial_defs: { }
;; bb 172 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 210
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 214
(note 1561 938 939 172 [bb 172] NOTE_INSN_BASIC_BLOCK)
(insn 939 1561 941 172 (set (reg/f:DI 214 [ D.45044 ])
        (reg:DI 0 ax)) Topology.cc:211 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 941 939 942 172 (set (reg:DI 5 di)
        (reg/f:DI 214 [ D.45044 ])) Topology.cc:211 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 214 [ D.45044 ])
        (nil)))
(call_insn 942 941 1562 172 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite14RouterNodeConf7GetASIdEv") [flags 0x41]  <function_decl 0x103609300 GetASId>) [0 GetASId S1 A8])
            (const_int 0 [0]))) Topology.cc:211 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              173 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 210

;; basic block 173, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 172, next block 174, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       172 (FALLTHRU)
;; bb 173 artificial_defs: { }
;; bb 173 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 210
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 215 216 217 407
(note 1562 942 943 173 [bb 173] NOTE_INSN_BASIC_BLOCK)
(insn 943 1562 945 173 (set (reg:SI 215 [ D.45039 ])
        (reg:SI 0 ax)) Topology.cc:211 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 945 943 946 173 (parallel [
            (set (reg:DI 407)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:210 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 946 945 947 173 (set (reg:DI 5 di)
        (reg:DI 407)) Topology.cc:210 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 407)
        (nil)))
(call_insn 947 946 948 173 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:210 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 948 947 949 173 (set (reg/f:DI 216 [ D.45051 ])
        (reg:DI 0 ax)) Topology.cc:210 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 949 948 950 173 (set (reg/f:DI 217 [ D.45052 ])
        (mem/f:DI (reg/f:DI 216 [ D.45051 ]) [0 *_222+0 S8 A64])) Topology.cc:210 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 216 [ D.45051 ])
        (nil)))
(insn 950 949 951 173 (set (reg:DI 5 di)
        (reg/f:DI 217 [ D.45052 ])) Topology.cc:210 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 217 [ D.45052 ])
        (nil)))
(call_insn 951 950 1563 173 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge7GetConfEv") [flags 0x41]  <function_decl 0x103612500 GetConf>) [0 GetConf S1 A8])
            (const_int 0 [0]))) Topology.cc:210 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              174 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 210 215

;; basic block 174, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 173, next block 175, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       173 (FALLTHRU)
;; bb 174 artificial_defs: { }
;; bb 174 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 210 215
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 218
(note 1563 951 952 174 [bb 174] NOTE_INSN_BASIC_BLOCK)
(insn 952 1563 954 174 (set (reg/f:DI 218 [ D.45053 ])
        (reg:DI 0 ax)) Topology.cc:210 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 954 952 955 174 (set (reg:DI 5 di)
        (reg/f:DI 218 [ D.45053 ])) Topology.cc:210 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 218 [ D.45053 ])
        (nil)))
(call_insn 955 954 1564 174 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite8EdgeConf5GetBWEv") [flags 0x41]  <function_decl 0x10361c700 GetBW>) [0 GetBW S1 A8])
            (const_int 0 [0]))) Topology.cc:210 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              175 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 210 215

;; basic block 175, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 174, next block 176, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       174 (FALLTHRU)
;; bb 175 artificial_defs: { }
;; bb 175 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 210 215
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 219 220 221 408
(note 1564 955 956 175 [bb 175] NOTE_INSN_BASIC_BLOCK)
(insn 956 1564 958 175 (set (reg:DF 219 [ D.45045 ])
        (reg:DF 21 xmm0)) Topology.cc:210 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 958 956 959 175 (parallel [
            (set (reg:DI 408)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:209 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 959 958 960 175 (set (reg:DI 5 di)
        (reg:DI 408)) Topology.cc:209 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 408)
        (nil)))
(call_insn 960 959 961 175 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:209 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 961 960 962 175 (set (reg/f:DI 220 [ D.45051 ])
        (reg:DI 0 ax)) Topology.cc:209 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 962 961 963 175 (set (reg/f:DI 221 [ D.45052 ])
        (mem/f:DI (reg/f:DI 220 [ D.45051 ]) [0 *_228+0 S8 A64])) Topology.cc:209 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 220 [ D.45051 ])
        (nil)))
(insn 963 962 964 175 (set (reg:DI 5 di)
        (reg/f:DI 221 [ D.45052 ])) Topology.cc:209 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 221 [ D.45052 ])
        (nil)))
(call_insn 964 963 1565 175 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge7GetConfEv") [flags 0x41]  <function_decl 0x103612500 GetConf>) [0 GetConf S1 A8])
            (const_int 0 [0]))) Topology.cc:209 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              176 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 210 215 219

;; basic block 176, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 175, next block 177, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       175 (FALLTHRU)
;; bb 176 artificial_defs: { }
;; bb 176 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 210 215 219
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 222
(note 1565 964 965 176 [bb 176] NOTE_INSN_BASIC_BLOCK)
(insn 965 1565 967 176 (set (reg/f:DI 222 [ D.45053 ])
        (reg:DI 0 ax)) Topology.cc:209 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 967 965 968 176 (set (reg:DI 5 di)
        (reg/f:DI 222 [ D.45053 ])) Topology.cc:209 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 222 [ D.45053 ])
        (nil)))
(call_insn 968 967 1566 176 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite14RouterEdgeConf8GetDelayEv") [flags 0x41]  <function_decl 0x10362b600 GetDelay>) [0 GetDelay S1 A8])
            (const_int 0 [0]))) Topology.cc:209 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              177 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 210 215 219

;; basic block 177, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 176, next block 178, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       176 (FALLTHRU)
;; bb 177 artificial_defs: { }
;; bb 177 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 210 215 219
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 223 409
(note 1566 968 969 177 [bb 177] NOTE_INSN_BASIC_BLOCK)
(insn 969 1566 971 177 (set (reg:DF 223 [ D.45045 ])
        (reg:DF 21 xmm0)) Topology.cc:209 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 971 969 972 177 (parallel [
            (set (reg:DI 409)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:209 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 972 971 973 177 (set (reg:DF 21 xmm0)
        (reg:DF 223 [ D.45045 ])) Topology.cc:209 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 223 [ D.45045 ])
        (nil)))
(insn 973 972 974 177 (set (reg:DI 5 di)
        (reg:DI 409)) Topology.cc:209 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 409)
        (nil)))
(call_insn 974 973 1567 177 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEd") [flags 0x41]  <function_decl 0x102fb5b00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:209 649 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              178 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 210 215 219

;; basic block 178, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 177, next block 179, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       177 (FALLTHRU)
;; bb 178 artificial_defs: { }
;; bb 178 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 210 215 219
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 224
(note 1567 974 975 178 [bb 178] NOTE_INSN_BASIC_BLOCK)
(insn 975 1567 977 178 (set (reg/f:DI 224 [ D.45046 ])
        (reg:DI 0 ax)) Topology.cc:209 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 977 975 978 178 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC13") [flags 0x2]  <var_decl 0x1041aad10 *LC13>)) Topology.cc:209 89 {*movdi_internal}
     (nil))
(insn 978 977 979 178 (set (reg:DI 5 di)
        (reg/f:DI 224 [ D.45046 ])) Topology.cc:209 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 224 [ D.45046 ])
        (nil)))
(call_insn 979 978 1568 178 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:209 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              179 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 210 215 219

;; basic block 179, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 178, next block 180, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       178 (FALLTHRU)
;; bb 179 artificial_defs: { }
;; bb 179 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 210 215 219
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 219
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 225
(note 1568 979 980 179 [bb 179] NOTE_INSN_BASIC_BLOCK)
(insn 980 1568 982 179 (set (reg/f:DI 225 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:209 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 982 980 983 179 (set (reg:DF 21 xmm0)
        (reg:DF 219 [ D.45045 ])) Topology.cc:210 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 219 [ D.45045 ])
        (nil)))
(insn 983 982 984 179 (set (reg:DI 5 di)
        (reg/f:DI 225 [ D.45040 ])) Topology.cc:210 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 225 [ D.45040 ])
        (nil)))
(call_insn 984 983 1569 179 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEd") [flags 0x41]  <function_decl 0x102fb5b00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:210 649 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              180 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 210 215

;; basic block 180, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 179, next block 181, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       179 (FALLTHRU)
;; bb 180 artificial_defs: { }
;; bb 180 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 210 215
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 226
(note 1569 984 985 180 [bb 180] NOTE_INSN_BASIC_BLOCK)
(insn 985 1569 987 180 (set (reg/f:DI 226 [ D.45046 ])
        (reg:DI 0 ax)) Topology.cc:210 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 987 985 988 180 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC13") [flags 0x2]  <var_decl 0x1041aad10 *LC13>)) Topology.cc:210 89 {*movdi_internal}
     (nil))
(insn 988 987 989 180 (set (reg:DI 5 di)
        (reg/f:DI 226 [ D.45046 ])) Topology.cc:210 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 226 [ D.45046 ])
        (nil)))
(call_insn 989 988 1570 180 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:210 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              181 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 210 215

;; basic block 181, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 180, next block 182, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       180 (FALLTHRU)
;; bb 181 artificial_defs: { }
;; bb 181 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 210 215
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 215
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 227
(note 1570 989 990 181 [bb 181] NOTE_INSN_BASIC_BLOCK)
(insn 990 1570 992 181 (set (reg/f:DI 227 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:210 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 992 990 993 181 (set (reg:SI 4 si)
        (reg:SI 215 [ D.45039 ])) Topology.cc:211 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 215 [ D.45039 ])
        (nil)))
(insn 993 992 994 181 (set (reg:DI 5 di)
        (reg/f:DI 227 [ D.45040 ])) Topology.cc:211 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 227 [ D.45040 ])
        (nil)))
(call_insn 994 993 1571 181 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x102fb5700 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:211 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              182 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 210

;; basic block 182, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 181, next block 183, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       181 (FALLTHRU)
;; bb 182 artificial_defs: { }
;; bb 182 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 210
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 228
(note 1571 994 995 182 [bb 182] NOTE_INSN_BASIC_BLOCK)
(insn 995 1571 997 182 (set (reg/f:DI 228 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:211 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 997 995 998 182 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC13") [flags 0x2]  <var_decl 0x1041aad10 *LC13>)) Topology.cc:211 89 {*movdi_internal}
     (nil))
(insn 998 997 999 182 (set (reg:DI 5 di)
        (reg/f:DI 228 [ D.45040 ])) Topology.cc:211 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 228 [ D.45040 ])
        (nil)))
(call_insn 999 998 1572 182 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:211 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              183 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 210

;; basic block 183, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 182, next block 184, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       182 (FALLTHRU)
;; bb 183 artificial_defs: { }
;; bb 183 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 210
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 210
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 229
(note 1572 999 1000 183 [bb 183] NOTE_INSN_BASIC_BLOCK)
(insn 1000 1572 1002 183 (set (reg/f:DI 229 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:211 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1002 1000 1003 183 (set (reg:SI 4 si)
        (reg:SI 210 [ D.45039 ])) Topology.cc:212 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 210 [ D.45039 ])
        (nil)))
(insn 1003 1002 1004 183 (set (reg:DI 5 di)
        (reg/f:DI 229 [ D.45040 ])) Topology.cc:212 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 229 [ D.45040 ])
        (nil)))
(call_insn 1004 1003 1573 183 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x102fb5700 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:212 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              184 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 184, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 183, next block 185, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       183 (FALLTHRU)
;; bb 184 artificial_defs: { }
;; bb 184 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 230
(note 1573 1004 1005 184 [bb 184] NOTE_INSN_BASIC_BLOCK)
(insn 1005 1573 1007 184 (set (reg/f:DI 230 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:212 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1007 1005 1008 184 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC13") [flags 0x2]  <var_decl 0x1041aad10 *LC13>)) Topology.cc:212 89 {*movdi_internal}
     (nil))
(insn 1008 1007 1009 184 (set (reg:DI 5 di)
        (reg/f:DI 230 [ D.45040 ])) Topology.cc:212 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 230 [ D.45040 ])
        (nil)))
(call_insn 1009 1008 1716 184 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:212 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              185 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 185, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 184, next block 186, flags: (NEW, RTL, MODIFIED)
;;  pred:       184 (FALLTHRU)
;; bb 185 artificial_defs: { }
;; bb 185 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1716 1009 1717 185 [bb 185] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1717 1716 1718 185 (set (pc)
        (label_ref 1114)) Topology.cc:213 636 {jump}
     (nil)
 -> 1114)
;;  succ:       205 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1718 1717 1013)
;; basic block 186, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 185, next block 187, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       165
;; bb 186 artificial_defs: { }
;; bb 186 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 231 232 410
(code_label 1013 1718 1014 186 79 "" [1 uses])
(note 1014 1013 1015 186 [bb 186] NOTE_INSN_BASIC_BLOCK)
(insn 1015 1014 1016 186 (parallel [
            (set (reg:DI 410)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:219 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1016 1015 1017 186 (set (reg:DI 5 di)
        (reg:DI 410)) Topology.cc:219 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 410)
        (nil)))
(call_insn 1017 1016 1018 186 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:219 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1018 1017 1019 186 (set (reg/f:DI 231 [ D.45051 ])
        (reg:DI 0 ax)) Topology.cc:219 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1019 1018 1020 186 (set (reg/f:DI 232 [ D.45052 ])
        (mem/f:DI (reg/f:DI 231 [ D.45051 ]) [0 *_248+0 S8 A64])) Topology.cc:219 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 231 [ D.45051 ])
        (nil)))
(insn 1020 1019 1021 186 (set (reg:DI 5 di)
        (reg/f:DI 232 [ D.45052 ])) Topology.cc:219 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 232 [ D.45052 ])
        (nil)))
(call_insn 1021 1020 1574 186 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge6GetDstEv") [flags 0x41]  <function_decl 0x103612d00 GetDst>) [0 GetDst S1 A8])
            (const_int 0 [0]))) Topology.cc:219 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              187 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 187, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 186, next block 188, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       186 (FALLTHRU)
;; bb 187 artificial_defs: { }
;; bb 187 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 233
(note 1574 1021 1022 187 [bb 187] NOTE_INSN_BASIC_BLOCK)
(insn 1022 1574 1024 187 (set (reg/f:DI 233 [ D.45043 ])
        (reg:DI 0 ax)) Topology.cc:219 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1024 1022 1025 187 (set (reg:DI 5 di)
        (reg/f:DI 233 [ D.45043 ])) Topology.cc:219 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 233 [ D.45043 ])
        (nil)))
(call_insn 1025 1024 1575 187 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:219 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              188 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 188, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 187, next block 189, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       187 (FALLTHRU)
;; bb 188 artificial_defs: { }
;; bb 188 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 234
(note 1575 1025 1026 188 [bb 188] NOTE_INSN_BASIC_BLOCK)
(insn 1026 1575 1028 188 (set (reg/f:DI 234 [ D.45044 ])
        (reg:DI 0 ax)) Topology.cc:219 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1028 1026 1029 188 (set (reg:DI 5 di)
        (reg/f:DI 234 [ D.45044 ])) Topology.cc:219 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 234 [ D.45044 ])
        (nil)))
(call_insn 1029 1028 1576 188 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite10ASNodeConf7GetASIdEv") [flags 0x41]  <function_decl 0x103609d00 GetASId>) [0 GetASId S1 A8])
            (const_int 0 [0]))) Topology.cc:219 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              189 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 189, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 188, next block 190, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       188 (FALLTHRU)
;; bb 189 artificial_defs: { }
;; bb 189 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 235 236 237 411
(note 1576 1029 1030 189 [bb 189] NOTE_INSN_BASIC_BLOCK)
(insn 1030 1576 1032 189 (set (reg:SI 235 [ D.45039 ])
        (reg:SI 0 ax)) Topology.cc:219 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 1032 1030 1033 189 (parallel [
            (set (reg:DI 411)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:218 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1033 1032 1034 189 (set (reg:DI 5 di)
        (reg:DI 411)) Topology.cc:218 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 411)
        (nil)))
(call_insn 1034 1033 1035 189 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:218 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1035 1034 1036 189 (set (reg/f:DI 236 [ D.45051 ])
        (reg:DI 0 ax)) Topology.cc:218 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1036 1035 1037 189 (set (reg/f:DI 237 [ D.45052 ])
        (mem/f:DI (reg/f:DI 236 [ D.45051 ]) [0 *_256+0 S8 A64])) Topology.cc:218 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 236 [ D.45051 ])
        (nil)))
(insn 1037 1036 1038 189 (set (reg:DI 5 di)
        (reg/f:DI 237 [ D.45052 ])) Topology.cc:218 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 237 [ D.45052 ])
        (nil)))
(call_insn 1038 1037 1577 189 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge6GetSrcEv") [flags 0x41]  <function_decl 0x103612c00 GetSrc>) [0 GetSrc S1 A8])
            (const_int 0 [0]))) Topology.cc:218 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              190 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 235

;; basic block 190, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 189, next block 191, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       189 (FALLTHRU)
;; bb 190 artificial_defs: { }
;; bb 190 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 235
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 238
(note 1577 1038 1039 190 [bb 190] NOTE_INSN_BASIC_BLOCK)
(insn 1039 1577 1041 190 (set (reg/f:DI 238 [ D.45043 ])
        (reg:DI 0 ax)) Topology.cc:218 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1041 1039 1042 190 (set (reg:DI 5 di)
        (reg/f:DI 238 [ D.45043 ])) Topology.cc:218 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 238 [ D.45043 ])
        (nil)))
(call_insn 1042 1041 1578 190 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:218 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              191 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 235

;; basic block 191, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 190, next block 192, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       190 (FALLTHRU)
;; bb 191 artificial_defs: { }
;; bb 191 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 235
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 239
(note 1578 1042 1043 191 [bb 191] NOTE_INSN_BASIC_BLOCK)
(insn 1043 1578 1045 191 (set (reg/f:DI 239 [ D.45044 ])
        (reg:DI 0 ax)) Topology.cc:218 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1045 1043 1046 191 (set (reg:DI 5 di)
        (reg/f:DI 239 [ D.45044 ])) Topology.cc:218 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 239 [ D.45044 ])
        (nil)))
(call_insn 1046 1045 1579 191 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite10ASNodeConf7GetASIdEv") [flags 0x41]  <function_decl 0x103609d00 GetASId>) [0 GetASId S1 A8])
            (const_int 0 [0]))) Topology.cc:218 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              192 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 235

;; basic block 192, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 191, next block 193, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       191 (FALLTHRU)
;; bb 192 artificial_defs: { }
;; bb 192 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 235
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 240 241 242 412
(note 1579 1046 1047 192 [bb 192] NOTE_INSN_BASIC_BLOCK)
(insn 1047 1579 1049 192 (set (reg:SI 240 [ D.45039 ])
        (reg:SI 0 ax)) Topology.cc:218 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 1049 1047 1050 192 (parallel [
            (set (reg:DI 412)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:217 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1050 1049 1051 192 (set (reg:DI 5 di)
        (reg:DI 412)) Topology.cc:217 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 412)
        (nil)))
(call_insn 1051 1050 1052 192 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:217 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1052 1051 1053 192 (set (reg/f:DI 241 [ D.45051 ])
        (reg:DI 0 ax)) Topology.cc:217 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1053 1052 1054 192 (set (reg/f:DI 242 [ D.45052 ])
        (mem/f:DI (reg/f:DI 241 [ D.45051 ]) [0 *_264+0 S8 A64])) Topology.cc:217 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 241 [ D.45051 ])
        (nil)))
(insn 1054 1053 1055 192 (set (reg:DI 5 di)
        (reg/f:DI 242 [ D.45052 ])) Topology.cc:217 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 242 [ D.45052 ])
        (nil)))
(call_insn 1055 1054 1580 192 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge7GetConfEv") [flags 0x41]  <function_decl 0x103612500 GetConf>) [0 GetConf S1 A8])
            (const_int 0 [0]))) Topology.cc:217 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              193 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 235 240

;; basic block 193, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 192, next block 194, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       192 (FALLTHRU)
;; bb 193 artificial_defs: { }
;; bb 193 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 235 240
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 243
(note 1580 1055 1056 193 [bb 193] NOTE_INSN_BASIC_BLOCK)
(insn 1056 1580 1058 193 (set (reg/f:DI 243 [ D.45053 ])
        (reg:DI 0 ax)) Topology.cc:217 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1058 1056 1059 193 (set (reg:DI 5 di)
        (reg/f:DI 243 [ D.45053 ])) Topology.cc:217 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 243 [ D.45053 ])
        (nil)))
(call_insn 1059 1058 1581 193 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite8EdgeConf5GetBWEv") [flags 0x41]  <function_decl 0x10361c700 GetBW>) [0 GetBW S1 A8])
            (const_int 0 [0]))) Topology.cc:217 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              194 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 235 240

;; basic block 194, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 193, next block 195, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       193 (FALLTHRU)
;; bb 194 artificial_defs: { }
;; bb 194 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 235 240
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 244 413
(note 1581 1059 1060 194 [bb 194] NOTE_INSN_BASIC_BLOCK)
(insn 1060 1581 1062 194 (set (reg:DF 244 [ D.45045 ])
        (reg:DF 21 xmm0)) Topology.cc:217 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 1062 1060 1063 194 (parallel [
            (set (reg:DI 413)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:216 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1063 1062 1064 194 (set (reg:SI 4 si)
        (const_int -1 [0xffffffffffffffff])) Topology.cc:216 90 {*movsi_internal}
     (nil))
(insn 1064 1063 1065 194 (set (reg:DI 5 di)
        (reg:DI 413)) Topology.cc:216 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 413)
        (nil)))
(call_insn 1065 1064 1582 194 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x102fb5700 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:216 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              195 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 235 240 244

;; basic block 195, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 194, next block 196, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       194 (FALLTHRU)
;; bb 195 artificial_defs: { }
;; bb 195 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 235 240 244
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 245
(note 1582 1065 1066 195 [bb 195] NOTE_INSN_BASIC_BLOCK)
(insn 1066 1582 1068 195 (set (reg/f:DI 245 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:216 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1068 1066 1069 195 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC13") [flags 0x2]  <var_decl 0x1041aad10 *LC13>)) Topology.cc:216 89 {*movdi_internal}
     (nil))
(insn 1069 1068 1070 195 (set (reg:DI 5 di)
        (reg/f:DI 245 [ D.45040 ])) Topology.cc:216 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 245 [ D.45040 ])
        (nil)))
(call_insn 1070 1069 1583 195 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:216 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              196 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 235 240 244

;; basic block 196, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 195, next block 197, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       195 (FALLTHRU)
;; bb 196 artificial_defs: { }
;; bb 196 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 235 240 244
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 244
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 246
(note 1583 1070 1071 196 [bb 196] NOTE_INSN_BASIC_BLOCK)
(insn 1071 1583 1073 196 (set (reg/f:DI 246 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:216 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1073 1071 1074 196 (set (reg:DF 21 xmm0)
        (reg:DF 244 [ D.45045 ])) Topology.cc:217 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 244 [ D.45045 ])
        (nil)))
(insn 1074 1073 1075 196 (set (reg:DI 5 di)
        (reg/f:DI 246 [ D.45040 ])) Topology.cc:217 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 246 [ D.45040 ])
        (nil)))
(call_insn 1075 1074 1584 196 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEd") [flags 0x41]  <function_decl 0x102fb5b00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:217 649 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              197 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 235 240

;; basic block 197, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 196, next block 198, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       196 (FALLTHRU)
;; bb 197 artificial_defs: { }
;; bb 197 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 235 240
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 247
(note 1584 1075 1076 197 [bb 197] NOTE_INSN_BASIC_BLOCK)
(insn 1076 1584 1078 197 (set (reg/f:DI 247 [ D.45046 ])
        (reg:DI 0 ax)) Topology.cc:217 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1078 1076 1079 197 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC13") [flags 0x2]  <var_decl 0x1041aad10 *LC13>)) Topology.cc:217 89 {*movdi_internal}
     (nil))
(insn 1079 1078 1080 197 (set (reg:DI 5 di)
        (reg/f:DI 247 [ D.45046 ])) Topology.cc:217 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 247 [ D.45046 ])
        (nil)))
(call_insn 1080 1079 1585 197 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:217 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              198 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 235 240

;; basic block 198, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 197, next block 199, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       197 (FALLTHRU)
;; bb 198 artificial_defs: { }
;; bb 198 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 235 240
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 240
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 248
(note 1585 1080 1081 198 [bb 198] NOTE_INSN_BASIC_BLOCK)
(insn 1081 1585 1083 198 (set (reg/f:DI 248 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:217 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1083 1081 1084 198 (set (reg:SI 4 si)
        (reg:SI 240 [ D.45039 ])) Topology.cc:218 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 240 [ D.45039 ])
        (nil)))
(insn 1084 1083 1085 198 (set (reg:DI 5 di)
        (reg/f:DI 248 [ D.45040 ])) Topology.cc:218 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 248 [ D.45040 ])
        (nil)))
(call_insn 1085 1084 1586 198 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x102fb5700 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:218 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              199 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 235

;; basic block 199, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 198, next block 200, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       198 (FALLTHRU)
;; bb 199 artificial_defs: { }
;; bb 199 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 235
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 249
(note 1586 1085 1086 199 [bb 199] NOTE_INSN_BASIC_BLOCK)
(insn 1086 1586 1088 199 (set (reg/f:DI 249 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:218 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1088 1086 1089 199 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC13") [flags 0x2]  <var_decl 0x1041aad10 *LC13>)) Topology.cc:218 89 {*movdi_internal}
     (nil))
(insn 1089 1088 1090 199 (set (reg:DI 5 di)
        (reg/f:DI 249 [ D.45040 ])) Topology.cc:218 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 249 [ D.45040 ])
        (nil)))
(call_insn 1090 1089 1587 199 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:218 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              200 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 235

;; basic block 200, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 199, next block 201, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       199 (FALLTHRU)
;; bb 200 artificial_defs: { }
;; bb 200 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 235
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 235
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 250
(note 1587 1090 1091 200 [bb 200] NOTE_INSN_BASIC_BLOCK)
(insn 1091 1587 1093 200 (set (reg/f:DI 250 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:218 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1093 1091 1094 200 (set (reg:SI 4 si)
        (reg:SI 235 [ D.45039 ])) Topology.cc:219 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 235 [ D.45039 ])
        (nil)))
(insn 1094 1093 1095 200 (set (reg:DI 5 di)
        (reg/f:DI 250 [ D.45040 ])) Topology.cc:219 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 250 [ D.45040 ])
        (nil)))
(call_insn 1095 1094 1588 200 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x102fb5700 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:219 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              201 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 201, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 200, next block 202, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       200 (FALLTHRU)
;; bb 201 artificial_defs: { }
;; bb 201 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 251
(note 1588 1095 1096 201 [bb 201] NOTE_INSN_BASIC_BLOCK)
(insn 1096 1588 1098 201 (set (reg/f:DI 251 [ D.45040 ])
        (reg:DI 0 ax)) Topology.cc:219 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1098 1096 1099 201 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC13") [flags 0x2]  <var_decl 0x1041aad10 *LC13>)) Topology.cc:219 89 {*movdi_internal}
     (nil))
(insn 1099 1098 1100 201 (set (reg:DI 5 di)
        (reg/f:DI 251 [ D.45040 ])) Topology.cc:219 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 251 [ D.45040 ])
        (nil)))
(call_insn 1100 1099 1719 201 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:219 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              202 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 202, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 201, next block 203, flags: (NEW, RTL, MODIFIED)
;;  pred:       201 (FALLTHRU)
;; bb 202 artificial_defs: { }
;; bb 202 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1719 1100 1720 202 [bb 202] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1720 1719 1721 202 (set (pc)
        (label_ref 1114)) Topology.cc:220 636 {jump}
     (nil)
 -> 1114)
;;  succ:       205 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1721 1720 1713)
;; basic block 203, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 202, next block 204, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       166 [100.0%] 
;; bb 203 artificial_defs: { }
;; bb 203 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 414
(code_label 1713 1721 1105 203 122 "" [1 uses])
(note 1105 1713 1106 203 [bb 203] NOTE_INSN_BASIC_BLOCK)
(insn 1106 1105 1107 203 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC29") [flags 0x2]  <var_decl 0x1041c9720 *LC29>)) Topology.cc:223 89 {*movdi_internal}
     (nil))
(insn 1107 1106 1108 203 (set (reg:DI 414)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cerr") [flags 0x1040]  <var_decl 0x1031027b8 cerr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) Topology.cc:223 89 {*movdi_internal}
     (nil))
(insn 1108 1107 1109 203 (set (reg:DI 5 di)
        (reg:DI 414)) Topology.cc:223 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 414)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cerr") [flags 0x1040]  <var_decl 0x1031027b8 cerr>)
            (nil))))
(call_insn 1109 1108 1110 203 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:223 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              204 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 204, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 203, next block 205, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       203 (FALLTHRU)
;; bb 204 artificial_defs: { }
;; bb 204 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 1110 1109 1111 204 [bb 204] NOTE_INSN_BASIC_BLOCK)
(insn 1111 1110 1112 204 (set (reg:SI 5 di)
        (const_int 0 [0])) Topology.cc:224 90 {*movsi_internal}
     (nil))
(call_insn 1112 1111 1113 204 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x1430e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) Topology.cc:224 642 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 1113 1112 1114)
;; basic block 205, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 204, next block 206, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       185 [100.0%] 
;;              202 [100.0%] 
;; bb 205 artificial_defs: { }
;; bb 205 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 252 253 415
(code_label 1114 1113 1115 205 80 "" [2 uses])
(note 1115 1114 1116 205 [bb 205] NOTE_INSN_BASIC_BLOCK)
(insn 1116 1115 1117 205 (parallel [
            (set (reg:DI 415)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:227 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1117 1116 1118 205 (set (reg:DI 5 di)
        (reg:DI 415)) Topology.cc:227 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 415)
        (nil)))
(call_insn 1118 1117 1119 205 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:227 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1119 1118 1120 205 (set (reg/f:DI 252 [ D.45051 ])
        (reg:DI 0 ax)) Topology.cc:227 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1120 1119 1121 205 (set (reg/f:DI 253 [ D.45052 ])
        (mem/f:DI (reg/f:DI 252 [ D.45051 ]) [0 *_284+0 S8 A64])) Topology.cc:227 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 252 [ D.45051 ])
        (nil)))
(insn 1121 1120 1122 205 (set (reg:DI 5 di)
        (reg/f:DI 253 [ D.45052 ])) Topology.cc:227 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 253 [ D.45052 ])
        (nil)))
(call_insn 1122 1121 1589 205 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge7GetConfEv") [flags 0x41]  <function_decl 0x103612500 GetConf>) [0 GetConf S1 A8])
            (const_int 0 [0]))) Topology.cc:227 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              206 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 206, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 205, next block 207, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       205 (FALLTHRU)
;; bb 206 artificial_defs: { }
;; bb 206 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 254
(note 1589 1122 1123 206 [bb 206] NOTE_INSN_BASIC_BLOCK)
(insn 1123 1589 1125 206 (set (reg/f:DI 254 [ D.45053 ])
        (reg:DI 0 ax)) Topology.cc:227 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1125 1123 1126 206 (set (reg:DI 5 di)
        (reg/f:DI 254 [ D.45053 ])) Topology.cc:227 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 254 [ D.45053 ])
        (nil)))
(call_insn 1126 1125 1590 206 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite8EdgeConf11GetEdgeTypeEv") [flags 0x41]  <function_decl 0x10361c500 GetEdgeType>) [0 GetEdgeType S1 A8])
            (const_int 0 [0]))) Topology.cc:227 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              207 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 207, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 206, next block 208, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       206 (FALLTHRU)
;; bb 207 artificial_defs: { }
;; bb 207 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 255 256
(note 1590 1126 1127 207 [bb 207] NOTE_INSN_BASIC_BLOCK)
(insn 1127 1590 1129 207 (set (reg:SI 255 [ D.45054 ])
        (reg:SI 0 ax)) Topology.cc:227 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 1129 1127 1130 207 (set (reg:SI 256 [ D.45039 ])
        (reg:SI 255 [ D.45054 ])) Topology.cc:227 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 255 [ D.45054 ])
        (nil)))
(insn 1130 1129 1131 207 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 256 [ D.45039 ])
            (const_int 0 [0]))) Topology.cc:227 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1131 1130 1591 207 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1136)
            (pc))) Topology.cc:227 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 1136)
;;  succ:       210
;;              208 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 256

;; basic block 208, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 207, next block 209, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       207 (FALLTHRU)
;; bb 208 artificial_defs: { }
;; bb 208 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 256
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 256
;; lr  def 	 17 [flags]
(note 1591 1131 1132 208 [bb 208] NOTE_INSN_BASIC_BLOCK)
(insn 1132 1591 1133 208 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 256 [ D.45039 ])
            (const_int 1 [0x1]))) Topology.cc:227 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 256 [ D.45039 ])
        (nil)))
(jump_insn 1133 1132 1722 208 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1220)
            (pc))) Topology.cc:227 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 1220)
;;  succ:       230
;;              209 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 209, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 208, next block 210, flags: (NEW, RTL, MODIFIED)
;;  pred:       208 (FALLTHRU)
;; bb 209 artificial_defs: { }
;; bb 209 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1722 1133 1724 209 [bb 209] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1724 1722 1725 209 (set (pc)
        (label_ref 1723)) Topology.cc:227 636 {jump}
     (nil)
 -> 1723)
;;  succ:       250 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1725 1724 1136)
;; basic block 210, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 209, next block 211, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       207
;; bb 210 artificial_defs: { }
;; bb 210 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 257 258 416
(code_label 1136 1725 1137 210 82 "" [1 uses])
(note 1137 1136 1138 210 [bb 210] NOTE_INSN_BASIC_BLOCK)
(insn 1138 1137 1139 210 (parallel [
            (set (reg:DI 416)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:229 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1139 1138 1140 210 (set (reg:DI 5 di)
        (reg:DI 416)) Topology.cc:229 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 416)
        (nil)))
(call_insn 1140 1139 1141 210 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:229 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1141 1140 1142 210 (set (reg/f:DI 257 [ D.45051 ])
        (reg:DI 0 ax)) Topology.cc:229 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1142 1141 1143 210 (set (reg/f:DI 258 [ D.45052 ])
        (mem/f:DI (reg/f:DI 257 [ D.45051 ]) [0 *_291+0 S8 A64])) Topology.cc:229 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 257 [ D.45051 ])
        (nil)))
(insn 1143 1142 1144 210 (set (reg:DI 5 di)
        (reg/f:DI 258 [ D.45052 ])) Topology.cc:229 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 258 [ D.45052 ])
        (nil)))
(call_insn 1144 1143 1593 210 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge7GetConfEv") [flags 0x41]  <function_decl 0x103612500 GetConf>) [0 GetConf S1 A8])
            (const_int 0 [0]))) Topology.cc:229 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              211 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 211, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 210, next block 212, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       210 (FALLTHRU)
;; bb 211 artificial_defs: { }
;; bb 211 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 259
(note 1593 1144 1145 211 [bb 211] NOTE_INSN_BASIC_BLOCK)
(insn 1145 1593 1147 211 (set (reg/f:DI 259 [ D.45053 ])
        (reg:DI 0 ax)) Topology.cc:229 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1147 1145 1148 211 (set (reg:DI 5 di)
        (reg/f:DI 259 [ D.45053 ])) Topology.cc:229 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 259 [ D.45053 ])
        (nil)))
(call_insn 1148 1147 1594 211 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite14RouterEdgeConf17GetRouterEdgeTypeEv") [flags 0x41]  <function_decl 0x10362b700 GetRouterEdgeType>) [0 GetRouterEdgeType S1 A8])
            (const_int 0 [0]))) Topology.cc:229 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              212 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 212, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 211, next block 213, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       211 (FALLTHRU)
;; bb 212 artificial_defs: { }
;; bb 212 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 260 261
(note 1594 1148 1149 212 [bb 212] NOTE_INSN_BASIC_BLOCK)
(insn 1149 1594 1151 212 (set (reg:SI 260 [ D.45055 ])
        (reg:SI 0 ax)) Topology.cc:229 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 1151 1149 1152 212 (set (reg:SI 261 [ D.45039 ])
        (reg:SI 260 [ D.45055 ])) Topology.cc:229 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 260 [ D.45055 ])
        (nil)))
(insn 1152 1151 1153 212 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 261 [ D.45039 ])
            (const_int 2 [0x2]))) Topology.cc:229 7 {*cmpsi_1}
     (nil))
(jump_insn 1153 1152 1595 212 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1176)
            (pc))) Topology.cc:229 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 1176)
;;  succ:       221
;;              213 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 261

;; basic block 213, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 212, next block 214, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       212 (FALLTHRU)
;; bb 213 artificial_defs: { }
;; bb 213 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 261
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 261
;; lr  def 	 17 [flags]
(note 1595 1153 1154 213 [bb 213] NOTE_INSN_BASIC_BLOCK)
(insn 1154 1595 1155 213 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 261 [ D.45039 ])
            (const_int 2 [0x2]))) Topology.cc:229 7 {*cmpsi_1}
     (nil))
(jump_insn 1155 1154 1596 213 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1160)
            (pc))) Topology.cc:229 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 1160)
;;  succ:       216
;;              214 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 261

;; basic block 214, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 213, next block 215, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       213 (FALLTHRU)
;; bb 214 artificial_defs: { }
;; bb 214 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 261
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 261
;; lr  def 	 17 [flags]
(note 1596 1155 1156 214 [bb 214] NOTE_INSN_BASIC_BLOCK)
(insn 1156 1596 1157 214 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 261 [ D.45039 ])
            (const_int 0 [0]))) Topology.cc:229 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 261 [ D.45039 ])
        (nil)))
(jump_insn 1157 1156 1726 214 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1167)
            (pc))) Topology.cc:229 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 1167)
;;  succ:       219
;;              215 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 215, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 214, next block 216, flags: (NEW, RTL, MODIFIED)
;;  pred:       214 (FALLTHRU)
;; bb 215 artificial_defs: { }
;; bb 215 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1726 1157 1727 215 [bb 215] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1727 1726 1728 215 (set (pc)
        (label_ref 1203)) Topology.cc:229 636 {jump}
     (nil)
 -> 1203)
;;  succ:       227 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1728 1727 1160)
;; basic block 216, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 215, next block 217, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       213
;; bb 216 artificial_defs: { }
;; bb 216 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 261
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 261
;; lr  def 	 17 [flags]
(code_label 1160 1728 1598 216 86 "" [1 uses])
(note 1598 1160 1161 216 [bb 216] NOTE_INSN_BASIC_BLOCK)
(insn 1161 1598 1162 216 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 261 [ D.45039 ])
            (const_int 3 [0x3]))) Topology.cc:229 7 {*cmpsi_1}
     (nil))
(jump_insn 1162 1161 1599 216 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1185)
            (pc))) Topology.cc:229 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 1185)
;;  succ:       223
;;              217 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 261

;; basic block 217, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 216, next block 218, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       216 (FALLTHRU)
;; bb 217 artificial_defs: { }
;; bb 217 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 261
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 261
;; lr  def 	 17 [flags]
(note 1599 1162 1163 217 [bb 217] NOTE_INSN_BASIC_BLOCK)
(insn 1163 1599 1164 217 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 261 [ D.45039 ])
            (const_int 4 [0x4]))) Topology.cc:229 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 261 [ D.45039 ])
        (nil)))
(jump_insn 1164 1163 1729 217 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1194)
            (pc))) Topology.cc:229 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 1194)
;;  succ:       225
;;              218 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 218, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 217, next block 219, flags: (NEW, RTL, MODIFIED)
;;  pred:       217 (FALLTHRU)
;; bb 218 artificial_defs: { }
;; bb 218 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1729 1164 1730 218 [bb 218] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1730 1729 1731 218 (set (pc)
        (label_ref 1203)) Topology.cc:229 636 {jump}
     (nil)
 -> 1203)
;;  succ:       227 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1731 1730 1167)
;; basic block 219, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 218, next block 220, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       214
;; bb 219 artificial_defs: { }
;; bb 219 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 417
(code_label 1167 1731 1168 219 87 "" [1 uses])
(note 1168 1167 1169 219 [bb 219] NOTE_INSN_BASIC_BLOCK)
(insn 1169 1168 1170 219 (parallel [
            (set (reg:DI 417)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:231 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1170 1169 1171 219 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC30") [flags 0x2]  <var_decl 0x1041c97b8 *LC30>)) Topology.cc:231 89 {*movdi_internal}
     (nil))
(insn 1171 1170 1172 219 (set (reg:DI 5 di)
        (reg:DI 417)) Topology.cc:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 417)
        (nil)))
(call_insn 1172 1171 1732 219 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:231 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              220 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 220, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 219, next block 221, flags: (NEW, RTL, MODIFIED)
;;  pred:       219 (FALLTHRU)
;; bb 220 artificial_defs: { }
;; bb 220 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1732 1172 1733 220 [bb 220] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1733 1732 1734 220 (set (pc)
        (label_ref 1216)) Topology.cc:232 636 {jump}
     (nil)
 -> 1216)
;;  succ:       229 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1734 1733 1176)
;; basic block 221, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 220, next block 222, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       212
;; bb 221 artificial_defs: { }
;; bb 221 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 418
(code_label 1176 1734 1177 221 85 "" [1 uses])
(note 1177 1176 1178 221 [bb 221] NOTE_INSN_BASIC_BLOCK)
(insn 1178 1177 1179 221 (parallel [
            (set (reg:DI 418)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:234 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1179 1178 1180 221 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC31") [flags 0x2]  <var_decl 0x1041c9850 *LC31>)) Topology.cc:234 89 {*movdi_internal}
     (nil))
(insn 1180 1179 1181 221 (set (reg:DI 5 di)
        (reg:DI 418)) Topology.cc:234 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 418)
        (nil)))
(call_insn 1181 1180 1735 221 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:234 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              222 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 222, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 221, next block 223, flags: (NEW, RTL, MODIFIED)
;;  pred:       221 (FALLTHRU)
;; bb 222 artificial_defs: { }
;; bb 222 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1735 1181 1736 222 [bb 222] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1736 1735 1737 222 (set (pc)
        (label_ref 1216)) Topology.cc:235 636 {jump}
     (nil)
 -> 1216)
;;  succ:       229 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1737 1736 1185)
;; basic block 223, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 222, next block 224, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       216
;; bb 223 artificial_defs: { }
;; bb 223 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 419
(code_label 1185 1737 1186 223 88 "" [1 uses])
(note 1186 1185 1187 223 [bb 223] NOTE_INSN_BASIC_BLOCK)
(insn 1187 1186 1188 223 (parallel [
            (set (reg:DI 419)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:237 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1188 1187 1189 223 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC32") [flags 0x2]  <var_decl 0x1041c98e8 *LC32>)) Topology.cc:237 89 {*movdi_internal}
     (nil))
(insn 1189 1188 1190 223 (set (reg:DI 5 di)
        (reg:DI 419)) Topology.cc:237 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 419)
        (nil)))
(call_insn 1190 1189 1738 223 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:237 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              224 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 224, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 223, next block 225, flags: (NEW, RTL, MODIFIED)
;;  pred:       223 (FALLTHRU)
;; bb 224 artificial_defs: { }
;; bb 224 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1738 1190 1739 224 [bb 224] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1739 1738 1740 224 (set (pc)
        (label_ref 1216)) Topology.cc:238 636 {jump}
     (nil)
 -> 1216)
;;  succ:       229 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1740 1739 1194)
;; basic block 225, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 224, next block 226, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       217
;; bb 225 artificial_defs: { }
;; bb 225 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 420
(code_label 1194 1740 1195 225 89 "" [1 uses])
(note 1195 1194 1196 225 [bb 225] NOTE_INSN_BASIC_BLOCK)
(insn 1196 1195 1197 225 (parallel [
            (set (reg:DI 420)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:240 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1197 1196 1198 225 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC33") [flags 0x2]  <var_decl 0x1041c9980 *LC33>)) Topology.cc:240 89 {*movdi_internal}
     (nil))
(insn 1198 1197 1199 225 (set (reg:DI 5 di)
        (reg:DI 420)) Topology.cc:240 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 420)
        (nil)))
(call_insn 1199 1198 1741 225 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:240 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              226 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 226, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 225, next block 227, flags: (NEW, RTL, MODIFIED)
;;  pred:       225 (FALLTHRU)
;; bb 226 artificial_defs: { }
;; bb 226 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1741 1199 1742 226 [bb 226] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1742 1741 1743 226 (set (pc)
        (label_ref 1216)) Topology.cc:241 636 {jump}
     (nil)
 -> 1216)
;;  succ:       229 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1743 1742 1203)
;; basic block 227, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 226, next block 228, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       215 [100.0%] 
;;              218 [100.0%] 
;; bb 227 artificial_defs: { }
;; bb 227 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 421
(code_label 1203 1743 1204 227 84 "" [2 uses])
(note 1204 1203 1205 227 [bb 227] NOTE_INSN_BASIC_BLOCK)
(insn 1205 1204 1206 227 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC34") [flags 0x2]  <var_decl 0x1041c9a18 *LC34>)) Topology.cc:243 89 {*movdi_internal}
     (nil))
(insn 1206 1205 1207 227 (set (reg:DI 421)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cerr") [flags 0x1040]  <var_decl 0x1031027b8 cerr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) Topology.cc:243 89 {*movdi_internal}
     (nil))
(insn 1207 1206 1208 227 (set (reg:DI 5 di)
        (reg:DI 421)) Topology.cc:243 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 421)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cerr") [flags 0x1040]  <var_decl 0x1031027b8 cerr>)
            (nil))))
(call_insn 1208 1207 1209 227 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:243 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              228 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 228, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 227, next block 229, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       227 (FALLTHRU)
;; bb 228 artificial_defs: { }
;; bb 228 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 1209 1208 1210 228 [bb 228] NOTE_INSN_BASIC_BLOCK)
(insn 1210 1209 1211 228 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*LC20") [flags 0x2]  <var_decl 0x1041c91c8 *LC20>)) Topology.cc:244 89 {*movdi_internal}
     (nil))
(insn 1211 1210 1212 228 (set (reg:SI 1 dx)
        (const_int 244 [0xf4])) Topology.cc:244 90 {*movsi_internal}
     (nil))
(insn 1212 1211 1213 228 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC1") [flags 0x2]  <var_decl 0x10417fda8 *LC1>)) Topology.cc:244 89 {*movdi_internal}
     (nil))
(insn 1213 1212 1214 228 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZZN5brite8Topology11BriteOutputEPcE8__func__") [flags 0x1c02]  <var_decl 0x103d087b8 __func__>)) Topology.cc:244 89 {*movdi_internal}
     (nil))
(call_insn 1214 1213 1215 228 (call (mem:QI (symbol_ref:DI ("__assert_rtn") [flags 0x41]  <function_decl 0x1035dc600 __assert_rtn>) [0 __assert_rtn S1 A8])
        (const_int 0 [0])) Topology.cc:244 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 4 [0x4])
                        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                            (expr_list:REG_NORETURN (const_int 0 [0])
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1215 1214 1216)
;; basic block 229, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 228, next block 230, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       224 [100.0%] 
;;              220 [100.0%] 
;;              222 [100.0%] 
;;              226 [100.0%] 
;; bb 229 artificial_defs: { }
;; bb 229 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1216 1215 1217 229 90 "" [4 uses])
(note 1217 1216 1744 229 [bb 229] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1744 1217 1745 229 (set (pc)
        (label_ref 1317)) Topology.cc:246 636 {jump}
     (nil)
 -> 1317)
;;  succ:       252 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1745 1744 1220)
;; basic block 230, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 229, next block 231, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       208
;; bb 230 artificial_defs: { }
;; bb 230 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 262 263 422
(code_label 1220 1745 1221 230 83 "" [1 uses])
(note 1221 1220 1222 230 [bb 230] NOTE_INSN_BASIC_BLOCK)
(insn 1222 1221 1223 230 (parallel [
            (set (reg:DI 422)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:250 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1223 1222 1224 230 (set (reg:DI 5 di)
        (reg:DI 422)) Topology.cc:250 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 422)
        (nil)))
(call_insn 1224 1223 1225 230 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:250 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1225 1224 1226 230 (set (reg/f:DI 262 [ D.45051 ])
        (reg:DI 0 ax)) Topology.cc:250 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1226 1225 1227 230 (set (reg/f:DI 263 [ D.45052 ])
        (mem/f:DI (reg/f:DI 262 [ D.45051 ]) [0 *_298+0 S8 A64])) Topology.cc:250 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 262 [ D.45051 ])
        (nil)))
(insn 1227 1226 1228 230 (set (reg:DI 5 di)
        (reg/f:DI 263 [ D.45052 ])) Topology.cc:250 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 263 [ D.45052 ])
        (nil)))
(call_insn 1228 1227 1601 230 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge7GetConfEv") [flags 0x41]  <function_decl 0x103612500 GetConf>) [0 GetConf S1 A8])
            (const_int 0 [0]))) Topology.cc:250 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              231 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 231, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 230, next block 232, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       230 (FALLTHRU)
;; bb 231 artificial_defs: { }
;; bb 231 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 264
(note 1601 1228 1229 231 [bb 231] NOTE_INSN_BASIC_BLOCK)
(insn 1229 1601 1231 231 (set (reg/f:DI 264 [ D.45053 ])
        (reg:DI 0 ax)) Topology.cc:250 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1231 1229 1232 231 (set (reg:DI 5 di)
        (reg/f:DI 264 [ D.45053 ])) Topology.cc:250 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 264 [ D.45053 ])
        (nil)))
(call_insn 1232 1231 1602 231 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite10ASEdgeConf13GetASEdgeTypeEv") [flags 0x41]  <function_decl 0x10361cd00 GetASEdgeType>) [0 GetASEdgeType S1 A8])
            (const_int 0 [0]))) Topology.cc:250 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              232 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 232, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 231, next block 233, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       231 (FALLTHRU)
;; bb 232 artificial_defs: { }
;; bb 232 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 265 266
(note 1602 1232 1233 232 [bb 232] NOTE_INSN_BASIC_BLOCK)
(insn 1233 1602 1235 232 (set (reg:SI 265 [ D.45056 ])
        (reg:SI 0 ax)) Topology.cc:250 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 1235 1233 1236 232 (set (reg:SI 266 [ D.45039 ])
        (reg:SI 265 [ D.45056 ])) Topology.cc:250 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 265 [ D.45056 ])
        (nil)))
(insn 1236 1235 1237 232 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 266 [ D.45039 ])
            (const_int 1 [0x1]))) Topology.cc:250 7 {*cmpsi_1}
     (nil))
(jump_insn 1237 1236 1603 232 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1260)
            (pc))) Topology.cc:250 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 1260)
;;  succ:       241
;;              233 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 266

;; basic block 233, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 232, next block 234, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       232 (FALLTHRU)
;; bb 233 artificial_defs: { }
;; bb 233 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 266
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 266
;; lr  def 	 17 [flags]
(note 1603 1237 1238 233 [bb 233] NOTE_INSN_BASIC_BLOCK)
(insn 1238 1603 1239 233 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 266 [ D.45039 ])
            (const_int 1 [0x1]))) Topology.cc:250 7 {*cmpsi_1}
     (nil))
(jump_insn 1239 1238 1604 233 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1244)
            (pc))) Topology.cc:250 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 1244)
;;  succ:       236
;;              234 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 266

;; basic block 234, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 233, next block 235, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       233 (FALLTHRU)
;; bb 234 artificial_defs: { }
;; bb 234 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 266
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 266
;; lr  def 	 17 [flags]
(note 1604 1239 1240 234 [bb 234] NOTE_INSN_BASIC_BLOCK)
(insn 1240 1604 1241 234 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 266 [ D.45039 ])
            (const_int 0 [0]))) Topology.cc:250 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 266 [ D.45039 ])
        (nil)))
(jump_insn 1241 1240 1746 234 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1251)
            (pc))) Topology.cc:250 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 1251)
;;  succ:       239
;;              235 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 235, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 234, next block 236, flags: (NEW, RTL, MODIFIED)
;;  pred:       234 (FALLTHRU)
;; bb 235 artificial_defs: { }
;; bb 235 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1746 1241 1747 235 [bb 235] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1747 1746 1748 235 (set (pc)
        (label_ref 1287)) Topology.cc:250 636 {jump}
     (nil)
 -> 1287)
;;  succ:       247 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1748 1747 1244)
;; basic block 236, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 235, next block 237, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       233
;; bb 236 artificial_defs: { }
;; bb 236 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 266
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 266
;; lr  def 	 17 [flags]
(code_label 1244 1748 1606 236 94 "" [1 uses])
(note 1606 1244 1245 236 [bb 236] NOTE_INSN_BASIC_BLOCK)
(insn 1245 1606 1246 236 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 266 [ D.45039 ])
            (const_int 2 [0x2]))) Topology.cc:250 7 {*cmpsi_1}
     (nil))
(jump_insn 1246 1245 1607 236 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1269)
            (pc))) Topology.cc:250 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 1269)
;;  succ:       243
;;              237 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 266

;; basic block 237, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 236, next block 238, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       236 (FALLTHRU)
;; bb 237 artificial_defs: { }
;; bb 237 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 266
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 266
;; lr  def 	 17 [flags]
(note 1607 1246 1247 237 [bb 237] NOTE_INSN_BASIC_BLOCK)
(insn 1247 1607 1248 237 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 266 [ D.45039 ])
            (const_int 3 [0x3]))) Topology.cc:250 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 266 [ D.45039 ])
        (nil)))
(jump_insn 1248 1247 1749 237 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1278)
            (pc))) Topology.cc:250 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 1278)
;;  succ:       245
;;              238 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 238, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 237, next block 239, flags: (NEW, RTL, MODIFIED)
;;  pred:       237 (FALLTHRU)
;; bb 238 artificial_defs: { }
;; bb 238 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1749 1248 1750 238 [bb 238] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1750 1749 1751 238 (set (pc)
        (label_ref 1287)) Topology.cc:250 636 {jump}
     (nil)
 -> 1287)
;;  succ:       247 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1751 1750 1251)
;; basic block 239, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 238, next block 240, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       234
;; bb 239 artificial_defs: { }
;; bb 239 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 423
(code_label 1251 1751 1252 239 95 "" [1 uses])
(note 1252 1251 1253 239 [bb 239] NOTE_INSN_BASIC_BLOCK)
(insn 1253 1252 1254 239 (parallel [
            (set (reg:DI 423)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:252 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1254 1253 1255 239 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC35") [flags 0x2]  <var_decl 0x1041c9ab0 *LC35>)) Topology.cc:252 89 {*movdi_internal}
     (nil))
(insn 1255 1254 1256 239 (set (reg:DI 5 di)
        (reg:DI 423)) Topology.cc:252 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 423)
        (nil)))
(call_insn 1256 1255 1752 239 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:252 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              240 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 240, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 239, next block 241, flags: (NEW, RTL, MODIFIED)
;;  pred:       239 (FALLTHRU)
;; bb 240 artificial_defs: { }
;; bb 240 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1752 1256 1753 240 [bb 240] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1753 1752 1754 240 (set (pc)
        (label_ref 1300)) Topology.cc:253 636 {jump}
     (nil)
 -> 1300)
;;  succ:       249 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1754 1753 1260)
;; basic block 241, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 240, next block 242, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       232
;; bb 241 artificial_defs: { }
;; bb 241 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 424
(code_label 1260 1754 1261 241 93 "" [1 uses])
(note 1261 1260 1262 241 [bb 241] NOTE_INSN_BASIC_BLOCK)
(insn 1262 1261 1263 241 (parallel [
            (set (reg:DI 424)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:255 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1263 1262 1264 241 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC36") [flags 0x2]  <var_decl 0x1041c9b48 *LC36>)) Topology.cc:255 89 {*movdi_internal}
     (nil))
(insn 1264 1263 1265 241 (set (reg:DI 5 di)
        (reg:DI 424)) Topology.cc:255 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 424)
        (nil)))
(call_insn 1265 1264 1755 241 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:255 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              242 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 242, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 241, next block 243, flags: (NEW, RTL, MODIFIED)
;;  pred:       241 (FALLTHRU)
;; bb 242 artificial_defs: { }
;; bb 242 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1755 1265 1756 242 [bb 242] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1756 1755 1757 242 (set (pc)
        (label_ref 1300)) Topology.cc:256 636 {jump}
     (nil)
 -> 1300)
;;  succ:       249 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1757 1756 1269)
;; basic block 243, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 242, next block 244, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       236
;; bb 243 artificial_defs: { }
;; bb 243 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 425
(code_label 1269 1757 1270 243 96 "" [1 uses])
(note 1270 1269 1271 243 [bb 243] NOTE_INSN_BASIC_BLOCK)
(insn 1271 1270 1272 243 (parallel [
            (set (reg:DI 425)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:258 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1272 1271 1273 243 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC37") [flags 0x2]  <var_decl 0x1041c9be0 *LC37>)) Topology.cc:258 89 {*movdi_internal}
     (nil))
(insn 1273 1272 1274 243 (set (reg:DI 5 di)
        (reg:DI 425)) Topology.cc:258 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 425)
        (nil)))
(call_insn 1274 1273 1758 243 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:258 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              244 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 244, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 243, next block 245, flags: (NEW, RTL, MODIFIED)
;;  pred:       243 (FALLTHRU)
;; bb 244 artificial_defs: { }
;; bb 244 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1758 1274 1759 244 [bb 244] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1759 1758 1760 244 (set (pc)
        (label_ref 1300)) Topology.cc:259 636 {jump}
     (nil)
 -> 1300)
;;  succ:       249 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1760 1759 1278)
;; basic block 245, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 244, next block 246, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       237
;; bb 245 artificial_defs: { }
;; bb 245 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 426
(code_label 1278 1760 1279 245 97 "" [1 uses])
(note 1279 1278 1280 245 [bb 245] NOTE_INSN_BASIC_BLOCK)
(insn 1280 1279 1281 245 (parallel [
            (set (reg:DI 426)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:261 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1281 1280 1282 245 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC38") [flags 0x2]  <var_decl 0x1041c9c78 *LC38>)) Topology.cc:261 89 {*movdi_internal}
     (nil))
(insn 1282 1281 1283 245 (set (reg:DI 5 di)
        (reg:DI 426)) Topology.cc:261 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 426)
        (nil)))
(call_insn 1283 1282 1761 245 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:261 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              246 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 246, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 245, next block 247, flags: (NEW, RTL, MODIFIED)
;;  pred:       245 (FALLTHRU)
;; bb 246 artificial_defs: { }
;; bb 246 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1761 1283 1762 246 [bb 246] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1762 1761 1763 246 (set (pc)
        (label_ref 1300)) Topology.cc:262 636 {jump}
     (nil)
 -> 1300)
;;  succ:       249 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1763 1762 1287)
;; basic block 247, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 246, next block 248, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       235 [100.0%] 
;;              238 [100.0%] 
;; bb 247 artificial_defs: { }
;; bb 247 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 427
(code_label 1287 1763 1288 247 92 "" [2 uses])
(note 1288 1287 1289 247 [bb 247] NOTE_INSN_BASIC_BLOCK)
(insn 1289 1288 1290 247 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC39") [flags 0x2]  <var_decl 0x1041c9d10 *LC39>)) Topology.cc:264 89 {*movdi_internal}
     (nil))
(insn 1290 1289 1291 247 (set (reg:DI 427)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cerr") [flags 0x1040]  <var_decl 0x1031027b8 cerr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) Topology.cc:264 89 {*movdi_internal}
     (nil))
(insn 1291 1290 1292 247 (set (reg:DI 5 di)
        (reg:DI 427)) Topology.cc:264 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 427)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cerr") [flags 0x1040]  <var_decl 0x1031027b8 cerr>)
            (nil))))
(call_insn 1292 1291 1293 247 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:264 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              248 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 248, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 247, next block 249, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       247 (FALLTHRU)
;; bb 248 artificial_defs: { }
;; bb 248 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 1293 1292 1294 248 [bb 248] NOTE_INSN_BASIC_BLOCK)
(insn 1294 1293 1295 248 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*LC20") [flags 0x2]  <var_decl 0x1041c91c8 *LC20>)) Topology.cc:265 89 {*movdi_internal}
     (nil))
(insn 1295 1294 1296 248 (set (reg:SI 1 dx)
        (const_int 265 [0x109])) Topology.cc:265 90 {*movsi_internal}
     (nil))
(insn 1296 1295 1297 248 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC1") [flags 0x2]  <var_decl 0x10417fda8 *LC1>)) Topology.cc:265 89 {*movdi_internal}
     (nil))
(insn 1297 1296 1298 248 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZZN5brite8Topology11BriteOutputEPcE8__func__") [flags 0x1c02]  <var_decl 0x103d087b8 __func__>)) Topology.cc:265 89 {*movdi_internal}
     (nil))
(call_insn 1298 1297 1299 248 (call (mem:QI (symbol_ref:DI ("__assert_rtn") [flags 0x41]  <function_decl 0x1035dc600 __assert_rtn>) [0 __assert_rtn S1 A8])
        (const_int 0 [0])) Topology.cc:265 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 4 [0x4])
                        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                            (expr_list:REG_NORETURN (const_int 0 [0])
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1299 1298 1300)
;; basic block 249, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 248, next block 250, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       244 [100.0%] 
;;              240 [100.0%] 
;;              242 [100.0%] 
;;              246 [100.0%] 
;; bb 249 artificial_defs: { }
;; bb 249 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1300 1299 1301 249 98 "" [4 uses])
(note 1301 1300 1764 249 [bb 249] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1764 1301 1765 249 (set (pc)
        (label_ref 1317)) Topology.cc:267 636 {jump}
     (nil)
 -> 1317)
;;  succ:       252 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1765 1764 1723)
;; basic block 250, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 249, next block 251, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       209 [100.0%] 
;; bb 250 artificial_defs: { }
;; bb 250 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 428
(code_label 1723 1765 1305 250 123 "" [1 uses])
(note 1305 1723 1306 250 [bb 250] NOTE_INSN_BASIC_BLOCK)
(insn 1306 1305 1307 250 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC40") [flags 0x2]  <var_decl 0x1041c9da8 *LC40>)) Topology.cc:270 89 {*movdi_internal}
     (nil))
(insn 1307 1306 1308 250 (set (reg:DI 428)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cerr") [flags 0x1040]  <var_decl 0x1031027b8 cerr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) Topology.cc:270 89 {*movdi_internal}
     (nil))
(insn 1308 1307 1309 250 (set (reg:DI 5 di)
        (reg:DI 428)) Topology.cc:270 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 428)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cerr") [flags 0x1040]  <var_decl 0x1031027b8 cerr>)
            (nil))))
(call_insn 1309 1308 1310 250 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:270 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              251 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 251, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 250, next block 252, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       250 (FALLTHRU)
;; bb 251 artificial_defs: { }
;; bb 251 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 1310 1309 1311 251 [bb 251] NOTE_INSN_BASIC_BLOCK)
(insn 1311 1310 1312 251 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*LC20") [flags 0x2]  <var_decl 0x1041c91c8 *LC20>)) Topology.cc:271 89 {*movdi_internal}
     (nil))
(insn 1312 1311 1313 251 (set (reg:SI 1 dx)
        (const_int 271 [0x10f])) Topology.cc:271 90 {*movsi_internal}
     (nil))
(insn 1313 1312 1314 251 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC1") [flags 0x2]  <var_decl 0x10417fda8 *LC1>)) Topology.cc:271 89 {*movdi_internal}
     (nil))
(insn 1314 1313 1315 251 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZZN5brite8Topology11BriteOutputEPcE8__func__") [flags 0x1c02]  <var_decl 0x103d087b8 __func__>)) Topology.cc:271 89 {*movdi_internal}
     (nil))
(call_insn 1315 1314 1316 251 (call (mem:QI (symbol_ref:DI ("__assert_rtn") [flags 0x41]  <function_decl 0x1035dc600 __assert_rtn>) [0 __assert_rtn S1 A8])
        (const_int 0 [0])) Topology.cc:271 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 4 [0x4])
                        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                            (expr_list:REG_NORETURN (const_int 0 [0])
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1316 1315 1317)
;; basic block 252, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 251, next block 253, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       229 [100.0%] 
;;              249 [100.0%] 
;; bb 252 artificial_defs: { }
;; bb 252 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 267 268 429
(code_label 1317 1316 1318 252 91 "" [2 uses])
(note 1318 1317 1319 252 [bb 252] NOTE_INSN_BASIC_BLOCK)
(insn 1319 1318 1320 252 (parallel [
            (set (reg:DI 429)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:275 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1320 1319 1321 252 (set (reg:DI 5 di)
        (reg:DI 429)) Topology.cc:275 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 429)
        (nil)))
(call_insn 1321 1320 1322 252 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:275 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1322 1321 1323 252 (set (reg/f:DI 267 [ D.45051 ])
        (reg:DI 0 ax)) Topology.cc:275 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1323 1322 1324 252 (set (reg/f:DI 268 [ D.45052 ])
        (mem/f:DI (reg/f:DI 267 [ D.45051 ]) [0 *_305+0 S8 A64])) Topology.cc:275 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 267 [ D.45051 ])
        (nil)))
(insn 1324 1323 1325 252 (set (reg:DI 5 di)
        (reg/f:DI 268 [ D.45052 ])) Topology.cc:275 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 268 [ D.45052 ])
        (nil)))
(call_insn 1325 1324 1609 252 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge12GetDirectionEv") [flags 0x41]  <function_decl 0x10361c000 GetDirection>) [0 GetDirection S1 A8])
            (const_int 0 [0]))) Topology.cc:275 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              253 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 253, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 252, next block 254, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       252 (FALLTHRU)
;; bb 253 artificial_defs: { }
;; bb 253 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 269
(note 1609 1325 1326 253 [bb 253] NOTE_INSN_BASIC_BLOCK)
(insn 1326 1609 1328 253 (set (reg:QI 269 [ D.45036 ])
        (reg:QI 0 ax)) Topology.cc:275 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 1328 1326 1329 253 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 269 [ D.45036 ])
            (const_int 0 [0]))) Topology.cc:275 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 269 [ D.45036 ])
        (nil)))
(jump_insn 1329 1328 1330 253 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1338)
            (pc))) Topology.cc:275 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 1338)
;;  succ:       254 (FALLTHRU)
;;              256
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 254, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 253, next block 255, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       253 (FALLTHRU)
;; bb 254 artificial_defs: { }
;; bb 254 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 430
(note 1330 1329 1331 254 [bb 254] NOTE_INSN_BASIC_BLOCK)
(insn 1331 1330 1332 254 (parallel [
            (set (reg:DI 430)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:276 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1332 1331 1333 254 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC41") [flags 0x2]  <var_decl 0x1041c9e40 *LC41>)) Topology.cc:276 89 {*movdi_internal}
     (nil))
(insn 1333 1332 1334 254 (set (reg:DI 5 di)
        (reg:DI 430)) Topology.cc:276 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 430)
        (nil)))
(call_insn 1334 1333 1766 254 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:276 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              255 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 255, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 254, next block 256, flags: (NEW, RTL, MODIFIED)
;;  pred:       254 (FALLTHRU)
;; bb 255 artificial_defs: { }
;; bb 255 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1766 1334 1767 255 [bb 255] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1767 1766 1768 255 (set (pc)
        (label_ref 1344)) 636 {jump}
     (nil)
 -> 1344)
;;  succ:       257 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1768 1767 1338)
;; basic block 256, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 255, next block 257, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       253
;; bb 256 artificial_defs: { }
;; bb 256 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 431
(code_label 1338 1768 1339 256 99 "" [1 uses])
(note 1339 1338 1340 256 [bb 256] NOTE_INSN_BASIC_BLOCK)
(insn 1340 1339 1341 256 (parallel [
            (set (reg:DI 431)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:278 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1341 1340 1342 256 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC42") [flags 0x2]  <var_decl 0x1041c9ed8 *LC42>)) Topology.cc:278 89 {*movdi_internal}
     (nil))
(insn 1342 1341 1343 256 (set (reg:DI 5 di)
        (reg:DI 431)) Topology.cc:278 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 431)
        (nil)))
(call_insn 1343 1342 1344 256 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:278 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              257 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 257, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 256, next block 258, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       256 (FALLTHRU)
;;              255 [100.0%] 
;; bb 257 artificial_defs: { }
;; bb 257 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 432
(code_label 1344 1343 1345 257 100 "" [1 uses])
(note 1345 1344 1346 257 [bb 257] NOTE_INSN_BASIC_BLOCK)
(insn 1346 1345 1347 257 (parallel [
            (set (reg:DI 432)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:200 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1347 1346 1348 257 (set (reg:SI 4 si)
        (const_int 0 [0])) Topology.cc:200 90 {*movsi_internal}
     (nil))
(insn 1348 1347 1349 257 (set (reg:DI 5 di)
        (reg:DI 432)) Topology.cc:200 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 432)
        (nil)))
(call_insn 1349 1348 1351 257 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt14_List_iteratorIPN5brite4EdgeEEppEi") [flags 0x1]  <function_decl 0x103d5d300 operator++>) [0 operator++ S1 A8])
            (const_int 0 [0]))) Topology.cc:200 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       258 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 258, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 257, next block 259, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       257 (FALLTHRU,DFS_BACK)
;;              147 [100.0%] 
;; bb 258 artificial_defs: { }
;; bb 258 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 177 178 433
(code_label 1351 1349 1352 258 76 "" [1 uses])
(note 1352 1351 1353 258 [bb 258] NOTE_INSN_BASIC_BLOCK)
(insn 1353 1352 1354 258 (set (reg/f:DI 433)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1064 [0xfffffffffffffbd8])) [0 this+0 S8 A64])) Topology.cc:200 89 {*movdi_internal}
     (nil))
(insn 1354 1353 1355 258 (set (reg/f:DI 177 [ D.45038 ])
        (mem/f/j:DI (reg/f:DI 433) [0 this_9(D)->g+0 S8 A64])) Topology.cc:200 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 433)
        (nil)))
(insn 1355 1354 1356 258 (parallel [
            (set (reg/f:DI 178 [ D.45050 ])
                (plus:DI (reg/f:DI 177 [ D.45038 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:200 221 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 177 [ D.45038 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1356 1355 1357 258 (set (reg:DI 5 di)
        (reg/f:DI 178 [ D.45050 ])) Topology.cc:200 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 178 [ D.45050 ])
        (nil)))
(call_insn 1357 1356 1610 258 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt4listIPN5brite4EdgeESaIS2_EE3endEv") [flags 0x1]  <function_decl 0x1036f0400 end>) [0 end S1 A8])
            (const_int 0 [0]))) Topology.cc:200 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       270 (ABNORMAL,ABNORMAL_CALL,EH)
;;              259 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 259, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 258, next block 260, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       258 (FALLTHRU)
;; bb 259 artificial_defs: { }
;; bb 259 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 179 434 435 436 437
(note 1610 1357 1358 259 [bb 259] NOTE_INSN_BASIC_BLOCK)
(insn 1358 1610 1359 259 (set (reg:DI 434)
        (reg:DI 0 ax)) Topology.cc:200 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1359 1358 1360 259 (set (reg:DI 435)
        (reg:DI 434)) Topology.cc:200 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 434)
        (nil)))
(insn 1360 1359 1362 259 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 D.41789+0 S8 A64])
        (reg:DI 435)) Topology.cc:200 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 435)
        (nil)))
(insn 1362 1360 1363 259 (parallel [
            (set (reg:DI 436)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:200 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1363 1362 1364 259 (parallel [
            (set (reg:DI 437)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:200 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1364 1363 1365 259 (set (reg:DI 4 si)
        (reg:DI 436)) Topology.cc:200 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 436)
        (nil)))
(insn 1365 1364 1366 259 (set (reg:DI 5 di)
        (reg:DI 437)) Topology.cc:200 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 437)
        (nil)))
(call_insn 1366 1365 1367 259 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEneERKS3_") [flags 0x1]  <function_decl 0x103d5d700 operator!=>) [0 operator!= S1 A8])
            (const_int 0 [0]))) Topology.cc:200 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1367 1366 1369 259 (set (reg:QI 179 [ D.45036 ])
        (reg:QI 0 ax)) Topology.cc:200 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 1369 1367 1370 259 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 179 [ D.45036 ])
            (const_int 0 [0]))) Topology.cc:200 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 179 [ D.45036 ])
        (nil)))
(jump_insn 1370 1369 1371 259 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1368)
            (pc))) Topology.cc:200 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 1368)
;;  succ:       148
;;              260 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 260, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 259, next block 261, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       259 (FALLTHRU)
;; bb 260 artificial_defs: { }
;; bb 260 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 438
(note 1371 1370 1372 260 [bb 260] NOTE_INSN_BASIC_BLOCK)
(insn 1372 1371 1373 260 (parallel [
            (set (reg:DI 438)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:93 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1373 1372 1374 260 (set (reg:DI 5 di)
        (reg:DI 438)) Topology.cc:93 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 438)
        (nil)))
(call_insn 1374 1373 1375 260 (call (mem:QI (symbol_ref:DI ("_ZNSsD1Ev") [flags 0x41]  <function_decl 0x102ae3b00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) Topology.cc:93 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 3 [0x3])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       272 (ABNORMAL,ABNORMAL_CALL,EH)
;;              261 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 261, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 260, next block 262, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       260 (FALLTHRU)
;; bb 261 artificial_defs: { }
;; bb 261 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 439
(note 1375 1374 1376 261 [bb 261] NOTE_INSN_BASIC_BLOCK)
(insn 1376 1375 1377 261 (parallel [
            (set (reg:DI 439)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:280 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1377 1376 1378 261 (set (reg:DI 5 di)
        (reg:DI 439)) Topology.cc:280 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 439)
        (nil)))
(call_insn 1378 1377 1770 261 (call (mem:QI (symbol_ref:DI ("_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev") [flags 0x41]  <function_decl 0x1032d6400 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) Topology.cc:280 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1770 1378 1771 261 (set (pc)
        (label_ref 1769)) 636 {jump}
     (nil)
 -> 1769)
;;  succ:       274 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1771 1770 1611)
;; basic block 262, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 261, next block 263, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 262 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 262 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 440 441 442
(code_label/s 1611 1771 1614 262 112 "" [1 uses])
(note 1614 1611 1612 262 [bb 262] NOTE_INSN_BASIC_BLOCK)
(insn 1612 1614 1383 262 (set (reg:DI 442)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1383 1612 1384 262 (parallel [
            (set (reg:DI 440)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -129 [0xffffffffffffff7f])))
            (clobber (reg:CC 17 flags))
        ]) 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1384 1383 1385 262 (set (reg:DI 5 di)
        (reg:DI 440)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 440)
        (nil)))
(call_insn 1385 1384 1386 262 (call (mem:QI (symbol_ref:DI ("_ZNSaIcED1Ev") [flags 0x41]  <function_decl 0x1028b2700 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1386 1385 1772 262 (set (reg:DI 441)
        (reg:DI 442)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 442)
        (nil)))
(jump_insn 1772 1386 1773 262 (set (pc)
        (label_ref 1458)) 636 {jump}
     (nil)
 -> 1458)
;;  succ:       273 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 441

(barrier 1773 1772 1627)
;; basic block 263, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 262, next block 264, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20 (ABNORMAL,ABNORMAL_CALL,EH)
;;              21 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 263 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 263 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 445 446 447
(code_label/s 1627 1773 1630 263 115 "" [1 uses])
(note 1630 1627 1628 263 [bb 263] NOTE_INSN_BASIC_BLOCK)
(insn 1628 1630 1392 263 (set (reg:DI 447)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1392 1628 1393 263 (parallel [
            (set (reg:DI 445)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:106 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1393 1392 1394 263 (set (reg:DI 5 di)
        (reg:DI 445)) Topology.cc:106 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 445)
        (nil)))
(call_insn 1394 1393 1395 263 (call (mem:QI (symbol_ref:DI ("_ZNSsD1Ev") [flags 0x41]  <function_decl 0x102ae3b00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) Topology.cc:106 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int -8 [0xfffffffffffffff8])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1395 1394 1774 263 (set (reg:DI 446)
        (reg:DI 447)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 447)
        (nil)))
(jump_insn 1774 1395 1775 263 (set (pc)
        (label_ref 1451)) 636 {jump}
     (nil)
 -> 1451)
;;  succ:       271 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 446

(barrier 1775 1774 1631)
;; basic block 264, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 263, next block 265, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25 (ABNORMAL,ABNORMAL_CALL,EH)
;;              26 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 264 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 264 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 446 450 451
(code_label/s 1631 1775 1634 264 116 "" [1 uses])
(note 1634 1631 1632 264 [bb 264] NOTE_INSN_BASIC_BLOCK)
(insn 1632 1634 1401 264 (set (reg:DI 451)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1401 1632 1402 264 (parallel [
            (set (reg:DI 450)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:109 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1402 1401 1403 264 (set (reg:DI 5 di)
        (reg:DI 450)) Topology.cc:109 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 450)
        (nil)))
(call_insn 1403 1402 1404 264 (call (mem:QI (symbol_ref:DI ("_ZNSsD1Ev") [flags 0x41]  <function_decl 0x102ae3b00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) Topology.cc:109 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int -10 [0xfffffffffffffff6])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1404 1403 1776 264 (set (reg:DI 446)
        (reg:DI 451)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 451)
        (nil)))
(jump_insn 1776 1404 1777 264 (set (pc)
        (label_ref 1451)) 636 {jump}
     (nil)
 -> 1451)
;;  succ:       271 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 446

(barrier 1777 1776 1635)
;; basic block 265, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 264, next block 266, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       30 (ABNORMAL,ABNORMAL_CALL,EH)
;;              31 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 265 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 265 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 446 453 454
(code_label/s 1635 1777 1638 265 117 "" [1 uses])
(note 1638 1635 1636 265 [bb 265] NOTE_INSN_BASIC_BLOCK)
(insn 1636 1638 1410 265 (set (reg:DI 454)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1410 1636 1411 265 (parallel [
            (set (reg:DI 453)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:112 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1411 1410 1412 265 (set (reg:DI 5 di)
        (reg:DI 453)) Topology.cc:112 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 453)
        (nil)))
(call_insn 1412 1411 1413 265 (call (mem:QI (symbol_ref:DI ("_ZNSsD1Ev") [flags 0x41]  <function_decl 0x102ae3b00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) Topology.cc:112 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int -12 [0xfffffffffffffff4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1413 1412 1778 265 (set (reg:DI 446)
        (reg:DI 454)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 454)
        (nil)))
(jump_insn 1778 1413 1779 265 (set (pc)
        (label_ref 1451)) 636 {jump}
     (nil)
 -> 1451)
;;  succ:       271 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 446

(barrier 1779 1778 1639)
;; basic block 266, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 265, next block 267, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       35 (ABNORMAL,ABNORMAL_CALL,EH)
;;              36 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 266 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 266 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 446 456 457
(code_label/s 1639 1779 1642 266 118 "" [1 uses])
(note 1642 1639 1640 266 [bb 266] NOTE_INSN_BASIC_BLOCK)
(insn 1640 1642 1419 266 (set (reg:DI 457)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1419 1640 1420 266 (parallel [
            (set (reg:DI 456)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:115 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1420 1419 1421 266 (set (reg:DI 5 di)
        (reg:DI 456)) Topology.cc:115 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 456)
        (nil)))
(call_insn 1421 1420 1422 266 (call (mem:QI (symbol_ref:DI ("_ZNSsD1Ev") [flags 0x41]  <function_decl 0x102ae3b00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) Topology.cc:115 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int -14 [0xfffffffffffffff2])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1422 1421 1780 266 (set (reg:DI 446)
        (reg:DI 457)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 457)
        (nil)))
(jump_insn 1780 1422 1781 266 (set (pc)
        (label_ref 1451)) 636 {jump}
     (nil)
 -> 1451)
;;  succ:       271 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 446

(barrier 1781 1780 1643)
;; basic block 267, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 266, next block 268, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       40 (ABNORMAL,ABNORMAL_CALL,EH)
;;              41 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 267 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 267 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 446 459 460
(code_label/s 1643 1781 1646 267 119 "" [1 uses])
(note 1646 1643 1644 267 [bb 267] NOTE_INSN_BASIC_BLOCK)
(insn 1644 1646 1428 267 (set (reg:DI 460)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1428 1644 1429 267 (parallel [
            (set (reg:DI 459)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:118 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1429 1428 1430 267 (set (reg:DI 5 di)
        (reg:DI 459)) Topology.cc:118 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 459)
        (nil)))
(call_insn 1430 1429 1431 267 (call (mem:QI (symbol_ref:DI ("_ZNSsD1Ev") [flags 0x41]  <function_decl 0x102ae3b00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) Topology.cc:118 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int -16 [0xfffffffffffffff0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1431 1430 1782 267 (set (reg:DI 446)
        (reg:DI 460)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 460)
        (nil)))
(jump_insn 1782 1431 1783 267 (set (pc)
        (label_ref 1451)) 636 {jump}
     (nil)
 -> 1451)
;;  succ:       271 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 446

(barrier 1783 1782 1647)
;; basic block 268, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 267, next block 269, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       45 (ABNORMAL,ABNORMAL_CALL,EH)
;;              46 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 268 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 268 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 446 462 463
(code_label/s 1647 1783 1650 268 120 "" [1 uses])
(note 1650 1647 1648 268 [bb 268] NOTE_INSN_BASIC_BLOCK)
(insn 1648 1650 1437 268 (set (reg:DI 463)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1437 1648 1438 268 (parallel [
            (set (reg:DI 462)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:121 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1438 1437 1439 268 (set (reg:DI 5 di)
        (reg:DI 462)) Topology.cc:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 462)
        (nil)))
(call_insn 1439 1438 1440 268 (call (mem:QI (symbol_ref:DI ("_ZNSsD1Ev") [flags 0x41]  <function_decl 0x102ae3b00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) Topology.cc:121 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int -18 [0xffffffffffffffee])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1440 1439 1784 268 (set (reg:DI 446)
        (reg:DI 463)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 463)
        (nil)))
(jump_insn 1784 1440 1785 268 (set (pc)
        (label_ref 1451)) 636 {jump}
     (nil)
 -> 1451)
;;  succ:       271 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 446

(barrier 1785 1784 1651)
;; basic block 269, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 268, next block 270, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       50 (ABNORMAL,ABNORMAL_CALL,EH)
;;              51 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 269 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 269 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 446 465 466
(code_label/s 1651 1785 1654 269 121 "" [1 uses])
(note 1654 1651 1652 269 [bb 269] NOTE_INSN_BASIC_BLOCK)
(insn 1652 1654 1446 269 (set (reg:DI 466)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1446 1652 1447 269 (parallel [
            (set (reg:DI 465)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:125 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1447 1446 1448 269 (set (reg:DI 5 di)
        (reg:DI 465)) Topology.cc:125 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 465)
        (nil)))
(call_insn 1448 1447 1449 269 (call (mem:QI (symbol_ref:DI ("_ZNSsD1Ev") [flags 0x41]  <function_decl 0x102ae3b00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) Topology.cc:125 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int -20 [0xffffffffffffffec])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1449 1448 1786 269 (set (reg:DI 446)
        (reg:DI 466)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 466)
        (nil)))
(jump_insn 1786 1449 1787 269 (set (pc)
        (label_ref 1451)) 636 {jump}
     (nil)
 -> 1451)
;;  succ:       271 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 446

(barrier 1787 1786 1621)
;; basic block 270, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 269, next block 271, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (ABNORMAL,ABNORMAL_CALL,EH)
;;              4 (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 (ABNORMAL,ABNORMAL_CALL,EH)
;;              6 (ABNORMAL,ABNORMAL_CALL,EH)
;;              8 (ABNORMAL,ABNORMAL_CALL,EH)
;;              9 (ABNORMAL,ABNORMAL_CALL,EH)
;;              10 (ABNORMAL,ABNORMAL_CALL,EH)
;;              11 (ABNORMAL,ABNORMAL_CALL,EH)
;;              12 (ABNORMAL,ABNORMAL_CALL,EH)
;;              13 (ABNORMAL,ABNORMAL_CALL,EH)
;;              14 (ABNORMAL,ABNORMAL_CALL,EH)
;;              15 (ABNORMAL,ABNORMAL_CALL,EH)
;;              16 (ABNORMAL,ABNORMAL_CALL,EH)
;;              19 (ABNORMAL,ABNORMAL_CALL,EH)
;;              22 (ABNORMAL,ABNORMAL_CALL,EH)
;;              24 (ABNORMAL,ABNORMAL_CALL,EH)
;;              27 (ABNORMAL,ABNORMAL_CALL,EH)
;;              29 (ABNORMAL,ABNORMAL_CALL,EH)
;;              32 (ABNORMAL,ABNORMAL_CALL,EH)
;;              34 (ABNORMAL,ABNORMAL_CALL,EH)
;;              37 (ABNORMAL,ABNORMAL_CALL,EH)
;;              39 (ABNORMAL,ABNORMAL_CALL,EH)
;;              42 (ABNORMAL,ABNORMAL_CALL,EH)
;;              44 (ABNORMAL,ABNORMAL_CALL,EH)
;;              47 (ABNORMAL,ABNORMAL_CALL,EH)
;;              49 (ABNORMAL,ABNORMAL_CALL,EH)
;;              52 (ABNORMAL,ABNORMAL_CALL,EH)
;;              54 (ABNORMAL,ABNORMAL_CALL,EH)
;;              55 (ABNORMAL,ABNORMAL_CALL,EH)
;;              56 (ABNORMAL,ABNORMAL_CALL,EH)
;;              57 (ABNORMAL,ABNORMAL_CALL,EH)
;;              59 (ABNORMAL,ABNORMAL_CALL,EH)
;;              60 (ABNORMAL,ABNORMAL_CALL,EH)
;;              61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              62 (ABNORMAL,ABNORMAL_CALL,EH)
;;              63 (ABNORMAL,ABNORMAL_CALL,EH)
;;              65 (ABNORMAL,ABNORMAL_CALL,EH)
;;              66 (ABNORMAL,ABNORMAL_CALL,EH)
;;              67 (ABNORMAL,ABNORMAL_CALL,EH)
;;              68 (ABNORMAL,ABNORMAL_CALL,EH)
;;              69 (ABNORMAL,ABNORMAL_CALL,EH)
;;              70 (ABNORMAL,ABNORMAL_CALL,EH)
;;              71 (ABNORMAL,ABNORMAL_CALL,EH)
;;              72 (ABNORMAL,ABNORMAL_CALL,EH)
;;              73 (ABNORMAL,ABNORMAL_CALL,EH)
;;              74 (ABNORMAL,ABNORMAL_CALL,EH)
;;              75 (ABNORMAL,ABNORMAL_CALL,EH)
;;              76 (ABNORMAL,ABNORMAL_CALL,EH)
;;              77 (ABNORMAL,ABNORMAL_CALL,EH)
;;              78 (ABNORMAL,ABNORMAL_CALL,EH)
;;              79 (ABNORMAL,ABNORMAL_CALL,EH)
;;              80 (ABNORMAL,ABNORMAL_CALL,EH)
;;              81 (ABNORMAL,ABNORMAL_CALL,EH)
;;              82 (ABNORMAL,ABNORMAL_CALL,EH)
;;              83 (ABNORMAL,ABNORMAL_CALL,EH)
;;              84 (ABNORMAL,ABNORMAL_CALL,EH)
;;              85 (ABNORMAL,ABNORMAL_CALL,EH)
;;              86 (ABNORMAL,ABNORMAL_CALL,EH)
;;              87 (ABNORMAL,ABNORMAL_CALL,EH)
;;              88 (ABNORMAL,ABNORMAL_CALL,EH)
;;              89 (ABNORMAL,ABNORMAL_CALL,EH)
;;              92 (ABNORMAL,ABNORMAL_CALL,EH)
;;              93 (ABNORMAL,ABNORMAL_CALL,EH)
;;              94 (ABNORMAL,ABNORMAL_CALL,EH)
;;              95 (ABNORMAL,ABNORMAL_CALL,EH)
;;              96 (ABNORMAL,ABNORMAL_CALL,EH)
;;              97 (ABNORMAL,ABNORMAL_CALL,EH)
;;              98 (ABNORMAL,ABNORMAL_CALL,EH)
;;              99 (ABNORMAL,ABNORMAL_CALL,EH)
;;              102 (ABNORMAL,ABNORMAL_CALL,EH)
;;              104 (ABNORMAL,ABNORMAL_CALL,EH)
;;              106 (ABNORMAL,ABNORMAL_CALL,EH)
;;              108 (ABNORMAL,ABNORMAL_CALL,EH)
;;              110 (ABNORMAL,ABNORMAL_CALL,EH)
;;              112 (ABNORMAL,ABNORMAL_CALL,EH)
;;              113 (ABNORMAL,ABNORMAL_CALL,EH)
;;              115 (ABNORMAL,ABNORMAL_CALL,EH)
;;              116 (ABNORMAL,ABNORMAL_CALL,EH)
;;              117 (ABNORMAL,ABNORMAL_CALL,EH)
;;              118 (ABNORMAL,ABNORMAL_CALL,EH)
;;              119 (ABNORMAL,ABNORMAL_CALL,EH)
;;              120 (ABNORMAL,ABNORMAL_CALL,EH)
;;              121 (ABNORMAL,ABNORMAL_CALL,EH)
;;              122 (ABNORMAL,ABNORMAL_CALL,EH)
;;              125 (ABNORMAL,ABNORMAL_CALL,EH)
;;              127 (ABNORMAL,ABNORMAL_CALL,EH)
;;              129 (ABNORMAL,ABNORMAL_CALL,EH)
;;              131 (ABNORMAL,ABNORMAL_CALL,EH)
;;              133 (ABNORMAL,ABNORMAL_CALL,EH)
;;              135 (ABNORMAL,ABNORMAL_CALL,EH)
;;              136 (ABNORMAL,ABNORMAL_CALL,EH)
;;              138 (ABNORMAL,ABNORMAL_CALL,EH)
;;              140 (ABNORMAL,ABNORMAL_CALL,EH)
;;              142 (ABNORMAL,ABNORMAL_CALL,EH)
;;              143 (ABNORMAL,ABNORMAL_CALL,EH)
;;              144 (ABNORMAL,ABNORMAL_CALL,EH)
;;              145 (ABNORMAL,ABNORMAL_CALL,EH)
;;              146 (ABNORMAL,ABNORMAL_CALL,EH)
;;              148 (ABNORMAL,ABNORMAL_CALL,EH)
;;              149 (ABNORMAL,ABNORMAL_CALL,EH)
;;              150 (ABNORMAL,ABNORMAL_CALL,EH)
;;              151 (ABNORMAL,ABNORMAL_CALL,EH)
;;              152 (ABNORMAL,ABNORMAL_CALL,EH)
;;              153 (ABNORMAL,ABNORMAL_CALL,EH)
;;              154 (ABNORMAL,ABNORMAL_CALL,EH)
;;              155 (ABNORMAL,ABNORMAL_CALL,EH)
;;              156 (ABNORMAL,ABNORMAL_CALL,EH)
;;              157 (ABNORMAL,ABNORMAL_CALL,EH)
;;              158 (ABNORMAL,ABNORMAL_CALL,EH)
;;              159 (ABNORMAL,ABNORMAL_CALL,EH)
;;              160 (ABNORMAL,ABNORMAL_CALL,EH)
;;              161 (ABNORMAL,ABNORMAL_CALL,EH)
;;              162 (ABNORMAL,ABNORMAL_CALL,EH)
;;              163 (ABNORMAL,ABNORMAL_CALL,EH)
;;              167 (ABNORMAL,ABNORMAL_CALL,EH)
;;              168 (ABNORMAL,ABNORMAL_CALL,EH)
;;              169 (ABNORMAL,ABNORMAL_CALL,EH)
;;              170 (ABNORMAL,ABNORMAL_CALL,EH)
;;              171 (ABNORMAL,ABNORMAL_CALL,EH)
;;              172 (ABNORMAL,ABNORMAL_CALL,EH)
;;              173 (ABNORMAL,ABNORMAL_CALL,EH)
;;              174 (ABNORMAL,ABNORMAL_CALL,EH)
;;              175 (ABNORMAL,ABNORMAL_CALL,EH)
;;              176 (ABNORMAL,ABNORMAL_CALL,EH)
;;              177 (ABNORMAL,ABNORMAL_CALL,EH)
;;              178 (ABNORMAL,ABNORMAL_CALL,EH)
;;              179 (ABNORMAL,ABNORMAL_CALL,EH)
;;              180 (ABNORMAL,ABNORMAL_CALL,EH)
;;              181 (ABNORMAL,ABNORMAL_CALL,EH)
;;              182 (ABNORMAL,ABNORMAL_CALL,EH)
;;              183 (ABNORMAL,ABNORMAL_CALL,EH)
;;              184 (ABNORMAL,ABNORMAL_CALL,EH)
;;              186 (ABNORMAL,ABNORMAL_CALL,EH)
;;              187 (ABNORMAL,ABNORMAL_CALL,EH)
;;              188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              189 (ABNORMAL,ABNORMAL_CALL,EH)
;;              190 (ABNORMAL,ABNORMAL_CALL,EH)
;;              191 (ABNORMAL,ABNORMAL_CALL,EH)
;;              192 (ABNORMAL,ABNORMAL_CALL,EH)
;;              193 (ABNORMAL,ABNORMAL_CALL,EH)
;;              194 (ABNORMAL,ABNORMAL_CALL,EH)
;;              195 (ABNORMAL,ABNORMAL_CALL,EH)
;;              196 (ABNORMAL,ABNORMAL_CALL,EH)
;;              197 (ABNORMAL,ABNORMAL_CALL,EH)
;;              198 (ABNORMAL,ABNORMAL_CALL,EH)
;;              199 (ABNORMAL,ABNORMAL_CALL,EH)
;;              200 (ABNORMAL,ABNORMAL_CALL,EH)
;;              201 (ABNORMAL,ABNORMAL_CALL,EH)
;;              203 (ABNORMAL,ABNORMAL_CALL,EH)
;;              205 (ABNORMAL,ABNORMAL_CALL,EH)
;;              206 (ABNORMAL,ABNORMAL_CALL,EH)
;;              210 (ABNORMAL,ABNORMAL_CALL,EH)
;;              211 (ABNORMAL,ABNORMAL_CALL,EH)
;;              219 (ABNORMAL,ABNORMAL_CALL,EH)
;;              221 (ABNORMAL,ABNORMAL_CALL,EH)
;;              223 (ABNORMAL,ABNORMAL_CALL,EH)
;;              225 (ABNORMAL,ABNORMAL_CALL,EH)
;;              227 (ABNORMAL,ABNORMAL_CALL,EH)
;;              228 (ABNORMAL,ABNORMAL_CALL,EH)
;;              230 (ABNORMAL,ABNORMAL_CALL,EH)
;;              231 (ABNORMAL,ABNORMAL_CALL,EH)
;;              239 (ABNORMAL,ABNORMAL_CALL,EH)
;;              241 (ABNORMAL,ABNORMAL_CALL,EH)
;;              243 (ABNORMAL,ABNORMAL_CALL,EH)
;;              245 (ABNORMAL,ABNORMAL_CALL,EH)
;;              247 (ABNORMAL,ABNORMAL_CALL,EH)
;;              248 (ABNORMAL,ABNORMAL_CALL,EH)
;;              250 (ABNORMAL,ABNORMAL_CALL,EH)
;;              251 (ABNORMAL,ABNORMAL_CALL,EH)
;;              252 (ABNORMAL,ABNORMAL_CALL,EH)
;;              254 (ABNORMAL,ABNORMAL_CALL,EH)
;;              256 (ABNORMAL,ABNORMAL_CALL,EH)
;;              258 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 270 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 270 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 446
(code_label/s 1621 1787 1626 270 114 "" [1 uses])
(note 1626 1621 1622 270 [bb 270] NOTE_INSN_BASIC_BLOCK)
(insn 1622 1626 1451 270 (set (reg:DI 446)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       271 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 446

;; basic block 271, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 270, next block 272, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       270 [100.0%]  (FALLTHRU)
;;              263 [100.0%] 
;;              268 [100.0%] 
;;              267 [100.0%] 
;;              264 [100.0%] 
;;              266 [100.0%] 
;;              265 [100.0%] 
;;              269 [100.0%] 
;; bb 271 artificial_defs: { }
;; bb 271 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 446
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 446
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 441 468
(code_label 1451 1622 1452 271 105 "" [7 uses])
(note 1452 1451 1453 271 [bb 271] NOTE_INSN_BASIC_BLOCK)
(insn 1453 1452 1454 271 (parallel [
            (set (reg:DI 468)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:93 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1454 1453 1455 271 (set (reg:DI 5 di)
        (reg:DI 468)) Topology.cc:93 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 468)
        (nil)))
(call_insn 1455 1454 1456 271 (call (mem:QI (symbol_ref:DI ("_ZNSsD1Ev") [flags 0x41]  <function_decl 0x102ae3b00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) Topology.cc:93 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int -22 [0xffffffffffffffea])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1456 1455 1788 271 (set (reg:DI 441)
        (reg:DI 446)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 446)
        (nil)))
(jump_insn 1788 1456 1789 271 (set (pc)
        (label_ref 1458)) 636 {jump}
     (nil)
 -> 1458)
;;  succ:       273 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 441

(barrier 1789 1788 1615)
;; basic block 272, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 271, next block 273, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       260 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 272 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 272 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 441
(code_label/s 1615 1789 1620 272 113 "" [1 uses])
(note 1620 1615 1616 272 [bb 272] NOTE_INSN_BASIC_BLOCK)
(insn 1616 1620 1458 272 (set (reg:DI 441)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       273 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 441

;; basic block 273, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 272, next block 274, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       272 [100.0%]  (FALLTHRU)
;;              262 [100.0%] 
;;              271 [100.0%] 
;; bb 273 artificial_defs: { }
;; bb 273 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 441
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 441
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 275 469
(code_label 1458 1616 1459 273 103 "" [2 uses])
(note 1459 1458 1460 273 [bb 273] NOTE_INSN_BASIC_BLOCK)
(insn 1460 1459 1461 273 (parallel [
            (set (reg:DI 469)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:280 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1461 1460 1462 273 (set (reg:DI 5 di)
        (reg:DI 469)) Topology.cc:280 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 469)
        (nil)))
(call_insn 1462 1461 1463 273 (call (mem:QI (symbol_ref:DI ("_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev") [flags 0x41]  <function_decl 0x1032d6400 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) Topology.cc:280 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int -23 [0xffffffffffffffe9])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1463 1462 1464 273 (set (reg/f:DI 275 [ D.45034 ])
        (reg:DI 441)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 441)
        (nil)))
(insn 1464 1463 1465 273 (set (reg:DI 5 di)
        (reg/f:DI 275 [ D.45034 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 275 [ D.45034 ])
        (nil)))
(call_insn 1465 1464 1466 273 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x143165200 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 1466 1465 1769)
;; basic block 274, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 273, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       261 [100.0%] 
;; bb 274 artificial_defs: { }
;; bb 274 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1769 1466 1468 274 124 "" [1 uses])
(note 1468 1769 0 274 [bb 274] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void brite::Topology::OtterOutput(char*) (_ZN5brite8Topology11OtterOutputEPc, funcdef_no=1971, decl_uid=38533, symbol_order=570)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 65 n_edges 115 count 65 (    1)
Building IRA IR
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 27.
verify found no changes in insn with uid = 31.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 45.
verify found no changes in insn with uid = 50.
verify found no changes in insn with uid = 54.
verify found no changes in insn with uid = 66.
verify found no changes in insn with uid = 73.
verify found no changes in insn with uid = 79.
verify found no changes in insn with uid = 84.
verify found no changes in insn with uid = 89.
verify found no changes in insn with uid = 94.
verify found no changes in insn with uid = 100.
verify found no changes in insn with uid = 105.
verify found no changes in insn with uid = 110.
verify found no changes in insn with uid = 121.
verify found no changes in insn with uid = 125.
verify found no changes in insn with uid = 133.
verify found no changes in insn with uid = 137.
verify found no changes in insn with uid = 141.
verify found no changes in insn with uid = 150.
verify found no changes in insn with uid = 154.
verify found no changes in insn with uid = 158.
verify found no changes in insn with uid = 167.
verify found no changes in insn with uid = 171.
verify found no changes in insn with uid = 177.
verify found no changes in insn with uid = 182.
verify found no changes in insn with uid = 187.
verify found no changes in insn with uid = 192.
verify found no changes in insn with uid = 197.
verify found no changes in insn with uid = 202.
verify found no changes in insn with uid = 207.
verify found no changes in insn with uid = 212.
verify found no changes in insn with uid = 217.
verify found no changes in insn with uid = 225.
verify found no changes in insn with uid = 236.
verify found no changes in insn with uid = 241.
verify found no changes in insn with uid = 251.
verify found no changes in insn with uid = 255.
verify found no changes in insn with uid = 259.
verify found no changes in insn with uid = 264.
verify found no changes in insn with uid = 268.
verify found no changes in insn with uid = 272.
verify found no changes in insn with uid = 277.
verify found no changes in insn with uid = 281.
verify found no changes in insn with uid = 287.
verify found no changes in insn with uid = 292.
verify found no changes in insn with uid = 297.
verify found no changes in insn with uid = 302.
verify found no changes in insn with uid = 307.
verify found no changes in insn with uid = 312.
verify found no changes in insn with uid = 317.
verify found no changes in insn with uid = 322.
verify found no changes in insn with uid = 330.
verify found no changes in insn with uid = 339.
verify found no changes in insn with uid = 347.
verify found no changes in insn with uid = 351.
verify found no changes in insn with uid = 355.
verify found no changes in insn with uid = 362.
verify found no changes in insn with uid = 371.
verify found no changes in insn with uid = 378.
verify found no changes in insn with uid = 381.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r200: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r200,l0) best DIREG, allocno GENERAL_REGS
    r198: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r198,l0) best AREG, allocno GENERAL_REGS
    r197: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r197,l0) best DIREG, allocno GENERAL_REGS
    r194: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r194,l0) best AREG, allocno GENERAL_REGS
    r193: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r193,l0) best AREG, allocno GENERAL_REGS
    r192: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r192,l0) best DIREG, allocno GENERAL_REGS
    r191: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r191,l0) best DIREG, allocno GENERAL_REGS
    r190: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r190,l0) best DIREG, allocno GENERAL_REGS
    r189: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r189,l0) best DIREG, allocno GENERAL_REGS
    r188: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r188,l0) best DIREG, allocno GENERAL_REGS
    r187: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r187,l0) best SIREG, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r185,l0) best AREG, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r183,l0) best DIREG, allocno GENERAL_REGS
    r182: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a28 (r182,l0) best DIREG, allocno GENERAL_REGS
    r181: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a31 (r181,l0) best DIREG, allocno GENERAL_REGS
    r180: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a35 (r180,l0) best DIREG, allocno GENERAL_REGS
    r179: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a39 (r179,l0) best DIREG, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a41 (r177,l0) best AREG, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a45 (r175,l0) best DIREG, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a62 (r173,l0) best DIREG, allocno GENERAL_REGS
    r172: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a65 (r172,l0) best SIREG, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a71 (r170,l0) best SIREG, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a77 (r168,l0) best SIREG, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a81 (r166,l0) best SIREG, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a86 (r164,l0) best DIREG, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a92 (r162,l0) best DIREG, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a98 (r160,l0) best DIREG, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a100 (r158,l0) best DIREG, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a102 (r156,l0) best DIREG, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a104 (r154,l0) best DIREG, allocno GENERAL_REGS
    r153: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a106 (r153,l0) best DIREG, allocno GENERAL_REGS
    r152: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a107 (r152,l0) best DIREG, allocno GENERAL_REGS
    r151: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a108 (r151,l0) best DIREG, allocno GENERAL_REGS
    r150: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a109 (r150,l0) best DIREG, allocno GENERAL_REGS
    r149: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a110 (r149,l0) best SIREG, allocno GENERAL_REGS
    r148: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a111 (r148,l0) best DREG, allocno GENERAL_REGS
    r147: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a112 (r147,l0) best DIREG, allocno GENERAL_REGS
    r146: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a113 (r146,l0) best DIREG, allocno GENERAL_REGS
    r144: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r144,l0) best DIREG, allocno GENERAL_REGS
    r143: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r143,l0) best AREG, allocno GENERAL_REGS
    r142: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r142,l0) best AREG, allocno GENERAL_REGS
    r141: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r141,l0) best AREG, allocno GENERAL_REGS
    r140: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r140,l0) best AREG, allocno GENERAL_REGS
    r139: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r139,l0) best AREG, allocno GENERAL_REGS
    r138: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a26 (r138,l0) best AREG, allocno GENERAL_REGS
    r137: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r137,l0) best AREG, allocno GENERAL_REGS
    r136: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a29 (r136,l0) best DIREG, allocno GENERAL_REGS
    r135: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a30 (r135,l0) best AREG, allocno GENERAL_REGS
    r134: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r134,l0) best AREG, allocno GENERAL_REGS
    r133: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a32 (r133,l0) best AREG, allocno GENERAL_REGS
    r132: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a33 (r132,l0) best DIREG, allocno GENERAL_REGS
    r131: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a34 (r131,l0) best AREG, allocno GENERAL_REGS
    r130: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r130,l0) best AREG, allocno GENERAL_REGS
    r129: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a36 (r129,l0) best AREG, allocno GENERAL_REGS
    r128: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a37 (r128,l0) best DIREG, allocno GENERAL_REGS
    r127: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a38 (r127,l0) best AREG, allocno GENERAL_REGS
    r126: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r126,l0) best AREG, allocno GENERAL_REGS
    r125: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r125,l0) best DIREG, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a42 (r123,l0) best DIREG, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a50 (r121,l0) best AREG, allocno GENERAL_REGS
    r120: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a51 (r120,l0) best AREG, allocno GENERAL_REGS
    r119: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a53 (r119,l0) best AREG, allocno GENERAL_REGS
    r118: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a54 (r118,l0) best AREG, allocno GENERAL_REGS
    r117: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a56 (r117,l0) best AREG, allocno GENERAL_REGS
    r116: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a57 (r116,l0) best AREG, allocno GENERAL_REGS
    r115: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a59 (r115,l0) best AREG, allocno GENERAL_REGS
    r114: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a60 (r114,l0) best AREG, allocno GENERAL_REGS
    r113: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a61 (r113,l0) best AREG, allocno GENERAL_REGS
    r112: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a63 (r112,l0) best AREG, allocno GENERAL_REGS
    r111: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a64 (r111,l0) best DIREG, allocno GENERAL_REGS
    r110: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a58 (r110,l0) best SIREG, allocno GENERAL_REGS
    r109: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a67 (r109,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r108: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a68 (r108,l0) best AREG, allocno GENERAL_REGS
    r107: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a69 (r107,l0) best AREG, allocno GENERAL_REGS
    r106: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a70 (r106,l0) best DIREG, allocno GENERAL_REGS
    r105: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a55 (r105,l0) best SIREG, allocno GENERAL_REGS
    r104: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a73 (r104,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r103: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a74 (r103,l0) best AREG, allocno GENERAL_REGS
    r102: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a75 (r102,l0) best AREG, allocno GENERAL_REGS
    r101: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a76 (r101,l0) best DIREG, allocno GENERAL_REGS
    r100: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a52 (r100,l0) best AREG, allocno GENERAL_REGS
    r99: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a79 (r99,l0) best AREG, allocno GENERAL_REGS
    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a80 (r98,l0) best DIREG, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a47 (r96,l0) best AREG, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a48 (r95,l0) best DIREG, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a83 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a84 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a85 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a87 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a89 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a90 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a91 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a93 (r87,l0) best DIREG, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a97 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a105 (r83,l0) best AREG, allocno GENERAL_REGS

  a0(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:32 SSE_REGS:32 ALL_SSE_REGS:32 MMX_REGS:37 FP_TOP_SSE_REGS:508 FP_SECOND_SSE_REGS:508 FLOAT_SSE_REGS:508 FLOAT_INT_REGS:508 INT_SSE_REGS:33 FLOAT_INT_SSE_REGS:508 ALL_REGS:508 MEM:6
  a2(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a3(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a4(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a5(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a6(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a7(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a8(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a9(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a10(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:308 INT_SSE_REGS:308 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a11(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a12(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a13(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a14(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a15(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a16(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a17(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a18(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a19(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a20(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a21(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a22(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a23(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a24(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a25(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a26(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a27(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a28(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a29(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a30(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a31(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a32(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a33(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a34(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a35(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a36(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a37(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a38(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a39(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a40(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a41(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a42(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a43(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a44(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a45(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a46(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:416 INT_SSE_REGS:416 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a47(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a48(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a49(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a50(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a51(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a52(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a53(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a54(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a55(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a56(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a57(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a58(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a59(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a60(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a61(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a62(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a63(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a64(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a65(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a66(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a67(r109,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 FP_TOP_REG:18 FP_SECOND_REG:18 FLOAT_REGS:18 SSE_FIRST_REG:0 SSE_REGS:0 ALL_SSE_REGS:0 FP_TOP_SSE_REGS:20 FP_SECOND_SSE_REGS:20 FLOAT_SSE_REGS:20 FLOAT_INT_REGS:18 INT_SSE_REGS:16 FLOAT_INT_SSE_REGS:20 ALL_REGS:20 MEM:2
  a68(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a69(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a70(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a71(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a72(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a73(r104,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 FP_TOP_REG:18 FP_SECOND_REG:18 FLOAT_REGS:18 SSE_FIRST_REG:0 SSE_REGS:0 ALL_SSE_REGS:0 FP_TOP_SSE_REGS:20 FP_SECOND_SSE_REGS:20 FLOAT_SSE_REGS:20 FLOAT_INT_REGS:18 INT_SSE_REGS:16 FLOAT_INT_SSE_REGS:20 ALL_REGS:20 MEM:2
  a74(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a75(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a76(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a77(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a78(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a79(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a80(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a81(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a82(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a83(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a84(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a85(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a86(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a87(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a88(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a89(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a90(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a91(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a92(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a93(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a94(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a95(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a96(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a97(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:308 INT_SSE_REGS:308 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a98(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a99(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a100(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a101(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a102(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a103(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a104(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a105(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a106(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a107(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a108(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a109(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a110(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a111(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a112(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a113(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7

   Insn 381(l0): point = 1
   Insn 380(l0): point = 3
   Insn 379(l0): point = 5
   Insn 378(l0): point = 7
   Insn 377(l0): point = 9
   Insn 376(l0): point = 11
   Insn 430(l0): point = 14
   Insn 448(l0): point = 17
   Insn 372(l0): point = 19
   Insn 371(l0): point = 21
   Insn 370(l0): point = 23
   Insn 369(l0): point = 25
   Insn 436(l0): point = 27
   Insn 446(l0): point = 30
   Insn 363(l0): point = 32
   Insn 362(l0): point = 34
   Insn 361(l0): point = 36
   Insn 360(l0): point = 38
   Insn 426(l0): point = 40
   Insn 444(l0): point = 43
   Insn 355(l0): point = 45
   Insn 354(l0): point = 47
   Insn 353(l0): point = 49
   Insn 351(l0): point = 52
   Insn 350(l0): point = 54
   Insn 349(l0): point = 56
   Insn 347(l0): point = 59
   Insn 346(l0): point = 61
   Insn 345(l0): point = 63
   Insn 255(l0): point = 66
   Insn 254(l0): point = 68
   Insn 253(l0): point = 70
   Insn 252(l0): point = 72
   Insn 251(l0): point = 74
   Insn 250(l0): point = 76
   Insn 249(l0): point = 78
   Insn 343(l0): point = 81
   Insn 342(l0): point = 83
   Insn 340(l0): point = 85
   Insn 339(l0): point = 87
   Insn 338(l0): point = 89
   Insn 337(l0): point = 91
   Insn 336(l0): point = 93
   Insn 335(l0): point = 95
   Insn 333(l0): point = 97
   Insn 332(l0): point = 99
   Insn 331(l0): point = 101
   Insn 330(l0): point = 104
   Insn 329(l0): point = 106
   Insn 328(l0): point = 108
   Insn 327(l0): point = 110
   Insn 326(l0): point = 112
   Insn 322(l0): point = 115
   Insn 321(l0): point = 117
   Insn 320(l0): point = 119
   Insn 319(l0): point = 121
   Insn 317(l0): point = 124
   Insn 316(l0): point = 126
   Insn 315(l0): point = 128
   Insn 313(l0): point = 130
   Insn 312(l0): point = 133
   Insn 311(l0): point = 135
   Insn 310(l0): point = 137
   Insn 308(l0): point = 139
   Insn 307(l0): point = 142
   Insn 306(l0): point = 144
   Insn 305(l0): point = 146
   Insn 303(l0): point = 148
   Insn 302(l0): point = 151
   Insn 301(l0): point = 153
   Insn 300(l0): point = 155
   Insn 298(l0): point = 157
   Insn 297(l0): point = 160
   Insn 296(l0): point = 162
   Insn 295(l0): point = 164
   Insn 293(l0): point = 166
   Insn 292(l0): point = 169
   Insn 291(l0): point = 171
   Insn 290(l0): point = 173
   Insn 288(l0): point = 175
   Insn 287(l0): point = 178
   Insn 286(l0): point = 180
   Insn 285(l0): point = 182
   Insn 284(l0): point = 184
   Insn 282(l0): point = 186
   Insn 281(l0): point = 189
   Insn 280(l0): point = 191
   Insn 279(l0): point = 193
   Insn 278(l0): point = 195
   Insn 277(l0): point = 197
   Insn 276(l0): point = 199
   Insn 275(l0): point = 201
   Insn 273(l0): point = 203
   Insn 272(l0): point = 206
   Insn 271(l0): point = 208
   Insn 269(l0): point = 210
   Insn 268(l0): point = 213
   Insn 267(l0): point = 215
   Insn 266(l0): point = 217
   Insn 265(l0): point = 219
   Insn 264(l0): point = 221
   Insn 263(l0): point = 223
   Insn 262(l0): point = 225
   Insn 260(l0): point = 227
   Insn 259(l0): point = 230
   Insn 258(l0): point = 232
   Insn 256(l0): point = 234
   Insn 441(l0): point = 237
   Insn 244(l0): point = 239
   Insn 243(l0): point = 241
   Insn 242(l0): point = 243
   Insn 241(l0): point = 246
   Insn 240(l0): point = 248
   Insn 239(l0): point = 250
   Insn 238(l0): point = 252
   Insn 237(l0): point = 254
   Insn 236(l0): point = 256
   Insn 235(l0): point = 258
   Insn 234(l0): point = 260
   Insn 121(l0): point = 263
   Insn 120(l0): point = 265
   Insn 119(l0): point = 267
   Insn 118(l0): point = 269
   Insn 117(l0): point = 271
   Insn 116(l0): point = 273
   Insn 232(l0): point = 276
   Insn 231(l0): point = 278
   Insn 229(l0): point = 280
   Insn 228(l0): point = 282
   Insn 226(l0): point = 284
   Insn 225(l0): point = 287
   Insn 224(l0): point = 289
   Insn 223(l0): point = 291
   Insn 222(l0): point = 293
   Insn 219(l0): point = 296
   Insn 217(l0): point = 299
   Insn 216(l0): point = 301
   Insn 215(l0): point = 303
   Insn 213(l0): point = 305
   Insn 212(l0): point = 308
   Insn 211(l0): point = 310
   Insn 210(l0): point = 312
   Insn 208(l0): point = 314
   Insn 207(l0): point = 317
   Insn 206(l0): point = 319
   Insn 205(l0): point = 321
   Insn 203(l0): point = 323
   Insn 202(l0): point = 326
   Insn 201(l0): point = 328
   Insn 200(l0): point = 330
   Insn 198(l0): point = 332
   Insn 197(l0): point = 335
   Insn 196(l0): point = 337
   Insn 195(l0): point = 339
   Insn 193(l0): point = 341
   Insn 192(l0): point = 344
   Insn 191(l0): point = 346
   Insn 190(l0): point = 348
   Insn 188(l0): point = 350
   Insn 187(l0): point = 353
   Insn 186(l0): point = 355
   Insn 185(l0): point = 357
   Insn 183(l0): point = 359
   Insn 182(l0): point = 362
   Insn 181(l0): point = 364
   Insn 180(l0): point = 366
   Insn 178(l0): point = 368
   Insn 177(l0): point = 371
   Insn 176(l0): point = 373
   Insn 175(l0): point = 375
   Insn 174(l0): point = 377
   Insn 172(l0): point = 379
   Insn 171(l0): point = 382
   Insn 170(l0): point = 384
   Insn 168(l0): point = 386
   Insn 167(l0): point = 389
   Insn 166(l0): point = 391
   Insn 165(l0): point = 393
   Insn 164(l0): point = 395
   Insn 163(l0): point = 397
   Insn 162(l0): point = 399
   Insn 161(l0): point = 401
   Insn 159(l0): point = 403
   Insn 158(l0): point = 406
   Insn 157(l0): point = 408
   Insn 155(l0): point = 410
   Insn 154(l0): point = 413
   Insn 153(l0): point = 415
   Insn 151(l0): point = 417
   Insn 150(l0): point = 420
   Insn 149(l0): point = 422
   Insn 148(l0): point = 424
   Insn 147(l0): point = 426
   Insn 146(l0): point = 428
   Insn 145(l0): point = 430
   Insn 144(l0): point = 432
   Insn 142(l0): point = 434
   Insn 141(l0): point = 437
   Insn 140(l0): point = 439
   Insn 138(l0): point = 441
   Insn 137(l0): point = 444
   Insn 136(l0): point = 446
   Insn 134(l0): point = 448
   Insn 133(l0): point = 451
   Insn 132(l0): point = 453
   Insn 131(l0): point = 455
   Insn 130(l0): point = 457
   Insn 129(l0): point = 459
   Insn 128(l0): point = 461
   Insn 126(l0): point = 463
   Insn 125(l0): point = 466
   Insn 124(l0): point = 468
   Insn 122(l0): point = 470
   Insn 439(l0): point = 473
   Insn 112(l0): point = 475
   Insn 110(l0): point = 478
   Insn 109(l0): point = 480
   Insn 108(l0): point = 482
   Insn 106(l0): point = 484
   Insn 105(l0): point = 487
   Insn 104(l0): point = 489
   Insn 103(l0): point = 491
   Insn 101(l0): point = 493
   Insn 100(l0): point = 496
   Insn 99(l0): point = 498
   Insn 98(l0): point = 500
   Insn 97(l0): point = 502
   Insn 95(l0): point = 504
   Insn 94(l0): point = 507
   Insn 93(l0): point = 509
   Insn 92(l0): point = 511
   Insn 91(l0): point = 513
   Insn 89(l0): point = 516
   Insn 88(l0): point = 518
   Insn 87(l0): point = 520
   Insn 85(l0): point = 522
   Insn 84(l0): point = 525
   Insn 83(l0): point = 527
   Insn 82(l0): point = 529
   Insn 80(l0): point = 531
   Insn 79(l0): point = 534
   Insn 78(l0): point = 536
   Insn 77(l0): point = 538
   Insn 76(l0): point = 540
   Insn 74(l0): point = 542
   Insn 73(l0): point = 545
   Insn 72(l0): point = 547
   Insn 71(l0): point = 549
   Insn 70(l0): point = 551
   Insn 66(l0): point = 554
   Insn 65(l0): point = 556
   Insn 64(l0): point = 558
   Insn 63(l0): point = 560
   Insn 62(l0): point = 562
   Insn 60(l0): point = 565
   Insn 59(l0): point = 567
   Insn 58(l0): point = 569
   Insn 57(l0): point = 571
   Insn 55(l0): point = 573
   Insn 54(l0): point = 576
   Insn 53(l0): point = 578
   Insn 52(l0): point = 580
   Insn 51(l0): point = 582
   Insn 50(l0): point = 584
   Insn 49(l0): point = 586
   Insn 48(l0): point = 588
   Insn 47(l0): point = 590
   Insn 46(l0): point = 592
   Insn 45(l0): point = 594
   Insn 44(l0): point = 596
   Insn 43(l0): point = 598
   Insn 42(l0): point = 600
   Insn 41(l0): point = 602
   Insn 40(l0): point = 604
   Insn 38(l0): point = 607
   Insn 37(l0): point = 609
   Insn 36(l0): point = 611
   Insn 35(l0): point = 613
   Insn 34(l0): point = 615
   Insn 32(l0): point = 617
   Insn 31(l0): point = 620
   Insn 30(l0): point = 622
   Insn 29(l0): point = 624
   Insn 27(l0): point = 627
   Insn 26(l0): point = 629
   Insn 25(l0): point = 631
   Insn 24(l0): point = 633
   Insn 23(l0): point = 635
   Insn 22(l0): point = 637
   Insn 21(l0): point = 639
   Insn 19(l0): point = 642
   Insn 18(l0): point = 644
   Insn 17(l0): point = 646
   Insn 16(l0): point = 648
   Insn 15(l0): point = 650
   Insn 14(l0): point = 652
   Insn 13(l0): point = 654
   Insn 12(l0): point = 656
   Insn 11(l0): point = 658
   Insn 10(l0): point = 660
   Insn 9(l0): point = 662
   Insn 8(l0): point = 664
   Insn 7(l0): point = 666
   Insn 3(l0): point = 668
   Insn 2(l0): point = 670
 a0(r144): [4..5]
 a1(r193): [30..32] [17..19] [6..14]
 a2(r200): [10..11]
 a3(r198): [20..27]
 a4(r197): [24..25]
 a5(r194): [33..40]
 a6(r192): [37..38]
 a7(r191): [48..49]
 a8(r190): [55..56]
 a9(r189): [62..63]
 a10(r126): [84..85]
 a11(r188): [90..93]
 a12(r187): [92..95]
 a13(r186): [98..99]
 a14(r185): [100..101]
 a15(r125): [107..108]
 a16(r124): [109..110]
 a17(r184): [111..112]
 a18(r183): [118..121]
 a19(r143): [127..130]
 a20(r142): [136..139]
 a21(r130): [138..227]
 a22(r141): [145..148]
 a23(r140): [154..157]
 a24(r134): [156..203]
 a25(r139): [163..166]
 a26(r138): [172..175]
 a27(r137): [174..186]
 a28(r182): [181..184]
 a29(r136): [192..193]
 a30(r135): [194..195]
 a31(r181): [200..201]
 a32(r133): [209..210]
 a33(r132): [216..217]
 a34(r131): [218..219]
 a35(r180): [224..225]
 a36(r129): [233..234]
 a37(r128): [69..70]
 a38(r127): [71..72]
 a39(r179): [77..78]
 a40(r178): [240..241]
 a41(r177): [242..243]
 a42(r123): [249..250]
 a43(r122): [251..252]
 a44(r176): [253..254]
 a45(r175): [259..260]
 a46(r97): [279..280]
 a47(r96): [283..284]
 a48(r95): [290..291]
 a49(r174): [292..293]
 a50(r121): [302..305]
 a51(r120): [311..314]
 a52(r100): [313..463]
 a53(r119): [320..323]
 a54(r118): [329..332]
 a55(r105): [331..432]
 a56(r117): [338..341]
 a57(r116): [347..350]
 a58(r110): [349..401]
 a59(r115): [356..359]
 a60(r114): [365..368]
 a61(r113): [367..379]
 a62(r173): [374..377]
 a63(r112): [385..386]
 a64(r111): [392..397]
 a65(r172): [394..395]
 a66(r171): [398..399]
 a67(r109): [402..403]
 a68(r108): [409..410]
 a69(r107): [416..417]
 a70(r106): [423..428]
 a71(r170): [425..426]
 a72(r169): [429..430]
 a73(r104): [433..434]
 a74(r103): [440..441]
 a75(r102): [447..448]
 a76(r101): [454..459]
 a77(r168): [456..457]
 a78(r167): [460..461]
 a79(r99): [469..470]
 a80(r98): [266..271]
 a81(r166): [268..269]
 a82(r165): [272..273]
 a83(r94): [481..484]
 a84(r93): [490..493]
 a85(r92): [492..504]
 a86(r164): [499..502]
 a87(r91): [510..511]
 a88(r163): [512..513]
 a89(r90): [519..522]
 a90(r89): [528..531]
 a91(r88): [530..542]
 a92(r162): [537..540]
 a93(r87): [548..549]
 a94(r161): [550..551]
 a95(r86): [568..569]
 a96(r85): [570..571]
 a97(r84): [572..573]
 a98(r160): [579..580]
 a99(r159): [581..582]
 a100(r158): [587..590]
 a101(r157): [591..592]
 a102(r156): [597..602]
 a103(r155): [603..604]
 a104(r154): [610..615]
 a105(r83): [612..617]
 a106(r153): [623..624]
 a107(r152): [630..633]
 a108(r151): [638..639]
 a109(r150): [645..650]
 a110(r149): [647..652]
 a111(r148): [649..654]
 a112(r147): [659..660]
 a113(r146): [665..666]
Compressing live ranges: from 673 to 192 - 28%
Ranges after the compression:
 a0(r144): [0..1]
 a1(r193): [8..9] [2..5]
 a2(r200): [2..3]
 a3(r198): [6..7]
 a4(r197): [6..7]
 a5(r194): [10..11]
 a6(r192): [10..11]
 a7(r191): [12..13]
 a8(r190): [14..15]
 a9(r189): [16..17]
 a10(r126): [24..25]
 a11(r188): [26..27]
 a12(r187): [26..27]
 a13(r186): [28..29]
 a14(r185): [30..31]
 a15(r125): [32..33]
 a16(r124): [34..35]
 a17(r184): [36..37]
 a18(r183): [38..39]
 a19(r143): [40..41]
 a20(r142): [42..43]
 a21(r130): [42..67]
 a22(r141): [44..45]
 a23(r140): [46..47]
 a24(r134): [46..59]
 a25(r139): [48..49]
 a26(r138): [50..51]
 a27(r137): [50..53]
 a28(r182): [52..53]
 a29(r136): [54..55]
 a30(r135): [56..57]
 a31(r181): [58..59]
 a32(r133): [60..61]
 a33(r132): [62..63]
 a34(r131): [64..65]
 a35(r180): [66..67]
 a36(r129): [68..69]
 a37(r128): [18..19]
 a38(r127): [20..21]
 a39(r179): [22..23]
 a40(r178): [70..71]
 a41(r177): [72..73]
 a42(r123): [74..75]
 a43(r122): [76..77]
 a44(r176): [78..79]
 a45(r175): [80..81]
 a46(r97): [86..87]
 a47(r96): [88..89]
 a48(r95): [90..91]
 a49(r174): [92..93]
 a50(r121): [94..95]
 a51(r120): [96..97]
 a52(r100): [96..137]
 a53(r119): [98..99]
 a54(r118): [100..101]
 a55(r105): [100..127]
 a56(r117): [102..103]
 a57(r116): [104..105]
 a58(r110): [104..117]
 a59(r115): [106..107]
 a60(r114): [108..109]
 a61(r113): [108..111]
 a62(r173): [110..111]
 a63(r112): [112..113]
 a64(r111): [114..115]
 a65(r172): [114..115]
 a66(r171): [116..117]
 a67(r109): [118..119]
 a68(r108): [120..121]
 a69(r107): [122..123]
 a70(r106): [124..125]
 a71(r170): [124..125]
 a72(r169): [126..127]
 a73(r104): [128..129]
 a74(r103): [130..131]
 a75(r102): [132..133]
 a76(r101): [134..135]
 a77(r168): [134..135]
 a78(r167): [136..137]
 a79(r99): [138..139]
 a80(r98): [82..83]
 a81(r166): [82..83]
 a82(r165): [84..85]
 a83(r94): [140..141]
 a84(r93): [142..143]
 a85(r92): [142..145]
 a86(r164): [144..145]
 a87(r91): [146..147]
 a88(r163): [148..149]
 a89(r90): [150..151]
 a90(r89): [152..153]
 a91(r88): [152..155]
 a92(r162): [154..155]
 a93(r87): [156..157]
 a94(r161): [158..159]
 a95(r86): [160..161]
 a96(r85): [162..163]
 a97(r84): [164..165]
 a98(r160): [166..167]
 a99(r159): [168..169]
 a100(r158): [170..171]
 a101(r157): [172..173]
 a102(r156): [174..175]
 a103(r155): [176..177]
 a104(r154): [178..179]
 a105(r83): [178..179]
 a106(r153): [180..181]
 a107(r152): [182..183]
 a108(r151): [184..185]
 a109(r150): [186..187]
 a110(r149): [186..187]
 a111(r148): [186..187]
 a112(r147): [188..189]
 a113(r146): [190..191]
  regions=1, blocks=65, points=192
    allocnos=114 (big 0), copies=0, conflicts=0, ranges=115
Disposition:
  105:r83  l0     2   97:r84  l0     0   96:r85  l0     0   95:r86  l0     0
   93:r87  l0     0   91:r88  l0     3   90:r89  l0     0   89:r90  l0     0
   87:r91  l0     0   85:r92  l0     3   84:r93  l0     0   83:r94  l0     0
   48:r95  l0     0   47:r96  l0     0   46:r97  l0     0   80:r98  l0     0
   79:r99  l0     0   52:r100 l0    42   76:r101 l0     0   75:r102 l0     0
   74:r103 l0     0   73:r104 l0    21   55:r105 l0     3   70:r106 l0     0
   69:r107 l0     0   68:r108 l0     0   67:r109 l0    21   58:r110 l0    41
   64:r111 l0     0   63:r112 l0     0   61:r113 l0    43   60:r114 l0     0
   59:r115 l0     0   57:r116 l0     0   56:r117 l0     0   54:r118 l0     0
   53:r119 l0     0   51:r120 l0     0   50:r121 l0     0   43:r122 l0     0
   42:r123 l0     0   16:r124 l0     0   15:r125 l0     0   10:r126 l0     0
   38:r127 l0     0   37:r128 l0     0   36:r129 l0     0   21:r130 l0     3
   34:r131 l0     0   33:r132 l0     0   32:r133 l0     0   24:r134 l0    41
   30:r135 l0     0   29:r136 l0     0   27:r137 l0    42   26:r138 l0     0
   25:r139 l0     0   23:r140 l0     0   22:r141 l0     0   20:r142 l0     0
   19:r143 l0     0    0:r144 l0     0  113:r146 l0     0  112:r147 l0     0
  111:r148 l0     1  110:r149 l0     2  109:r150 l0     0  108:r151 l0     0
  107:r152 l0     0  106:r153 l0     0  104:r154 l0     0  103:r155 l0     0
  102:r156 l0     0  101:r157 l0     0  100:r158 l0     0   99:r159 l0     0
   98:r160 l0     0   94:r161 l0     0   92:r162 l0     0   88:r163 l0     0
   86:r164 l0     0   82:r165 l0     0   81:r166 l0     1   78:r167 l0     0
   77:r168 l0     1   72:r169 l0     0   71:r170 l0     1   66:r171 l0     0
   65:r172 l0     1   62:r173 l0     0   49:r174 l0     0   45:r175 l0     0
   44:r176 l0     0   41:r177 l0     0   40:r178 l0     0   39:r179 l0     0
   35:r180 l0     0   31:r181 l0     0   28:r182 l0     0   18:r183 l0     0
   17:r184 l0     0   14:r185 l0     0   13:r186 l0     0   12:r187 l0     1
   11:r188 l0     0    9:r189 l0     0    8:r190 l0     0    7:r191 l0     0
    6:r192 l0     0    1:r193 l0     3    5:r194 l0     3    4:r197 l0     0
    3:r198 l0     3    2:r200 l0     0
+++Costs: overall -95, reg -95, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void brite::Topology::OtterOutput(char*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0]
;;  ref usage 	r0={70d,45u} r1={74d,4u} r2={68d,1u} r4={101d,35u} r5={133d,67u} r6={1d,64u} r7={1d,130u} r8={66d} r9={66d} r10={66d} r11={66d} r12={66d} r13={66d} r14={66d} r15={66d} r16={1d,63u} r17={104d,4u} r18={66d} r19={66d} r20={1d,114u} r21={67d,2u} r22={67d} r23={67d} r24={67d} r25={67d} r26={67d} r27={67d} r28={67d} r29={66d} r30={66d} r31={66d} r32={66d} r33={66d} r34={66d} r35={66d} r36={66d} r37={67d} r38={67d} r39={66d} r40={66d} r45={66d} r46={66d} r47={66d} r48={66d} r49={66d} r50={66d} r51={66d} r52={66d} r53={66d} r54={66d} r55={66d} r56={66d} r57={66d} r58={66d} r59={66d} r60={66d} r61={66d} r62={66d} r63={66d} r64={66d} r65={66d} r66={66d} r67={66d} r68={66d} r69={66d} r70={66d} r71={66d} r72={66d} r73={66d} r74={66d} r75={66d} r76={66d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={3d,1u} r194={1d,1u} r197={1d,1u} r198={1d,1u} r200={1d,1u} 
;;    total ref usage 5415{4772d,643u,0e} in 305{239 regular + 66 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 146 147 148 149 150
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -952 [0xfffffffffffffc48])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) Topology.cc:283 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -960 [0xfffffffffffffc40])) [0 filename+0 S8 A64])
        (reg:DI 4 si [ filename ])) Topology.cc:283 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ filename ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (parallel [
            (set (reg:DI 146)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -944 [0xfffffffffffffc50])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:285 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg:DI 146)) Topology.cc:285 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 146)
        (nil)))
(call_insn 9 8 10 2 (call (mem:QI (symbol_ref:DI ("_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev") [flags 0x41]  <function_decl 0x1032d6100 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) Topology.cc:285 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 147)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -17 [0xffffffffffffffef])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:286 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 147)) Topology.cc:286 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 147)
        (nil)))
(call_insn 12 11 13 2 (call (mem:QI (symbol_ref:DI ("_ZNSaIcEC1Ev") [flags 0x41]  <function_decl 0x1028b2500 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) Topology.cc:286 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 148)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -17 [0xffffffffffffffef])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:286 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -960 [0xfffffffffffffc40])) [0 filename+0 S8 A64])) Topology.cc:286 89 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg:DI 150)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:286 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 1 dx)
        (reg:DI 148)) Topology.cc:286 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 148)
        (nil)))
(insn 17 16 18 2 (set (reg:DI 4 si)
        (reg:DI 149)) Topology.cc:286 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 149)
        (nil)))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg:DI 150)) Topology.cc:286 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 150)
        (nil)))
(call_insn 19 18 20 2 (call (mem:QI (symbol_ref:DI ("_ZNSsC1EPKcRKSaIcE") [flags 0x41]  <function_decl 0x102aded00 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) Topology.cc:286 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 2 [0x2])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       60 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 151 152
(note 20 19 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 3 (parallel [
            (set (reg:DI 151)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -17 [0xffffffffffffffef])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:286 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 22 21 23 3 (set (reg:DI 5 di)
        (reg:DI 151)) Topology.cc:286 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 151)
        (nil)))
(call_insn 23 22 24 3 (call (mem:QI (symbol_ref:DI ("_ZNSaIcED1Ev") [flags 0x41]  <function_decl 0x1028b2700 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) Topology.cc:286 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 24 23 25 3 (parallel [
            (set (reg:DI 152)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:287 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 25 24 26 3 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC43") [flags 0x2]  <var_decl 0x10421a130 *LC43>)) Topology.cc:287 89 {*movdi_internal}
     (nil))
(insn 26 25 27 3 (set (reg:DI 5 di)
        (reg:DI 152)) Topology.cc:287 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 152)
        (nil)))
(call_insn 27 26 28 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSspLEPKc") [flags 0x41]  <function_decl 0x102aab200 operator+=>) [0 operator+= S1 A8])
            (const_int 0 [0]))) Topology.cc:287 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 153
(note 28 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 4 (parallel [
            (set (reg:DI 153)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:288 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 30 29 31 4 (set (reg:DI 5 di)
        (reg:DI 153)) Topology.cc:288 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 153)
        (nil)))
(call_insn 31 30 385 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNKSs5c_strEv") [flags 0x41]  <function_decl 0x102acd700 c_str>) [0 c_str S1 A8])
            (const_int 0 [0]))) Topology.cc:288 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 154
(note 385 31 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 385 34 5 (set (reg/f:DI 83 [ D.45108 ])
        (reg:DI 0 ax)) Topology.cc:288 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 34 32 35 5 (parallel [
            (set (reg:DI 154)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -944 [0xfffffffffffffc50])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:288 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 35 34 36 5 (set (reg:SI 1 dx)
        (const_int 16 [0x10])) Topology.cc:288 90 {*movsi_internal}
     (nil))
(insn 36 35 37 5 (set (reg:DI 4 si)
        (reg/f:DI 83 [ D.45108 ])) Topology.cc:288 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45108 ])
        (nil)))
(insn 37 36 38 5 (set (reg:DI 5 di)
        (reg:DI 154)) Topology.cc:288 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 154)
        (nil)))
(call_insn 38 37 39 5 (call (mem:QI (symbol_ref:DI ("_ZNSt14basic_ofstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode") [flags 0x41]  <function_decl 0x1032ced00 open>) [0 open S1 A8])
        (const_int 0 [0])) Topology.cc:288 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 155 156 157 158 159 160
(note 39 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 6 (parallel [
            (set (reg:DI 155)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -944 [0xfffffffffffffc50])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:289 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 41 40 42 6 (parallel [
            (set (reg:DI 156)
                (plus:DI (reg:DI 155)
                    (const_int 632 [0x278])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:289 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 155)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 42 41 43 6 (set (reg:SI 1 dx)
        (const_int 260 [0x104])) Topology.cc:289 90 {*movsi_internal}
     (nil))
(insn 43 42 44 6 (set (reg:SI 4 si)
        (const_int 4 [0x4])) Topology.cc:289 90 {*movsi_internal}
     (nil))
(insn 44 43 45 6 (set (reg:DI 5 di)
        (reg:DI 156)) Topology.cc:289 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 156)
        (nil)))
(call_insn 45 44 46 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_") [flags 0x1]  <function_decl 0x102c61e00 setf>) [0 setf S1 A8])
            (const_int 0 [0]))) Topology.cc:289 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 46 45 47 6 (parallel [
            (set (reg:DI 157)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -944 [0xfffffffffffffc50])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:290 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 47 46 48 6 (parallel [
            (set (reg:DI 158)
                (plus:DI (reg:DI 157)
                    (const_int 632 [0x278])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:290 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 157)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 48 47 49 6 (set (reg:DI 4 si)
        (const_int 2 [0x2])) Topology.cc:290 89 {*movdi_internal}
     (nil))
(insn 49 48 50 6 (set (reg:DI 5 di)
        (reg:DI 158)) Topology.cc:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 158)
        (nil)))
(call_insn 50 49 51 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt8ios_base9precisionEl") [flags 0x1]  <function_decl 0x102c6b100 precision>) [0 precision S1 A8])
            (const_int 0 [0]))) Topology.cc:290 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 51 50 52 6 (parallel [
            (set (reg:DI 159)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -944 [0xfffffffffffffc50])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:291 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 52 51 53 6 (parallel [
            (set (reg:DI 160)
                (plus:DI (reg:DI 159)
                    (const_int 632 [0x278])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:291 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 159)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 53 52 54 6 (set (reg:DI 5 di)
        (reg:DI 160)) Topology.cc:291 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 160)
        (nil)))
(call_insn 54 53 386 6 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNKSt9basic_iosIcSt11char_traitsIcEEntEv") [flags 0x41]  <function_decl 0x102f33e00 operator!>) [0 operator! S1 A8])
            (const_int 0 [0]))) Topology.cc:291 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              7 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 84 85 86
(note 386 54 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 55 386 57 7 (set (reg:QI 84 [ D.45109 ])
        (reg:QI 0 ax)) Topology.cc:291 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 57 55 58 7 (set (reg:DI 85 [ D.45110 ])
        (zero_extend:DI (reg:QI 84 [ D.45109 ]))) Topology.cc:291 134 {zero_extendqidi2}
     (expr_list:REG_DEAD (reg:QI 84 [ D.45109 ])
        (nil)))
(insn 58 57 59 7 (set (reg:DI 86 [ D.45110 ])
        (reg:DI 85 [ D.45110 ])) Topology.cc:291 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85 [ D.45110 ])
        (nil)))
(insn 59 58 60 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 86 [ D.45110 ])
            (const_int 0 [0]))) Topology.cc:291 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 86 [ D.45110 ])
        (nil)))
(jump_insn 60 59 61 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) Topology.cc:291 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 68)
;;  succ:       8 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 61 60 62 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 8 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*LC3") [flags 0x2]  <var_decl 0x1041aa2f8 *LC3>)) Topology.cc:291 89 {*movdi_internal}
     (nil))
(insn 63 62 64 8 (set (reg:SI 1 dx)
        (const_int 291 [0x123])) Topology.cc:291 90 {*movsi_internal}
     (nil))
(insn 64 63 65 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC1") [flags 0x2]  <var_decl 0x10417fda8 *LC1>)) Topology.cc:291 89 {*movdi_internal}
     (nil))
(insn 65 64 66 8 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZZN5brite8Topology11OtterOutputEPcE8__func__") [flags 0x1c02]  <var_decl 0x103d9d4c0 __func__>)) Topology.cc:291 89 {*movdi_internal}
     (nil))
(call_insn 66 65 67 8 (call (mem:QI (symbol_ref:DI ("__assert_rtn") [flags 0x41]  <function_decl 0x1035dc600 __assert_rtn>) [0 __assert_rtn S1 A8])
        (const_int 0 [0])) Topology.cc:291 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 4 [0x4])
                        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                            (expr_list:REG_NORETURN (const_int 0 [0])
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 67 66 68)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 87 161
(code_label 68 67 69 9 126 "" [1 uses])
(note 69 68 70 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 9 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -952 [0xfffffffffffffc48])) [0 this+0 S8 A64])) Topology.cc:293 89 {*movdi_internal}
     (nil))
(insn 71 70 72 9 (set (reg/f:DI 87 [ D.45111 ])
        (mem/f/j:DI (reg/f:DI 161) [0 this_9(D)->g+0 S8 A64])) Topology.cc:293 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 161)
        (nil)))
(insn 72 71 73 9 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.45111 ])) Topology.cc:293 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.45111 ])
        (nil)))
(call_insn 73 72 387 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5brite5Graph11GetNumNodesEv") [flags 0x41]  <function_decl 0x10363b800 GetNumNodes>) [0 GetNumNodes S1 A8])
            (const_int 0 [0]))) Topology.cc:293 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              10 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 88 162
(note 387 73 74 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 74 387 76 10 (set (reg:SI 88 [ D.45112 ])
        (reg:SI 0 ax)) Topology.cc:293 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 76 74 77 10 (parallel [
            (set (reg:DI 162)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -944 [0xfffffffffffffc50])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:293 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 77 76 78 10 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC44") [flags 0x2]  <var_decl 0x10421a1c8 *LC44>)) Topology.cc:293 89 {*movdi_internal}
     (nil))
(insn 78 77 79 10 (set (reg:DI 5 di)
        (reg:DI 162)) Topology.cc:293 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 162)
        (nil)))
(call_insn 79 78 388 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:293 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              11 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 89
(note 388 79 80 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 80 388 82 11 (set (reg/f:DI 89 [ D.45113 ])
        (reg:DI 0 ax)) Topology.cc:293 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 82 80 83 11 (set (reg:SI 4 si)
        (reg:SI 88 [ D.45112 ])) Topology.cc:293 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88 [ D.45112 ])
        (nil)))
(insn 83 82 84 11 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.45113 ])) Topology.cc:293 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.45113 ])
        (nil)))
(call_insn 84 83 389 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x102fb5700 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:293 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              12 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 90
(note 389 84 85 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 85 389 87 12 (set (reg/f:DI 90 [ D.45113 ])
        (reg:DI 0 ax)) Topology.cc:293 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 87 85 88 12 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC12") [flags 0x2]  <var_decl 0x1041aac78 *LC12>)) Topology.cc:293 89 {*movdi_internal}
     (nil))
(insn 88 87 89 12 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.45113 ])) Topology.cc:293 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.45113 ])
        (nil)))
(call_insn 89 88 90 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:293 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 91 163
(note 90 89 91 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 13 (set (reg/f:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -952 [0xfffffffffffffc48])) [0 this+0 S8 A64])) Topology.cc:294 89 {*movdi_internal}
     (nil))
(insn 92 91 93 13 (set (reg/f:DI 91 [ D.45111 ])
        (mem/f/j:DI (reg/f:DI 163) [0 this_9(D)->g+0 S8 A64])) Topology.cc:294 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 163)
        (nil)))
(insn 93 92 94 13 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.45111 ])) Topology.cc:294 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.45111 ])
        (nil)))
(call_insn 94 93 390 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5brite5Graph11GetNumEdgesEv") [flags 0x41]  <function_decl 0x10363b900 GetNumEdges>) [0 GetNumEdges S1 A8])
            (const_int 0 [0]))) Topology.cc:294 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              14 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 92 164
(note 390 94 95 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 95 390 97 14 (set (reg:SI 92 [ D.45112 ])
        (reg:SI 0 ax)) Topology.cc:294 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 97 95 98 14 (parallel [
            (set (reg:DI 164)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -944 [0xfffffffffffffc50])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:294 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 98 97 99 14 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC45") [flags 0x2]  <var_decl 0x10421a260 *LC45>)) Topology.cc:294 89 {*movdi_internal}
     (nil))
(insn 99 98 100 14 (set (reg:DI 5 di)
        (reg:DI 164)) Topology.cc:294 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 164)
        (nil)))
(call_insn 100 99 391 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:294 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              15 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 93
(note 391 100 101 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 101 391 103 15 (set (reg/f:DI 93 [ D.45113 ])
        (reg:DI 0 ax)) Topology.cc:294 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 103 101 104 15 (set (reg:SI 4 si)
        (reg:SI 92 [ D.45112 ])) Topology.cc:294 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92 [ D.45112 ])
        (nil)))
(insn 104 103 105 15 (set (reg:DI 5 di)
        (reg/f:DI 93 [ D.45113 ])) Topology.cc:294 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.45113 ])
        (nil)))
(call_insn 105 104 392 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x102fb5700 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:294 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              16 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 94
(note 392 105 106 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 106 392 108 16 (set (reg/f:DI 94 [ D.45113 ])
        (reg:DI 0 ax)) Topology.cc:294 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 108 106 109 16 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC12") [flags 0x2]  <var_decl 0x1041aac78 *LC12>)) Topology.cc:294 89 {*movdi_internal}
     (nil))
(insn 109 108 110 16 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.45113 ])) Topology.cc:294 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.45113 ])
        (nil)))
(call_insn 110 109 111 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:294 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 111 110 112 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 439 17 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) Topology.cc:296 90 {*movsi_internal}
     (nil))
(jump_insn 439 112 440 17 (set (pc)
        (label_ref 220)) Topology.cc:296 636 {jump}
     (nil)
 -> 220)
;;  succ:       38 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 440 439 230)
;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       39
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 98 165 166
(code_label 230 440 115 18 128 "" [1 uses])
(note 115 230 116 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 18 (set (reg/f:DI 165)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -952 [0xfffffffffffffc48])) [0 this+0 S8 A64])) Topology.cc:301 89 {*movdi_internal}
     (nil))
(insn 117 116 118 18 (set (reg/f:DI 98 [ D.45111 ])
        (mem/f/j:DI (reg/f:DI 165) [0 this_9(D)->g+0 S8 A64])) Topology.cc:301 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 165)
        (nil)))
(insn 118 117 119 18 (set (reg:SI 166)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) Topology.cc:301 90 {*movsi_internal}
     (nil))
(insn 119 118 120 18 (set (reg:SI 4 si)
        (reg:SI 166)) Topology.cc:301 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 166)
        (nil)))
(insn 120 119 121 18 (set (reg:DI 5 di)
        (reg/f:DI 98 [ D.45111 ])) Topology.cc:301 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98 [ D.45111 ])
        (nil)))
(call_insn 121 120 393 18 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5brite5Graph10GetNodePtrEi") [flags 0x41]  <function_decl 0x10363b400 GetNodePtr>) [0 GetNodePtr S1 A8])
            (const_int 0 [0]))) Topology.cc:301 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              19 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 99
(note 393 121 122 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 122 393 124 19 (set (reg/f:DI 99 [ D.45114 ])
        (reg:DI 0 ax)) Topology.cc:301 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 124 122 125 19 (set (reg:DI 5 di)
        (reg/f:DI 99 [ D.45114 ])) Topology.cc:301 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99 [ D.45114 ])
        (nil)))
(call_insn 125 124 394 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode12GetOutDegreeEv") [flags 0x41]  <function_decl 0x1035e6600 GetOutDegree>) [0 GetOutDegree S1 A8])
            (const_int 0 [0]))) Topology.cc:301 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              20 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 100 101 167 168
(note 394 125 126 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 126 394 128 20 (set (reg:SI 100 [ D.45112 ])
        (reg:SI 0 ax)) Topology.cc:301 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 128 126 129 20 (set (reg/f:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -952 [0xfffffffffffffc48])) [0 this+0 S8 A64])) Topology.cc:300 89 {*movdi_internal}
     (nil))
(insn 129 128 130 20 (set (reg/f:DI 101 [ D.45111 ])
        (mem/f/j:DI (reg/f:DI 167) [0 this_9(D)->g+0 S8 A64])) Topology.cc:300 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 167)
        (nil)))
(insn 130 129 131 20 (set (reg:SI 168)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) Topology.cc:300 90 {*movsi_internal}
     (nil))
(insn 131 130 132 20 (set (reg:SI 4 si)
        (reg:SI 168)) Topology.cc:300 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 168)
        (nil)))
(insn 132 131 133 20 (set (reg:DI 5 di)
        (reg/f:DI 101 [ D.45111 ])) Topology.cc:300 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101 [ D.45111 ])
        (nil)))
(call_insn 133 132 395 20 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5brite5Graph10GetNodePtrEi") [flags 0x41]  <function_decl 0x10363b400 GetNodePtr>) [0 GetNodePtr S1 A8])
            (const_int 0 [0]))) Topology.cc:300 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              21 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 102
(note 395 133 134 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 134 395 136 21 (set (reg/f:DI 102 [ D.45114 ])
        (reg:DI 0 ax)) Topology.cc:300 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 136 134 137 21 (set (reg:DI 5 di)
        (reg/f:DI 102 [ D.45114 ])) Topology.cc:300 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102 [ D.45114 ])
        (nil)))
(call_insn 137 136 396 21 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:300 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              22 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 103
(note 396 137 138 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 138 396 140 22 (set (reg/f:DI 103 [ D.45115 ])
        (reg:DI 0 ax)) Topology.cc:300 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 140 138 141 22 (set (reg:DI 5 di)
        (reg/f:DI 103 [ D.45115 ])) Topology.cc:300 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103 [ D.45115 ])
        (nil)))
(call_insn 141 140 397 22 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite8NodeConf9GetCoordYEv") [flags 0x41]  <function_decl 0x1035f8d00 GetCoordY>) [0 GetCoordY S1 A8])
            (const_int 0 [0]))) Topology.cc:300 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              23 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 100

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 100
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 104 105 106 169 170
(note 397 141 142 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 142 397 144 23 (set (reg:DF 104 [ D.45116 ])
        (reg:DF 21 xmm0)) Topology.cc:300 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 144 142 145 23 (set (reg:SI 105 [ D.45112 ])
        (fix:SI (reg:DF 104 [ D.45116 ]))) Topology.cc:300 172 {fix_truncdfsi_sse}
     (expr_list:REG_DEAD (reg:DF 104 [ D.45116 ])
        (nil)))
(insn 145 144 146 23 (set (reg/f:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -952 [0xfffffffffffffc48])) [0 this+0 S8 A64])) Topology.cc:299 89 {*movdi_internal}
     (nil))
(insn 146 145 147 23 (set (reg/f:DI 106 [ D.45111 ])
        (mem/f/j:DI (reg/f:DI 169) [0 this_9(D)->g+0 S8 A64])) Topology.cc:299 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 169)
        (nil)))
(insn 147 146 148 23 (set (reg:SI 170)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) Topology.cc:299 90 {*movsi_internal}
     (nil))
(insn 148 147 149 23 (set (reg:SI 4 si)
        (reg:SI 170)) Topology.cc:299 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 170)
        (nil)))
(insn 149 148 150 23 (set (reg:DI 5 di)
        (reg/f:DI 106 [ D.45111 ])) Topology.cc:299 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106 [ D.45111 ])
        (nil)))
(call_insn 150 149 398 23 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5brite5Graph10GetNodePtrEi") [flags 0x41]  <function_decl 0x10363b400 GetNodePtr>) [0 GetNodePtr S1 A8])
            (const_int 0 [0]))) Topology.cc:299 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              24 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 105

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 105
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 107
(note 398 150 151 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 151 398 153 24 (set (reg/f:DI 107 [ D.45114 ])
        (reg:DI 0 ax)) Topology.cc:299 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 153 151 154 24 (set (reg:DI 5 di)
        (reg/f:DI 107 [ D.45114 ])) Topology.cc:299 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 107 [ D.45114 ])
        (nil)))
(call_insn 154 153 399 24 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:299 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              25 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 105

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 105
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 108
(note 399 154 155 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 155 399 157 25 (set (reg/f:DI 108 [ D.45115 ])
        (reg:DI 0 ax)) Topology.cc:299 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 157 155 158 25 (set (reg:DI 5 di)
        (reg/f:DI 108 [ D.45115 ])) Topology.cc:299 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 108 [ D.45115 ])
        (nil)))
(call_insn 158 157 400 25 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite8NodeConf9GetCoordXEv") [flags 0x41]  <function_decl 0x1035f8c00 GetCoordX>) [0 GetCoordX S1 A8])
            (const_int 0 [0]))) Topology.cc:299 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              26 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 100 105

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 100 105
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 109 110 111 171 172
(note 400 158 159 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 159 400 161 26 (set (reg:DF 109 [ D.45116 ])
        (reg:DF 21 xmm0)) Topology.cc:299 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 161 159 162 26 (set (reg:SI 110 [ D.45112 ])
        (fix:SI (reg:DF 109 [ D.45116 ]))) Topology.cc:299 172 {fix_truncdfsi_sse}
     (expr_list:REG_DEAD (reg:DF 109 [ D.45116 ])
        (nil)))
(insn 162 161 163 26 (set (reg/f:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -952 [0xfffffffffffffc48])) [0 this+0 S8 A64])) Topology.cc:298 89 {*movdi_internal}
     (nil))
(insn 163 162 164 26 (set (reg/f:DI 111 [ D.45111 ])
        (mem/f/j:DI (reg/f:DI 171) [0 this_9(D)->g+0 S8 A64])) Topology.cc:298 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 171)
        (nil)))
(insn 164 163 165 26 (set (reg:SI 172)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) Topology.cc:298 90 {*movsi_internal}
     (nil))
(insn 165 164 166 26 (set (reg:SI 4 si)
        (reg:SI 172)) Topology.cc:298 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 172)
        (nil)))
(insn 166 165 167 26 (set (reg:DI 5 di)
        (reg/f:DI 111 [ D.45111 ])) Topology.cc:298 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 111 [ D.45111 ])
        (nil)))
(call_insn 167 166 401 26 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5brite5Graph10GetNodePtrEi") [flags 0x41]  <function_decl 0x10363b400 GetNodePtr>) [0 GetNodePtr S1 A8])
            (const_int 0 [0]))) Topology.cc:298 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              27 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 105 110

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 105 110
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 112
(note 401 167 168 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 168 401 170 27 (set (reg/f:DI 112 [ D.45114 ])
        (reg:DI 0 ax)) Topology.cc:298 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 170 168 171 27 (set (reg:DI 5 di)
        (reg/f:DI 112 [ D.45114 ])) Topology.cc:298 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 112 [ D.45114 ])
        (nil)))
(call_insn 171 170 402 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode5GetIdEv") [flags 0x41]  <function_decl 0x1035e6e00 GetId>) [0 GetId S1 A8])
            (const_int 0 [0]))) Topology.cc:298 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              28 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 105 110

;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 105 110
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 113 173
(note 402 171 172 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 172 402 174 28 (set (reg:SI 113 [ D.45112 ])
        (reg:SI 0 ax)) Topology.cc:298 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 174 172 175 28 (parallel [
            (set (reg:DI 173)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -944 [0xfffffffffffffc50])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:298 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 175 174 176 28 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC46") [flags 0x2]  <var_decl 0x10421a2f8 *LC46>)) Topology.cc:298 89 {*movdi_internal}
     (nil))
(insn 176 175 177 28 (set (reg:DI 5 di)
        (reg:DI 173)) Topology.cc:298 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 173)
        (nil)))
(call_insn 177 176 403 28 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:298 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              29 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 105 110 113

;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 105 110 113
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 114
(note 403 177 178 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 178 403 180 29 (set (reg/f:DI 114 [ D.45113 ])
        (reg:DI 0 ax)) Topology.cc:298 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 180 178 181 29 (set (reg:SI 4 si)
        (reg:SI 113 [ D.45112 ])) Topology.cc:298 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 113 [ D.45112 ])
        (nil)))
(insn 181 180 182 29 (set (reg:DI 5 di)
        (reg/f:DI 114 [ D.45113 ])) Topology.cc:298 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 114 [ D.45113 ])
        (nil)))
(call_insn 182 181 404 29 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x102fb5700 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:298 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              30 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 105 110

;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       29 (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 105 110
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 115
(note 404 182 183 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 183 404 185 30 (set (reg/f:DI 115 [ D.45113 ])
        (reg:DI 0 ax)) Topology.cc:298 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 185 183 186 30 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC13") [flags 0x2]  <var_decl 0x1041aad10 *LC13>)) Topology.cc:298 89 {*movdi_internal}
     (nil))
(insn 186 185 187 30 (set (reg:DI 5 di)
        (reg/f:DI 115 [ D.45113 ])) Topology.cc:298 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 115 [ D.45113 ])
        (nil)))
(call_insn 187 186 405 30 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:298 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              31 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 105 110

;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       30 (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 105 110
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 110
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 116
(note 405 187 188 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 188 405 190 31 (set (reg/f:DI 116 [ D.45113 ])
        (reg:DI 0 ax)) Topology.cc:298 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 190 188 191 31 (set (reg:SI 4 si)
        (reg:SI 110 [ D.45112 ])) Topology.cc:299 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 110 [ D.45112 ])
        (nil)))
(insn 191 190 192 31 (set (reg:DI 5 di)
        (reg/f:DI 116 [ D.45113 ])) Topology.cc:299 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 116 [ D.45113 ])
        (nil)))
(call_insn 192 191 406 31 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x102fb5700 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:299 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              32 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 105

;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       31 (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 105
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 117
(note 406 192 193 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 193 406 195 32 (set (reg/f:DI 117 [ D.45113 ])
        (reg:DI 0 ax)) Topology.cc:299 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 195 193 196 32 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC13") [flags 0x2]  <var_decl 0x1041aad10 *LC13>)) Topology.cc:299 89 {*movdi_internal}
     (nil))
(insn 196 195 197 32 (set (reg:DI 5 di)
        (reg/f:DI 117 [ D.45113 ])) Topology.cc:299 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 117 [ D.45113 ])
        (nil)))
(call_insn 197 196 407 32 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:299 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              33 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 105

;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       32 (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 105
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 118
(note 407 197 198 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 198 407 200 33 (set (reg/f:DI 118 [ D.45113 ])
        (reg:DI 0 ax)) Topology.cc:299 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 200 198 201 33 (set (reg:SI 4 si)
        (reg:SI 105 [ D.45112 ])) Topology.cc:300 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 105 [ D.45112 ])
        (nil)))
(insn 201 200 202 33 (set (reg:DI 5 di)
        (reg/f:DI 118 [ D.45113 ])) Topology.cc:300 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 118 [ D.45113 ])
        (nil)))
(call_insn 202 201 408 33 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x102fb5700 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:300 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              34 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100

;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       33 (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 119
(note 408 202 203 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 203 408 205 34 (set (reg/f:DI 119 [ D.45113 ])
        (reg:DI 0 ax)) Topology.cc:300 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 205 203 206 34 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC13") [flags 0x2]  <var_decl 0x1041aad10 *LC13>)) Topology.cc:300 89 {*movdi_internal}
     (nil))
(insn 206 205 207 34 (set (reg:DI 5 di)
        (reg/f:DI 119 [ D.45113 ])) Topology.cc:300 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 119 [ D.45113 ])
        (nil)))
(call_insn 207 206 409 34 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:300 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              35 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100

;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       34 (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 120
(note 409 207 208 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 208 409 210 35 (set (reg/f:DI 120 [ D.45113 ])
        (reg:DI 0 ax)) Topology.cc:300 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 210 208 211 35 (set (reg:SI 4 si)
        (reg:SI 100 [ D.45112 ])) Topology.cc:301 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 100 [ D.45112 ])
        (nil)))
(insn 211 210 212 35 (set (reg:DI 5 di)
        (reg/f:DI 120 [ D.45113 ])) Topology.cc:301 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 120 [ D.45113 ])
        (nil)))
(call_insn 212 211 410 35 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x102fb5700 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:301 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              36 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       35 (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 121
(note 410 212 213 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 213 410 215 36 (set (reg/f:DI 121 [ D.45113 ])
        (reg:DI 0 ax)) Topology.cc:301 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 215 213 216 36 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC12") [flags 0x2]  <var_decl 0x1041aac78 *LC12>)) Topology.cc:301 89 {*movdi_internal}
     (nil))
(insn 216 215 217 36 (set (reg:DI 5 di)
        (reg/f:DI 121 [ D.45113 ])) Topology.cc:301 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 121 [ D.45113 ])
        (nil)))
(call_insn 217 216 218 36 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:301 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              37 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       36 (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 218 217 219 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 219 218 220 37 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:296 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       38 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       37 (FALLTHRU,DFS_BACK)
;;              17 [100.0%] 
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 95 174
(code_label 220 219 221 38 127 "" [1 uses])
(note 221 220 222 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 222 221 223 38 (set (reg/f:DI 174)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -952 [0xfffffffffffffc48])) [0 this+0 S8 A64])) Topology.cc:296 89 {*movdi_internal}
     (nil))
(insn 223 222 224 38 (set (reg/f:DI 95 [ D.45111 ])
        (mem/f/j:DI (reg/f:DI 174) [0 this_9(D)->g+0 S8 A64])) Topology.cc:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 174)
        (nil)))
(insn 224 223 225 38 (set (reg:DI 5 di)
        (reg/f:DI 95 [ D.45111 ])) Topology.cc:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.45111 ])
        (nil)))
(call_insn 225 224 411 38 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5brite5Graph11GetNumNodesEv") [flags 0x41]  <function_decl 0x10363b800 GetNumNodes>) [0 GetNumNodes S1 A8])
            (const_int 0 [0]))) Topology.cc:296 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              39 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       38 (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 96 97
(note 411 225 226 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 226 411 228 39 (set (reg:SI 96 [ D.45112 ])
        (reg:SI 0 ax)) Topology.cc:296 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 228 226 229 39 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 96 [ D.45112 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) Topology.cc:296 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 96 [ D.45112 ])
        (nil)))
(insn 229 228 231 39 (set (reg:QI 97 [ D.45109 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) Topology.cc:296 592 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
(insn 231 229 232 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 97 [ D.45109 ])
            (const_int 0 [0]))) Topology.cc:296 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 97 [ D.45109 ])
        (nil)))
(jump_insn 232 231 233 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 230)
            (pc))) Topology.cc:296 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 230)
;;  succ:       18
;;              40 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       39 (FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 122 123 175 176
(note 233 232 234 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 234 233 235 40 (parallel [
            (set (reg:DI 175)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:304 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 235 234 236 40 (set (reg:DI 5 di)
        (reg:DI 175)) Topology.cc:304 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 175)
        (nil)))
(call_insn 236 235 237 40 (call (mem:QI (symbol_ref/i:DI ("_ZNSt14_List_iteratorIPN5brite4EdgeEEC1Ev") [flags 0x1]  <function_decl 0x103d5da00 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) Topology.cc:304 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 237 236 238 40 (set (reg/f:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -952 [0xfffffffffffffc48])) [0 this+0 S8 A64])) Topology.cc:305 89 {*movdi_internal}
     (nil))
(insn 238 237 239 40 (set (reg/f:DI 122 [ D.45111 ])
        (mem/f/j:DI (reg/f:DI 176) [0 this_9(D)->g+0 S8 A64])) Topology.cc:305 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 176)
        (nil)))
(insn 239 238 240 40 (parallel [
            (set (reg/f:DI 123 [ D.45117 ])
                (plus:DI (reg/f:DI 122 [ D.45111 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:305 221 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 122 [ D.45111 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 240 239 241 40 (set (reg:DI 5 di)
        (reg/f:DI 123 [ D.45117 ])) Topology.cc:305 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 123 [ D.45117 ])
        (nil)))
(call_insn 241 240 412 40 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt4listIPN5brite4EdgeESaIS2_EE5beginEv") [flags 0x1]  <function_decl 0x1036f0200 begin>) [0 begin S1 A8])
            (const_int 0 [0]))) Topology.cc:305 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              41 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       40 (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 177 178
(note 412 241 242 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 242 412 243 41 (set (reg:DI 177)
        (reg:DI 0 ax)) Topology.cc:305 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 243 242 244 41 (set (reg:DI 178)
        (reg:DI 177)) Topology.cc:305 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 177)
        (nil)))
(insn 244 243 441 41 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 el+0 S8 A64])
        (reg:DI 178)) Topology.cc:305 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 178)
        (nil)))
(jump_insn 441 244 442 41 (set (pc)
        (label_ref 324)) Topology.cc:305 636 {jump}
     (nil)
 -> 324)
;;  succ:       55 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 442 441 341)
;; basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       56
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 127 128 179
(code_label 341 442 248 42 130 "" [1 uses])
(note 248 341 249 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 249 248 250 42 (parallel [
            (set (reg:DI 179)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:309 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 250 249 251 42 (set (reg:DI 5 di)
        (reg:DI 179)) Topology.cc:309 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 179)
        (nil)))
(call_insn 251 250 252 42 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:309 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 252 251 253 42 (set (reg/f:DI 127 [ D.45118 ])
        (reg:DI 0 ax)) Topology.cc:309 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 253 252 254 42 (set (reg/f:DI 128 [ D.45119 ])
        (mem/f:DI (reg/f:DI 127 [ D.45118 ]) [0 *_77+0 S8 A64])) Topology.cc:309 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 127 [ D.45118 ])
        (nil)))
(insn 254 253 255 42 (set (reg:DI 5 di)
        (reg/f:DI 128 [ D.45119 ])) Topology.cc:309 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 128 [ D.45119 ])
        (nil)))
(call_insn 255 254 413 42 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge6GetDstEv") [flags 0x41]  <function_decl 0x103612d00 GetDst>) [0 GetDst S1 A8])
            (const_int 0 [0]))) Topology.cc:309 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              43 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42 (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 129
(note 413 255 256 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 256 413 258 43 (set (reg/f:DI 129 [ D.45114 ])
        (reg:DI 0 ax)) Topology.cc:309 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 258 256 259 43 (set (reg:DI 5 di)
        (reg/f:DI 129 [ D.45114 ])) Topology.cc:309 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 129 [ D.45114 ])
        (nil)))
(call_insn 259 258 414 43 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode5GetIdEv") [flags 0x41]  <function_decl 0x1035e6e00 GetId>) [0 GetId S1 A8])
            (const_int 0 [0]))) Topology.cc:309 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              44 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       43 (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 130 131 132 180
(note 414 259 260 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 260 414 262 44 (set (reg:SI 130 [ D.45112 ])
        (reg:SI 0 ax)) Topology.cc:309 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 262 260 263 44 (parallel [
            (set (reg:DI 180)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:308 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 263 262 264 44 (set (reg:DI 5 di)
        (reg:DI 180)) Topology.cc:308 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 180)
        (nil)))
(call_insn 264 263 265 44 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:308 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 265 264 266 44 (set (reg/f:DI 131 [ D.45118 ])
        (reg:DI 0 ax)) Topology.cc:308 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 266 265 267 44 (set (reg/f:DI 132 [ D.45119 ])
        (mem/f:DI (reg/f:DI 131 [ D.45118 ]) [0 *_83+0 S8 A64])) Topology.cc:308 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 131 [ D.45118 ])
        (nil)))
(insn 267 266 268 44 (set (reg:DI 5 di)
        (reg/f:DI 132 [ D.45119 ])) Topology.cc:308 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 132 [ D.45119 ])
        (nil)))
(call_insn 268 267 415 44 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge6GetSrcEv") [flags 0x41]  <function_decl 0x103612c00 GetSrc>) [0 GetSrc S1 A8])
            (const_int 0 [0]))) Topology.cc:308 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              45 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 130

;; basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       44 (FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 130
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 133
(note 415 268 269 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 269 415 271 45 (set (reg/f:DI 133 [ D.45114 ])
        (reg:DI 0 ax)) Topology.cc:308 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 271 269 272 45 (set (reg:DI 5 di)
        (reg/f:DI 133 [ D.45114 ])) Topology.cc:308 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 133 [ D.45114 ])
        (nil)))
(call_insn 272 271 416 45 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode5GetIdEv") [flags 0x41]  <function_decl 0x1035e6e00 GetId>) [0 GetId S1 A8])
            (const_int 0 [0]))) Topology.cc:308 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              46 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 130

;; basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       45 (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 130
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 134 135 136 181
(note 416 272 273 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 273 416 275 46 (set (reg:SI 134 [ D.45112 ])
        (reg:SI 0 ax)) Topology.cc:308 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 275 273 276 46 (parallel [
            (set (reg:DI 181)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:307 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 276 275 277 46 (set (reg:DI 5 di)
        (reg:DI 181)) Topology.cc:307 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 181)
        (nil)))
(call_insn 277 276 278 46 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:307 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 278 277 279 46 (set (reg/f:DI 135 [ D.45118 ])
        (reg:DI 0 ax)) Topology.cc:307 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 279 278 280 46 (set (reg/f:DI 136 [ D.45119 ])
        (mem/f:DI (reg/f:DI 135 [ D.45118 ]) [0 *_89+0 S8 A64])) Topology.cc:307 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 135 [ D.45118 ])
        (nil)))
(insn 280 279 281 46 (set (reg:DI 5 di)
        (reg/f:DI 136 [ D.45119 ])) Topology.cc:307 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 136 [ D.45119 ])
        (nil)))
(call_insn 281 280 417 46 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge5GetIdEv") [flags 0x41]  <function_decl 0x103612600 GetId>) [0 GetId S1 A8])
            (const_int 0 [0]))) Topology.cc:307 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              47 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 130 134

;; basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       46 (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 130 134
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 137 182
(note 417 281 282 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 282 417 284 47 (set (reg:SI 137 [ D.45112 ])
        (reg:SI 0 ax)) Topology.cc:307 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 284 282 285 47 (parallel [
            (set (reg:DI 182)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -944 [0xfffffffffffffc50])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:307 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 285 284 286 47 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC47") [flags 0x2]  <var_decl 0x10421a390 *LC47>)) Topology.cc:307 89 {*movdi_internal}
     (nil))
(insn 286 285 287 47 (set (reg:DI 5 di)
        (reg:DI 182)) Topology.cc:307 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 182)
        (nil)))
(call_insn 287 286 418 47 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:307 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              48 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 130 134 137

;; basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       47 (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 130 134 137
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 137
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 138
(note 418 287 288 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 288 418 290 48 (set (reg/f:DI 138 [ D.45113 ])
        (reg:DI 0 ax)) Topology.cc:307 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 290 288 291 48 (set (reg:SI 4 si)
        (reg:SI 137 [ D.45112 ])) Topology.cc:307 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 137 [ D.45112 ])
        (nil)))
(insn 291 290 292 48 (set (reg:DI 5 di)
        (reg/f:DI 138 [ D.45113 ])) Topology.cc:307 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 138 [ D.45113 ])
        (nil)))
(call_insn 292 291 419 48 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x102fb5700 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:307 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              49 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 130 134

;; basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48 (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 130 134
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 139
(note 419 292 293 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 293 419 295 49 (set (reg/f:DI 139 [ D.45113 ])
        (reg:DI 0 ax)) Topology.cc:307 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 295 293 296 49 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC13") [flags 0x2]  <var_decl 0x1041aad10 *LC13>)) Topology.cc:307 89 {*movdi_internal}
     (nil))
(insn 296 295 297 49 (set (reg:DI 5 di)
        (reg/f:DI 139 [ D.45113 ])) Topology.cc:307 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 139 [ D.45113 ])
        (nil)))
(call_insn 297 296 420 49 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:307 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              50 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 130 134

;; basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 49, next block 51, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       49 (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 130 134
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 140
(note 420 297 298 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 298 420 300 50 (set (reg/f:DI 140 [ D.45113 ])
        (reg:DI 0 ax)) Topology.cc:307 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 300 298 301 50 (set (reg:SI 4 si)
        (reg:SI 134 [ D.45112 ])) Topology.cc:308 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 134 [ D.45112 ])
        (nil)))
(insn 301 300 302 50 (set (reg:DI 5 di)
        (reg/f:DI 140 [ D.45113 ])) Topology.cc:308 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 140 [ D.45113 ])
        (nil)))
(call_insn 302 301 421 50 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x102fb5700 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:308 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              51 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 130

;; basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 50, next block 52, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       50 (FALLTHRU)
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 130
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 141
(note 421 302 303 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 303 421 305 51 (set (reg/f:DI 141 [ D.45113 ])
        (reg:DI 0 ax)) Topology.cc:308 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 305 303 306 51 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC13") [flags 0x2]  <var_decl 0x1041aad10 *LC13>)) Topology.cc:308 89 {*movdi_internal}
     (nil))
(insn 306 305 307 51 (set (reg:DI 5 di)
        (reg/f:DI 141 [ D.45113 ])) Topology.cc:308 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 141 [ D.45113 ])
        (nil)))
(call_insn 307 306 422 51 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:308 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              52 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 130

;; basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 51, next block 53, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       51 (FALLTHRU)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 130
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 130
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 142
(note 422 307 308 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 308 422 310 52 (set (reg/f:DI 142 [ D.45113 ])
        (reg:DI 0 ax)) Topology.cc:308 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 310 308 311 52 (set (reg:SI 4 si)
        (reg:SI 130 [ D.45112 ])) Topology.cc:309 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 130 [ D.45112 ])
        (nil)))
(insn 311 310 312 52 (set (reg:DI 5 di)
        (reg/f:DI 142 [ D.45113 ])) Topology.cc:309 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 142 [ D.45113 ])
        (nil)))
(call_insn 312 311 423 52 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x102fb5700 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:309 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              53 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 52, next block 54, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       52 (FALLTHRU)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 143
(note 423 312 313 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 313 423 315 53 (set (reg/f:DI 143 [ D.45113 ])
        (reg:DI 0 ax)) Topology.cc:309 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 315 313 316 53 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC48") [flags 0x2]  <var_decl 0x10421a428 *LC48>)) Topology.cc:309 89 {*movdi_internal}
     (nil))
(insn 316 315 317 53 (set (reg:DI 5 di)
        (reg/f:DI 143 [ D.45113 ])) Topology.cc:309 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 143 [ D.45113 ])
        (nil)))
(call_insn 317 316 318 53 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:309 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              54 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 53, next block 55, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       53 (FALLTHRU)
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 183
(note 318 317 319 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 319 318 320 54 (parallel [
            (set (reg:DI 183)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:305 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 320 319 321 54 (set (reg:SI 4 si)
        (const_int 0 [0])) Topology.cc:305 90 {*movsi_internal}
     (nil))
(insn 321 320 322 54 (set (reg:DI 5 di)
        (reg:DI 183)) Topology.cc:305 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 183)
        (nil)))
(call_insn 322 321 324 54 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt14_List_iteratorIPN5brite4EdgeEEppEi") [flags 0x1]  <function_decl 0x103d5d300 operator++>) [0 operator++ S1 A8])
            (const_int 0 [0]))) Topology.cc:305 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       55 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 55, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 54, next block 56, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       54 (FALLTHRU,DFS_BACK)
;;              41 [100.0%] 
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 124 125 184
(code_label 324 322 325 55 129 "" [1 uses])
(note 325 324 326 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 326 325 327 55 (set (reg/f:DI 184)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -952 [0xfffffffffffffc48])) [0 this+0 S8 A64])) Topology.cc:305 89 {*movdi_internal}
     (nil))
(insn 327 326 328 55 (set (reg/f:DI 124 [ D.45111 ])
        (mem/f/j:DI (reg/f:DI 184) [0 this_9(D)->g+0 S8 A64])) Topology.cc:305 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 184)
        (nil)))
(insn 328 327 329 55 (parallel [
            (set (reg/f:DI 125 [ D.45117 ])
                (plus:DI (reg/f:DI 124 [ D.45111 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:305 221 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 124 [ D.45111 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 329 328 330 55 (set (reg:DI 5 di)
        (reg/f:DI 125 [ D.45117 ])) Topology.cc:305 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 125 [ D.45117 ])
        (nil)))
(call_insn 330 329 424 55 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt4listIPN5brite4EdgeESaIS2_EE3endEv") [flags 0x1]  <function_decl 0x1036f0400 end>) [0 end S1 A8])
            (const_int 0 [0]))) Topology.cc:305 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              56 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 56, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 55, next block 57, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       55 (FALLTHRU)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 126 185 186 187 188
(note 424 330 331 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 331 424 332 56 (set (reg:DI 185)
        (reg:DI 0 ax)) Topology.cc:305 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 332 331 333 56 (set (reg:DI 186)
        (reg:DI 185)) Topology.cc:305 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 185)
        (nil)))
(insn 333 332 335 56 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 D.41836+0 S8 A64])
        (reg:DI 186)) Topology.cc:305 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 186)
        (nil)))
(insn 335 333 336 56 (parallel [
            (set (reg:DI 187)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:305 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 336 335 337 56 (parallel [
            (set (reg:DI 188)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:305 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 337 336 338 56 (set (reg:DI 4 si)
        (reg:DI 187)) Topology.cc:305 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 187)
        (nil)))
(insn 338 337 339 56 (set (reg:DI 5 di)
        (reg:DI 188)) Topology.cc:305 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 188)
        (nil)))
(call_insn 339 338 340 56 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEneERKS3_") [flags 0x1]  <function_decl 0x103d5d700 operator!=>) [0 operator!= S1 A8])
            (const_int 0 [0]))) Topology.cc:305 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 340 339 342 56 (set (reg:QI 126 [ D.45109 ])
        (reg:QI 0 ax)) Topology.cc:305 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 342 340 343 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 126 [ D.45109 ])
            (const_int 0 [0]))) Topology.cc:305 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 126 [ D.45109 ])
        (nil)))
(jump_insn 343 342 344 56 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 341)
            (pc))) Topology.cc:305 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 341)
;;  succ:       42
;;              57 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 57, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 56, next block 58, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       56 (FALLTHRU)
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 189
(note 344 343 345 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 345 344 346 57 (parallel [
            (set (reg:DI 189)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -944 [0xfffffffffffffc50])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:312 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 346 345 347 57 (set (reg:DI 5 di)
        (reg:DI 189)) Topology.cc:312 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 189)
        (nil)))
(call_insn 347 346 348 57 (call (mem:QI (symbol_ref:DI ("_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv") [flags 0x41]  <function_decl 0x1032cee00 close>) [0 close S1 A8])
        (const_int 0 [0])) Topology.cc:312 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              58 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 57, next block 59, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       57 (FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 190
(note 348 347 349 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 349 348 350 58 (parallel [
            (set (reg:DI 190)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:286 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 350 349 351 58 (set (reg:DI 5 di)
        (reg:DI 190)) Topology.cc:286 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 190)
        (nil)))
(call_insn 351 350 352 58 (call (mem:QI (symbol_ref:DI ("_ZNSsD1Ev") [flags 0x41]  <function_decl 0x102ae3b00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) Topology.cc:286 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 3 [0x3])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       62 (ABNORMAL,ABNORMAL_CALL,EH)
;;              59 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 59, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 58, next block 60, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       58 (FALLTHRU)
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 191
(note 352 351 353 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 353 352 354 59 (parallel [
            (set (reg:DI 191)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -944 [0xfffffffffffffc50])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:312 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 354 353 355 59 (set (reg:DI 5 di)
        (reg:DI 191)) Topology.cc:312 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 191)
        (nil)))
(call_insn 355 354 444 59 (call (mem:QI (symbol_ref:DI ("_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev") [flags 0x41]  <function_decl 0x1032d6400 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) Topology.cc:312 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 444 355 445 59 (set (pc)
        (label_ref 443)) 636 {jump}
     (nil)
 -> 443)
;;  succ:       64 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 445 444 425)
;; basic block 60, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 59, next block 61, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 60 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 192 193 194
(code_label/s 425 445 428 60 134 "" [1 uses])
(note 428 425 426 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 426 428 360 60 (set (reg:DI 194)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 360 426 361 60 (parallel [
            (set (reg:DI 192)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -17 [0xffffffffffffffef])))
            (clobber (reg:CC 17 flags))
        ]) 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 361 360 362 60 (set (reg:DI 5 di)
        (reg:DI 192)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 192)
        (nil)))
(call_insn 362 361 363 60 (call (mem:QI (symbol_ref:DI ("_ZNSaIcED1Ev") [flags 0x41]  <function_decl 0x1028b2700 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 363 362 446 60 (set (reg:DI 193)
        (reg:DI 194)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 194)
        (nil)))
(jump_insn 446 363 447 60 (set (pc)
        (label_ref 374)) 636 {jump}
     (nil)
 -> 374)
;;  succ:       63 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 193

(barrier 447 446 435)
;; basic block 61, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 60, next block 62, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (ABNORMAL,ABNORMAL_CALL,EH)
;;              4 (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 (ABNORMAL,ABNORMAL_CALL,EH)
;;              6 (ABNORMAL,ABNORMAL_CALL,EH)
;;              8 (ABNORMAL,ABNORMAL_CALL,EH)
;;              9 (ABNORMAL,ABNORMAL_CALL,EH)
;;              10 (ABNORMAL,ABNORMAL_CALL,EH)
;;              11 (ABNORMAL,ABNORMAL_CALL,EH)
;;              12 (ABNORMAL,ABNORMAL_CALL,EH)
;;              13 (ABNORMAL,ABNORMAL_CALL,EH)
;;              14 (ABNORMAL,ABNORMAL_CALL,EH)
;;              15 (ABNORMAL,ABNORMAL_CALL,EH)
;;              16 (ABNORMAL,ABNORMAL_CALL,EH)
;;              18 (ABNORMAL,ABNORMAL_CALL,EH)
;;              19 (ABNORMAL,ABNORMAL_CALL,EH)
;;              20 (ABNORMAL,ABNORMAL_CALL,EH)
;;              21 (ABNORMAL,ABNORMAL_CALL,EH)
;;              22 (ABNORMAL,ABNORMAL_CALL,EH)
;;              23 (ABNORMAL,ABNORMAL_CALL,EH)
;;              24 (ABNORMAL,ABNORMAL_CALL,EH)
;;              25 (ABNORMAL,ABNORMAL_CALL,EH)
;;              26 (ABNORMAL,ABNORMAL_CALL,EH)
;;              27 (ABNORMAL,ABNORMAL_CALL,EH)
;;              28 (ABNORMAL,ABNORMAL_CALL,EH)
;;              29 (ABNORMAL,ABNORMAL_CALL,EH)
;;              30 (ABNORMAL,ABNORMAL_CALL,EH)
;;              31 (ABNORMAL,ABNORMAL_CALL,EH)
;;              32 (ABNORMAL,ABNORMAL_CALL,EH)
;;              33 (ABNORMAL,ABNORMAL_CALL,EH)
;;              34 (ABNORMAL,ABNORMAL_CALL,EH)
;;              35 (ABNORMAL,ABNORMAL_CALL,EH)
;;              36 (ABNORMAL,ABNORMAL_CALL,EH)
;;              38 (ABNORMAL,ABNORMAL_CALL,EH)
;;              40 (ABNORMAL,ABNORMAL_CALL,EH)
;;              42 (ABNORMAL,ABNORMAL_CALL,EH)
;;              43 (ABNORMAL,ABNORMAL_CALL,EH)
;;              44 (ABNORMAL,ABNORMAL_CALL,EH)
;;              45 (ABNORMAL,ABNORMAL_CALL,EH)
;;              46 (ABNORMAL,ABNORMAL_CALL,EH)
;;              47 (ABNORMAL,ABNORMAL_CALL,EH)
;;              48 (ABNORMAL,ABNORMAL_CALL,EH)
;;              49 (ABNORMAL,ABNORMAL_CALL,EH)
;;              50 (ABNORMAL,ABNORMAL_CALL,EH)
;;              51 (ABNORMAL,ABNORMAL_CALL,EH)
;;              52 (ABNORMAL,ABNORMAL_CALL,EH)
;;              53 (ABNORMAL,ABNORMAL_CALL,EH)
;;              55 (ABNORMAL,ABNORMAL_CALL,EH)
;;              57 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 61 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 193 197 198
(code_label/s 435 447 438 61 136 "" [1 uses])
(note 438 435 436 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 436 438 369 61 (set (reg:DI 198)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 369 436 370 61 (parallel [
            (set (reg:DI 197)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:286 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 370 369 371 61 (set (reg:DI 5 di)
        (reg:DI 197)) Topology.cc:286 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 197)
        (nil)))
(call_insn 371 370 372 61 (call (mem:QI (symbol_ref:DI ("_ZNSsD1Ev") [flags 0x41]  <function_decl 0x102ae3b00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) Topology.cc:286 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int -8 [0xfffffffffffffff8])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 372 371 448 61 (set (reg:DI 193)
        (reg:DI 198)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 198)
        (nil)))
(jump_insn 448 372 449 61 (set (pc)
        (label_ref 374)) 636 {jump}
     (nil)
 -> 374)
;;  succ:       63 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 193

(barrier 449 448 429)
;; basic block 62, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 61, next block 63, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       58 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 62 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 193
(code_label/s 429 449 434 62 135 "" [1 uses])
(note 434 429 430 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 430 434 374 62 (set (reg:DI 193)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       63 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 193

;; basic block 63, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 62, next block 64, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       62 [100.0%]  (FALLTHRU)
;;              60 [100.0%] 
;;              61 [100.0%] 
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 193
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 193
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 144 200
(code_label 374 430 375 63 132 "" [2 uses])
(note 375 374 376 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 376 375 377 63 (parallel [
            (set (reg:DI 200)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -944 [0xfffffffffffffc50])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:312 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 377 376 378 63 (set (reg:DI 5 di)
        (reg:DI 200)) Topology.cc:312 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 200)
        (nil)))
(call_insn 378 377 379 63 (call (mem:QI (symbol_ref:DI ("_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev") [flags 0x41]  <function_decl 0x1032d6400 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) Topology.cc:312 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int -9 [0xfffffffffffffff7])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 379 378 380 63 (set (reg/f:DI 144 [ D.45107 ])
        (reg:DI 193)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 193)
        (nil)))
(insn 380 379 381 63 (set (reg:DI 5 di)
        (reg/f:DI 144 [ D.45107 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 144 [ D.45107 ])
        (nil)))
(call_insn 381 380 382 63 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x143165200 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 382 381 443)
;; basic block 64, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 63, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       59 [100.0%] 
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 443 382 384 64 137 "" [1 uses])
(note 384 443 0 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void brite::Topology::Classify() (_ZN5brite8Topology8ClassifyEv, funcdef_no=1972, decl_uid=38537, symbol_order=571)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 114 n_edges 167 count 114 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 31.
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 52.
verify found no changes in insn with uid = 67.
verify found no changes in insn with uid = 81.
verify found no changes in insn with uid = 87.
verify found no changes in insn with uid = 92.
verify found no changes in insn with uid = 101.
verify found no changes in insn with uid = 104.
verify found no changes in insn with uid = 117.
verify found no changes in insn with uid = 121.
verify found no changes in insn with uid = 128.
verify found no changes in insn with uid = 132.
verify found no changes in insn with uid = 140.
verify found no changes in insn with uid = 145.
verify found no changes in insn with uid = 157.
verify found no changes in insn with uid = 169.
verify found no changes in insn with uid = 178.
verify found no changes in insn with uid = 182.
verify found no changes in insn with uid = 187.
verify found no changes in insn with uid = 191.
verify found no changes in insn with uid = 218.
verify found no changes in insn with uid = 224.
verify found no changes in insn with uid = 227.
verify found no changes in insn with uid = 234.
verify found no changes in insn with uid = 237.
verify found no changes in insn with uid = 245.
verify found no changes in insn with uid = 248.
verify found no changes in insn with uid = 255.
verify found no changes in insn with uid = 258.
verify found no changes in insn with uid = 266.
verify found no changes in insn with uid = 269.
verify found no changes in insn with uid = 276.
verify found no changes in insn with uid = 279.
verify found no changes in insn with uid = 287.
verify found no changes in insn with uid = 290.
verify found no changes in insn with uid = 297.
verify found no changes in insn with uid = 300.
verify found no changes in insn with uid = 319.
verify found no changes in insn with uid = 323.
verify found no changes in insn with uid = 326.
verify found no changes in insn with uid = 339.
verify found no changes in insn with uid = 343.
verify found no changes in insn with uid = 347.
verify found no changes in insn with uid = 354.
verify found no changes in insn with uid = 358.
verify found no changes in insn with uid = 362.
verify found no changes in insn with uid = 370.
verify found no changes in insn with uid = 378.
verify found no changes in insn with uid = 386.
verify found no changes in insn with uid = 401.
verify found no changes in insn with uid = 406.
verify found no changes in insn with uid = 409.
verify found no changes in insn with uid = 416.
verify found no changes in insn with uid = 419.
verify found no changes in insn with uid = 427.
verify found no changes in insn with uid = 430.
verify found no changes in insn with uid = 437.
verify found no changes in insn with uid = 440.
verify found no changes in insn with uid = 469.
verify found no changes in insn with uid = 472.
verify found no changes in insn with uid = 481.
verify found no changes in insn with uid = 485.
verify found no changes in insn with uid = 488.
verify found no changes in insn with uid = 495.
verify found no changes in insn with uid = 499.
verify found no changes in insn with uid = 502.
verify found no changes in insn with uid = 510.
verify found no changes in insn with uid = 514.
verify found no changes in insn with uid = 517.
verify found no changes in insn with uid = 524.
verify found no changes in insn with uid = 528.
verify found no changes in insn with uid = 531.
verify found no changes in insn with uid = 554.
verify found no changes in insn with uid = 565.
verify found no changes in insn with uid = 568.
verify found no changes in insn with uid = 576.
verify found no changes in insn with uid = 584.
verify found no changes in insn with uid = 587.
verify found no changes in insn with uid = 603.
verify found no changes in insn with uid = 607.
verify found no changes in insn with uid = 615.
verify found no changes in insn with uid = 619.
verify found no changes in insn with uid = 627.
verify found no changes in insn with uid = 631.
verify found no changes in insn with uid = 643.
verify found no changes in insn with uid = 647.
verify found no changes in insn with uid = 655.
verify found no changes in insn with uid = 659.
verify found no changes in insn with uid = 667.
verify found no changes in insn with uid = 671.
verify found no changes in insn with uid = 682.
verify found no changes in insn with uid = 692.
verify found no changes in insn with uid = 704.
verify found no changes in insn with uid = 713.
verify found no changes in insn with uid = 717.
verify found no changes in insn with uid = 722.
verify found no changes in insn with uid = 726.
verify found no changes in insn with uid = 731.
verify found no changes in insn with uid = 735.
verify found no changes in insn with uid = 738.
verify found no changes in insn with uid = 745.
verify found no changes in insn with uid = 749.
verify found no changes in insn with uid = 752.
verify found no changes in insn with uid = 760.
verify found no changes in insn with uid = 764.
verify found no changes in insn with uid = 767.
verify found no changes in insn with uid = 774.
verify found no changes in insn with uid = 778.
verify found no changes in insn with uid = 781.
verify found no changes in insn with uid = 800.
verify found no changes in insn with uid = 803.
verify found no changes in insn with uid = 812.
verify found no changes in insn with uid = 815.
verify found no changes in insn with uid = 822.
verify found no changes in insn with uid = 825.
verify found no changes in insn with uid = 833.
verify found no changes in insn with uid = 836.
verify found no changes in insn with uid = 843.
verify found no changes in insn with uid = 846.
verify found no changes in insn with uid = 865.
verify found no changes in insn with uid = 869.
verify found no changes in insn with uid = 873.
verify found no changes in insn with uid = 880.
verify found no changes in insn with uid = 884.
verify found no changes in insn with uid = 888.
verify found no changes in insn with uid = 897.
verify found no changes in insn with uid = 900.
verify found no changes in insn with uid = 907.
verify found no changes in insn with uid = 910.
verify found no changes in insn with uid = 918.
verify found no changes in insn with uid = 921.
verify found no changes in insn with uid = 928.
verify found no changes in insn with uid = 931.
verify found no changes in insn with uid = 950.
verify found no changes in insn with uid = 954.
verify found no changes in insn with uid = 958.
verify found no changes in insn with uid = 965.
verify found no changes in insn with uid = 969.
verify found no changes in insn with uid = 973.
verify found no changes in insn with uid = 981.
verify found no changes in insn with uid = 989.
verify found no changes in insn with uid = 997.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r364: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r364,l0) best DIREG, allocno GENERAL_REGS
    r363: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r363,l0) best SIREG, allocno GENERAL_REGS
    r362: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r362,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r361: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r361,l0) best AREG, allocno GENERAL_REGS
    r360: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r360,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r359: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r359,l0) best DIREG, allocno GENERAL_REGS
    r358: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r358,l0) best DIREG, allocno GENERAL_REGS
    r357: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r357,l0) best DIREG, allocno GENERAL_REGS
    r356: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r356,l0) best DIREG, allocno GENERAL_REGS
    r355: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r355,l0) best DIREG, allocno GENERAL_REGS
    r354: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a26 (r354,l0) best DIREG, allocno GENERAL_REGS
    r353: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a29 (r353,l0) best DIREG, allocno GENERAL_REGS
    r352: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a33 (r352,l0) best DIREG, allocno GENERAL_REGS
    r351: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a37 (r351,l0) best DIREG, allocno GENERAL_REGS
    r350: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a41 (r350,l0) best DIREG, allocno GENERAL_REGS
    r349: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a44 (r349,l0) best DIREG, allocno GENERAL_REGS
    r348: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a47 (r348,l0) best DIREG, allocno GENERAL_REGS
    r347: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a50 (r347,l0) best DIREG, allocno GENERAL_REGS
    r346: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a54 (r346,l0) best DIREG, allocno GENERAL_REGS
    r345: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a60 (r345,l0) best DIREG, allocno GENERAL_REGS
    r344: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a65 (r344,l0) best DIREG, allocno GENERAL_REGS
    r343: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a70 (r343,l0) best DIREG, allocno GENERAL_REGS
    r342: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a75 (r342,l0) best DIREG, allocno GENERAL_REGS
    r341: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a79 (r341,l0) best DIREG, allocno GENERAL_REGS
    r340: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a83 (r340,l0) best DIREG, allocno GENERAL_REGS
    r339: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r339,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r338: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a85 (r338,l0) best AREG, allocno GENERAL_REGS
    r337: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r337,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r336: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r336,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r335: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a94 (r335,l0) best DIREG, allocno GENERAL_REGS
    r334: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a96 (r334,l0) best DIREG, allocno GENERAL_REGS
    r333: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a98 (r333,l0) best DIREG, allocno GENERAL_REGS
    r332: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a100 (r332,l0) best DIREG, allocno GENERAL_REGS
    r331: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a102 (r331,l0) best DIREG, allocno GENERAL_REGS
    r330: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a104 (r330,l0) best DIREG, allocno GENERAL_REGS
    r329: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a108 (r329,l0) best DIREG, allocno GENERAL_REGS
    r328: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a110 (r328,l0) best DIREG, allocno GENERAL_REGS
    r327: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a111 (r327,l0) best SIREG, allocno GENERAL_REGS
    r326: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r326,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r325: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a113 (r325,l0) best AREG, allocno GENERAL_REGS
    r324: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r324,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r323: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a119 (r323,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r322: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a120 (r322,l0) best DIREG, allocno GENERAL_REGS
    r321: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a126 (r321,l0) best DIREG, allocno GENERAL_REGS
    r320: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a131 (r320,l0) best DIREG, allocno GENERAL_REGS
    r319: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a136 (r319,l0) best DIREG, allocno GENERAL_REGS
    r318: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a141 (r318,l0) best DIREG, allocno GENERAL_REGS
    r317: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a142 (r317,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r316: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a143 (r316,l0) best AREG, allocno GENERAL_REGS
    r315: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a148 (r315,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r314: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a149 (r314,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r313: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a153 (r313,l0) best DIREG, allocno GENERAL_REGS
    r312: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a156 (r312,l0) best DIREG, allocno GENERAL_REGS
    r311: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a159 (r311,l0) best DIREG, allocno GENERAL_REGS
    r310: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a162 (r310,l0) best DIREG, allocno GENERAL_REGS
    r309: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a165 (r309,l0) best SIREG, allocno GENERAL_REGS
    r308: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a166 (r308,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r307: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a168 (r307,l0) best DIREG, allocno GENERAL_REGS
    r306: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a169 (r306,l0) best SIREG, allocno GENERAL_REGS
    r305: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a170 (r305,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r304: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a171 (r304,l0) best AREG, allocno GENERAL_REGS
    r303: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a174 (r303,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r302: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a175 (r302,l0) best DIREG, allocno GENERAL_REGS
    r301: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a179 (r301,l0) best DIREG, allocno GENERAL_REGS
    r300: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a183 (r300,l0) best DIREG, allocno GENERAL_REGS
    r299: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a189 (r299,l0) best DIREG, allocno GENERAL_REGS
    r298: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a193 (r298,l0) best DIREG, allocno GENERAL_REGS
    r297: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a196 (r297,l0) best DIREG, allocno GENERAL_REGS
    r296: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a199 (r296,l0) best DIREG, allocno GENERAL_REGS
    r295: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a202 (r295,l0) best DIREG, allocno GENERAL_REGS
    r294: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a205 (r294,l0) best DIREG, allocno GENERAL_REGS
    r293: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a208 (r293,l0) best DIREG, allocno GENERAL_REGS
    r292: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a211 (r292,l0) best DIREG, allocno GENERAL_REGS
    r291: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a214 (r291,l0) best DIREG, allocno GENERAL_REGS
    r290: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a221 (r290,l0) best DIREG, allocno GENERAL_REGS
    r289: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a225 (r289,l0) best DIREG, allocno GENERAL_REGS
    r288: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a226 (r288,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r287: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a227 (r287,l0) best AREG, allocno GENERAL_REGS
    r286: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a230 (r286,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r285: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a234 (r285,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r284: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a235 (r284,l0) best DIREG, allocno GENERAL_REGS
    r283: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a237 (r283,l0) best DIREG, allocno GENERAL_REGS
    r282: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a239 (r282,l0) best DIREG, allocno GENERAL_REGS
    r281: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a243 (r281,l0) best DIREG, allocno GENERAL_REGS
    r280: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a248 (r280,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r279: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a249 (r279,l0) best DIREG, allocno GENERAL_REGS
    r278: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a255 (r278,l0) best SIREG, allocno GENERAL_REGS
    r277: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a256 (r277,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r276: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a258 (r276,l0) best DIREG, allocno GENERAL_REGS
    r275: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a259 (r275,l0) best SIREG, allocno GENERAL_REGS
    r274: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a260 (r274,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r273: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a261 (r273,l0) best AREG, allocno GENERAL_REGS
    r272: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a264 (r272,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r271: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a265 (r271,l0) best DIREG, allocno GENERAL_REGS
    r270: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a267 (r270,l0) best SIREG, allocno GENERAL_REGS
    r269: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a268 (r269,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r268: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a269 (r268,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r267: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a271 (r267,l0) best DIREG, allocno GENERAL_REGS
    r266: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a272 (r266,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r265: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a273 (r265,l0) best AREG, allocno GENERAL_REGS
    r264: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a276 (r264,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r263: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a277 (r263,l0) best DIREG, allocno GENERAL_REGS
    r258: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r258,l0) best AREG, allocno GENERAL_REGS
    r257: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r257,l0) best DIREG, allocno GENERAL_REGS
    r256: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r256,l0) best AREG, allocno GENERAL_REGS
    r255: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r255,l0) best AREG, allocno GENERAL_REGS
    r254: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r254,l0) best DIREG, allocno GENERAL_REGS
    r253: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r253,l0) best AREG, allocno GENERAL_REGS
    r252: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r252,l0) best AREG, allocno GENERAL_REGS
    r251: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r251,l0) best AREG, allocno GENERAL_REGS
    r250: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r250,l0) best AREG, allocno GENERAL_REGS
    r249: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r249,l0) best AREG, allocno GENERAL_REGS
    r248: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r248,l0) best AREG, allocno GENERAL_REGS
    r247: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r247,l0) best AREG, allocno GENERAL_REGS
    r246: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r246,l0) best AREG, allocno GENERAL_REGS
    r245: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a28 (r245,l0) best AREG, allocno GENERAL_REGS
    r244: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a30 (r244,l0) best AREG, allocno GENERAL_REGS
    r243: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a31 (r243,l0) best DIREG, allocno GENERAL_REGS
    r242: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a32 (r242,l0) best AREG, allocno GENERAL_REGS
    r241: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a34 (r241,l0) best AREG, allocno GENERAL_REGS
    r240: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a35 (r240,l0) best DIREG, allocno GENERAL_REGS
    r239: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a36 (r239,l0) best AREG, allocno GENERAL_REGS
    r238: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a39 (r238,l0) best AREG, allocno GENERAL_REGS
    r237: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a40 (r237,l0) best AREG, allocno GENERAL_REGS
    r236: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a42 (r236,l0) best AREG, allocno GENERAL_REGS
    r235: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a43 (r235,l0) best AREG, allocno GENERAL_REGS
    r234: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a45 (r234,l0) best AREG, allocno GENERAL_REGS
    r233: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a46 (r233,l0) best AREG, allocno GENERAL_REGS
    r232: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a48 (r232,l0) best AREG, allocno GENERAL_REGS
    r231: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a49 (r231,l0) best AREG, allocno GENERAL_REGS
    r230: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r230,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r229: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a52 (r229,l0) best AREG, allocno GENERAL_REGS
    r228: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a53 (r228,l0) best AREG, allocno GENERAL_REGS
    r227: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a56 (r227,l0) best AREG, allocno GENERAL_REGS
    r226: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a57 (r226,l0) best AREG, allocno GENERAL_REGS
    r225: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a58 (r225,l0) best DIREG, allocno GENERAL_REGS
    r224: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a59 (r224,l0) best AREG, allocno GENERAL_REGS
    r223: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a61 (r223,l0) best AREG, allocno GENERAL_REGS
    r222: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a62 (r222,l0) best AREG, allocno GENERAL_REGS
    r221: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a63 (r221,l0) best DIREG, allocno GENERAL_REGS
    r220: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a64 (r220,l0) best AREG, allocno GENERAL_REGS
    r219: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a66 (r219,l0) best AREG, allocno GENERAL_REGS
    r218: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a67 (r218,l0) best AREG, allocno GENERAL_REGS
    r217: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a68 (r217,l0) best DIREG, allocno GENERAL_REGS
    r216: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a69 (r216,l0) best AREG, allocno GENERAL_REGS
    r215: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a71 (r215,l0) best AREG, allocno GENERAL_REGS
    r214: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a72 (r214,l0) best AREG, allocno GENERAL_REGS
    r213: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a73 (r213,l0) best DIREG, allocno GENERAL_REGS
    r212: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a74 (r212,l0) best AREG, allocno GENERAL_REGS
    r211: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a76 (r211,l0) best AREG, allocno GENERAL_REGS
    r210: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a77 (r210,l0) best DIREG, allocno GENERAL_REGS
    r209: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a78 (r209,l0) best AREG, allocno GENERAL_REGS
    r208: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a80 (r208,l0) best AREG, allocno GENERAL_REGS
    r207: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a81 (r207,l0) best DIREG, allocno GENERAL_REGS
    r206: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a82 (r206,l0) best AREG, allocno GENERAL_REGS
    r205: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r205,l0) best AREG, allocno GENERAL_REGS
    r204: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r204,l0) best DIREG, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a86 (r202,l0) best DIREG, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a93 (r200,l0) best AREG, allocno GENERAL_REGS
    r199: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a95 (r199,l0) best AREG, allocno GENERAL_REGS
    r198: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a97 (r198,l0) best AREG, allocno GENERAL_REGS
    r197: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a99 (r197,l0) best AREG, allocno GENERAL_REGS
    r196: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a101 (r196,l0) best AREG, allocno GENERAL_REGS
    r195: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a103 (r195,l0) best AREG, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a106 (r193,l0) best AREG, allocno GENERAL_REGS
    r192: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a107 (r192,l0) best AREG, allocno GENERAL_REGS
    r191: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a122 (r191,l0) best AREG, allocno GENERAL_REGS
    r190: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a123 (r190,l0) best AREG, allocno GENERAL_REGS
    r189: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a124 (r189,l0) best DIREG, allocno GENERAL_REGS
    r188: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a125 (r188,l0) best AREG, allocno GENERAL_REGS
    r187: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a127 (r187,l0) best AREG, allocno GENERAL_REGS
    r186: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a128 (r186,l0) best AREG, allocno GENERAL_REGS
    r185: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a129 (r185,l0) best DIREG, allocno GENERAL_REGS
    r184: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a130 (r184,l0) best AREG, allocno GENERAL_REGS
    r183: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a132 (r183,l0) best AREG, allocno GENERAL_REGS
    r182: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a133 (r182,l0) best AREG, allocno GENERAL_REGS
    r181: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a134 (r181,l0) best DIREG, allocno GENERAL_REGS
    r180: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a135 (r180,l0) best AREG, allocno GENERAL_REGS
    r179: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a137 (r179,l0) best AREG, allocno GENERAL_REGS
    r178: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a138 (r178,l0) best AREG, allocno GENERAL_REGS
    r177: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a139 (r177,l0) best DIREG, allocno GENERAL_REGS
    r176: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a140 (r176,l0) best AREG, allocno GENERAL_REGS
    r175: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a109 (r175,l0) best AREG, allocno GENERAL_REGS
    r174: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a114 (r174,l0) best AREG, allocno GENERAL_REGS
    r173: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a115 (r173,l0) best DIREG, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a116 (r171,l0) best SIREG, allocno GENERAL_REGS
    r170: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a144 (r170,l0) best AREG, allocno GENERAL_REGS
    r169: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a145 (r169,l0) best DIREG, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a147 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a146 (r167,l0) best SIREG, allocno GENERAL_REGS
    r166: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a151 (r166,l0) best AREG, allocno GENERAL_REGS
    r165: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a152 (r165,l0) best AREG, allocno GENERAL_REGS
    r164: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a154 (r164,l0) best AREG, allocno GENERAL_REGS
    r163: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a155 (r163,l0) best AREG, allocno GENERAL_REGS
    r162: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a157 (r162,l0) best AREG, allocno GENERAL_REGS
    r161: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a158 (r161,l0) best AREG, allocno GENERAL_REGS
    r160: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a160 (r160,l0) best AREG, allocno GENERAL_REGS
    r159: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a161 (r159,l0) best AREG, allocno GENERAL_REGS
    r158: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a163 (r158,l0) best AREG, allocno GENERAL_REGS
    r157: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a164 (r157,l0) best DIREG, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a90 (r155,l0) best AREG, allocno GENERAL_REGS
    r154: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a91 (r154,l0) best DIREG, allocno GENERAL_REGS
    r153: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a176 (r153,l0) best AREG, allocno GENERAL_REGS
    r152: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a177 (r152,l0) best DIREG, allocno GENERAL_REGS
    r151: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a178 (r151,l0) best AREG, allocno GENERAL_REGS
    r150: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a180 (r150,l0) best AREG, allocno GENERAL_REGS
    r149: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a181 (r149,l0) best DIREG, allocno GENERAL_REGS
    r148: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a182 (r148,l0) best AREG, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a184 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a185 (r146,l0) best AREG, allocno GENERAL_REGS
    r145: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a186 (r145,l0) best AREG, allocno GENERAL_REGS
    r144: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a187 (r144,l0) best DIREG, allocno GENERAL_REGS
    r143: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a188 (r143,l0) best AREG, allocno GENERAL_REGS
    r142: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a191 (r142,l0) best AREG, allocno GENERAL_REGS
    r141: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a192 (r141,l0) best AREG, allocno GENERAL_REGS
    r140: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a194 (r140,l0) best AREG, allocno GENERAL_REGS
    r139: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a195 (r139,l0) best AREG, allocno GENERAL_REGS
    r138: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a197 (r138,l0) best AREG, allocno GENERAL_REGS
    r137: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a198 (r137,l0) best AREG, allocno GENERAL_REGS
    r136: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a200 (r136,l0) best AREG, allocno GENERAL_REGS
    r135: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a201 (r135,l0) best AREG, allocno GENERAL_REGS
    r134: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a203 (r134,l0) best AREG, allocno GENERAL_REGS
    r133: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a204 (r133,l0) best AREG, allocno GENERAL_REGS
    r132: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a206 (r132,l0) best AREG, allocno GENERAL_REGS
    r131: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a207 (r131,l0) best AREG, allocno GENERAL_REGS
    r130: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a209 (r130,l0) best AREG, allocno GENERAL_REGS
    r129: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a210 (r129,l0) best AREG, allocno GENERAL_REGS
    r128: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a212 (r128,l0) best AREG, allocno GENERAL_REGS
    r127: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a213 (r127,l0) best AREG, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a215 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a216 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a218 (r124,l0) best AREG, allocno GENERAL_REGS
    r123: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a219 (r123,l0) best DIREG, allocno GENERAL_REGS
    r122: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a220 (r122,l0) best AREG, allocno GENERAL_REGS
    r121: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a222 (r121,l0) best AREG, allocno GENERAL_REGS
    r120: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a223 (r120,l0) best DIREG, allocno GENERAL_REGS
    r119: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a224 (r119,l0) best AREG, allocno GENERAL_REGS
    r118: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a167 (r118,l0) best AREG, allocno GENERAL_REGS
    r117: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a172 (r117,l0) best DIREG, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a173 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a228 (r115,l0) best DIREG, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a229 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a236 (r113,l0) best AREG, allocno GENERAL_REGS
    r112: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a238 (r112,l0) best AREG, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a240 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a241 (r110,l0) best AREG, allocno GENERAL_REGS
    r109: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a242 (r109,l0) best AREG, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a244 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a245 (r107,l0) best AREG, allocno GENERAL_REGS
    r106: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a247 (r106,l0) best DIREG, allocno GENERAL_REGS
    r105: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a246 (r105,l0) best AREG, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a250 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a251 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a252 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a253 (r101,l0) best AREG, allocno GENERAL_REGS
    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a254 (r100,l0) best DIREG, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a231 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a232 (r98,l0) best AREG, allocno GENERAL_REGS
    r97: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a233 (r97,l0) best DIREG, allocno GENERAL_REGS
    r96: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a266 (r96,l0) best DIREG, allocno GENERAL_REGS
    r95: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a270 (r95,l0) best AREG, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a257 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a262 (r93,l0) best DIREG, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a263 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a274 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a275 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a150 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a190 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a217 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:308 INT_SSE_REGS:308 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a1(r364,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a2(r363,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a3(r362,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a4(r361,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a5(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a6(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a7(r360,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a8(r359,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a9(r258,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a10(r257,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a11(r256,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a12(r358,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a13(r255,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a14(r254,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a15(r253,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a16(r357,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a17(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:408 INT_SSE_REGS:408 FLOAT_INT_SSE_REGS:408 ALL_REGS:408 MEM:6
  a18(r252,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a19(r251,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a20(r356,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a21(r250,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a22(r249,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a23(r355,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a24(r248,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a25(r247,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a26(r354,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a27(r246,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a28(r245,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a29(r353,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a30(r244,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a31(r243,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a32(r242,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a33(r352,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a34(r241,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a35(r240,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a36(r239,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a37(r351,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a38(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:408 INT_SSE_REGS:408 FLOAT_INT_SSE_REGS:408 ALL_REGS:408 MEM:6
  a39(r238,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a40(r237,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a41(r350,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a42(r236,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a43(r235,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a44(r349,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a45(r234,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a46(r233,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a47(r348,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a48(r232,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a49(r231,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a50(r347,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a51(r230,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:416 INT_SSE_REGS:416 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a52(r229,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a53(r228,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a54(r346,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a55(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:408 INT_SSE_REGS:408 FLOAT_INT_SSE_REGS:408 ALL_REGS:408 MEM:6
  a56(r227,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a57(r226,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a58(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a59(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a60(r345,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a61(r223,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a62(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a63(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a64(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a65(r344,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a66(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a67(r218,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a68(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a69(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a70(r343,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a71(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a72(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a73(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a74(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a75(r342,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a76(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a77(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a78(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a79(r341,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a80(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a81(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a82(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a83(r340,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a84(r339,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a85(r338,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a86(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a87(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a88(r337,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a89(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:416 INT_SSE_REGS:416 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a90(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a91(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a92(r336,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a93(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a94(r335,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a95(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a96(r334,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a97(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a98(r333,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a99(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a100(r332,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a101(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a102(r331,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a103(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a104(r330,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a105(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:24 SSE_REGS:24 ALL_SSE_REGS:24 MMX_REGS:34 FP_TOP_SSE_REGS:516 FP_SECOND_SSE_REGS:516 FLOAT_SSE_REGS:516 FLOAT_INT_REGS:516 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:516 ALL_REGS:516 MEM:7
  a106(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a107(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a108(r329,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a109(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:308 INT_SSE_REGS:308 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a110(r328,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a111(r327,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a112(r326,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a113(r325,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a114(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a115(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a116(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a117(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a118(r324,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a119(r323,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a120(r322,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a121(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:408 INT_SSE_REGS:408 FLOAT_INT_SSE_REGS:408 ALL_REGS:408 MEM:6
  a122(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a123(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a124(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a125(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a126(r321,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a127(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a128(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a129(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a130(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a131(r320,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a132(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a133(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a134(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a135(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a136(r319,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a137(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a138(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a139(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a140(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a141(r318,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a142(r317,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a143(r316,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a144(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a145(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a146(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a147(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a148(r315,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a149(r314,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a150(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:408 INT_SSE_REGS:408 FLOAT_INT_SSE_REGS:408 ALL_REGS:408 MEM:6
  a151(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a152(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a153(r313,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a154(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a155(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a156(r312,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a157(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a158(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a159(r311,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a160(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a161(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a162(r310,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a163(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a164(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a165(r309,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a166(r308,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a167(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:308 INT_SSE_REGS:308 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a168(r307,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a169(r306,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a170(r305,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a171(r304,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a172(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a173(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a174(r303,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a175(r302,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a176(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a177(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a178(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a179(r301,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a180(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a181(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a182(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a183(r300,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a184(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:24 SSE_REGS:24 ALL_SSE_REGS:24 MMX_REGS:34 FP_TOP_SSE_REGS:516 FP_SECOND_SSE_REGS:516 FLOAT_SSE_REGS:516 FLOAT_INT_REGS:516 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:516 ALL_REGS:516 MEM:8
  a185(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a186(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a187(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a188(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a189(r299,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a190(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:408 INT_SSE_REGS:408 FLOAT_INT_SSE_REGS:408 ALL_REGS:408 MEM:6
  a191(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a192(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a193(r298,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a194(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a195(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a196(r297,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a197(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a198(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a199(r296,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a200(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a201(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a202(r295,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a203(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a204(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a205(r294,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a206(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a207(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a208(r293,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a209(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a210(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a211(r292,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a212(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a213(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a214(r291,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a215(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a216(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a217(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:408 INT_SSE_REGS:408 FLOAT_INT_SSE_REGS:408 ALL_REGS:408 MEM:5
  a218(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a219(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a220(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a221(r290,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a222(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a223(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a224(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a225(r289,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a226(r288,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a227(r287,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a228(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a229(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a230(r286,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a231(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:416 INT_SSE_REGS:416 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a232(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a233(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a234(r285,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a235(r284,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a236(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a237(r283,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a238(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a239(r282,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a240(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:24 SSE_REGS:24 ALL_SSE_REGS:24 MMX_REGS:34 FP_TOP_SSE_REGS:516 FP_SECOND_SSE_REGS:516 FLOAT_SSE_REGS:516 FLOAT_INT_REGS:516 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:516 ALL_REGS:516 MEM:7
  a241(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a242(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a243(r281,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a244(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:416 INT_SSE_REGS:416 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a245(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a246(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a247(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a248(r280,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a249(r279,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a250(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a251(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a252(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:416 INT_SSE_REGS:416 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a253(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a254(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a255(r278,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a256(r277,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a257(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:308 INT_SSE_REGS:308 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a258(r276,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a259(r275,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a260(r274,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a261(r273,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a262(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a263(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a264(r272,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a265(r271,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a266(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a267(r270,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a268(r269,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a269(r268,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a270(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a271(r267,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a272(r266,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a273(r265,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a274(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a275(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a276(r264,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a277(r263,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7

   Insn 741(l0): point = 1
   Insn 740(l0): point = 3
   Insn 739(l0): point = 5
   Insn 738(l0): point = 7
   Insn 737(l0): point = 9
   Insn 736(l0): point = 11
   Insn 735(l0): point = 13
   Insn 734(l0): point = 15
   Insn 733(l0): point = 17
   Insn 732(l0): point = 19
   Insn 731(l0): point = 21
   Insn 730(l0): point = 23
   Insn 729(l0): point = 25
   Insn 728(l0): point = 27
   Insn 727(l0): point = 29
   Insn 726(l0): point = 31
   Insn 725(l0): point = 33
   Insn 724(l0): point = 35
   Insn 723(l0): point = 37
   Insn 722(l0): point = 39
   Insn 721(l0): point = 41
   Insn 720(l0): point = 43
   Insn 719(l0): point = 45
   Insn 718(l0): point = 47
   Insn 717(l0): point = 49
   Insn 716(l0): point = 51
   Insn 715(l0): point = 53
   Insn 714(l0): point = 55
   Insn 713(l0): point = 57
   Insn 712(l0): point = 59
   Insn 711(l0): point = 61
   Insn 1001(l0): point = 64
   Insn 1000(l0): point = 66
   Insn 998(l0): point = 68
   Insn 997(l0): point = 70
   Insn 996(l0): point = 72
   Insn 995(l0): point = 74
   Insn 994(l0): point = 76
   Insn 993(l0): point = 78
   Insn 992(l0): point = 80
   Insn 991(l0): point = 82
   Insn 990(l0): point = 84
   Insn 989(l0): point = 86
   Insn 988(l0): point = 88
   Insn 987(l0): point = 90
   Insn 986(l0): point = 92
   Insn 985(l0): point = 94
   Insn 981(l0): point = 97
   Insn 980(l0): point = 99
   Insn 979(l0): point = 101
   Insn 978(l0): point = 103
   Insn 796(l0): point = 106
   Insn 795(l0): point = 108
   Insn 792(l0): point = 111
   Insn 1047(l0): point = 114
   Insn 787(l0): point = 116
   Insn 755(l0): point = 119
   Insn 754(l0): point = 121
   Insn 753(l0): point = 123
   Insn 752(l0): point = 125
   Insn 751(l0): point = 127
   Insn 750(l0): point = 129
   Insn 749(l0): point = 131
   Insn 748(l0): point = 133
   Insn 747(l0): point = 135
   Insn 746(l0): point = 137
   Insn 745(l0): point = 139
   Insn 744(l0): point = 141
   Insn 743(l0): point = 143
   Insn 784(l0): point = 146
   Insn 783(l0): point = 148
   Insn 782(l0): point = 150
   Insn 781(l0): point = 152
   Insn 780(l0): point = 154
   Insn 779(l0): point = 156
   Insn 778(l0): point = 158
   Insn 777(l0): point = 160
   Insn 776(l0): point = 162
   Insn 775(l0): point = 164
   Insn 774(l0): point = 166
   Insn 773(l0): point = 168
   Insn 772(l0): point = 170
   Insn 770(l0): point = 173
   Insn 769(l0): point = 175
   Insn 768(l0): point = 177
   Insn 767(l0): point = 179
   Insn 766(l0): point = 181
   Insn 765(l0): point = 183
   Insn 764(l0): point = 185
   Insn 763(l0): point = 187
   Insn 762(l0): point = 189
   Insn 761(l0): point = 191
   Insn 760(l0): point = 193
   Insn 759(l0): point = 195
   Insn 758(l0): point = 197
   Insn 973(l0): point = 200
   Insn 972(l0): point = 202
   Insn 971(l0): point = 204
   Insn 970(l0): point = 206
   Insn 969(l0): point = 208
   Insn 968(l0): point = 210
   Insn 967(l0): point = 212
   Insn 966(l0): point = 214
   Insn 965(l0): point = 216
   Insn 964(l0): point = 218
   Insn 963(l0): point = 220
   Insn 1053(l0): point = 223
   Insn 888(l0): point = 225
   Insn 887(l0): point = 227
   Insn 886(l0): point = 229
   Insn 885(l0): point = 231
   Insn 884(l0): point = 233
   Insn 883(l0): point = 235
   Insn 882(l0): point = 237
   Insn 881(l0): point = 239
   Insn 880(l0): point = 241
   Insn 879(l0): point = 243
   Insn 878(l0): point = 245
   Insn 1051(l0): point = 248
   Insn 873(l0): point = 250
   Insn 872(l0): point = 252
   Insn 871(l0): point = 254
   Insn 870(l0): point = 256
   Insn 869(l0): point = 258
   Insn 868(l0): point = 260
   Insn 867(l0): point = 262
   Insn 866(l0): point = 264
   Insn 865(l0): point = 266
   Insn 864(l0): point = 268
   Insn 863(l0): point = 270
   Insn 861(l0): point = 273
   Insn 860(l0): point = 275
   Insn 857(l0): point = 278
   Insn 1049(l0): point = 281
   Insn 852(l0): point = 283
   Insn 828(l0): point = 286
   Insn 827(l0): point = 288
   Insn 826(l0): point = 290
   Insn 825(l0): point = 292
   Insn 824(l0): point = 294
   Insn 823(l0): point = 296
   Insn 822(l0): point = 298
   Insn 821(l0): point = 300
   Insn 820(l0): point = 302
   Insn 849(l0): point = 305
   Insn 848(l0): point = 307
   Insn 847(l0): point = 309
   Insn 846(l0): point = 311
   Insn 845(l0): point = 313
   Insn 844(l0): point = 315
   Insn 843(l0): point = 317
   Insn 842(l0): point = 319
   Insn 841(l0): point = 321
   Insn 839(l0): point = 324
   Insn 838(l0): point = 326
   Insn 837(l0): point = 328
   Insn 836(l0): point = 330
   Insn 835(l0): point = 332
   Insn 834(l0): point = 334
   Insn 833(l0): point = 336
   Insn 832(l0): point = 338
   Insn 831(l0): point = 340
   Insn 818(l0): point = 343
   Insn 817(l0): point = 345
   Insn 816(l0): point = 347
   Insn 815(l0): point = 349
   Insn 814(l0): point = 351
   Insn 813(l0): point = 353
   Insn 812(l0): point = 355
   Insn 811(l0): point = 357
   Insn 810(l0): point = 359
   Insn 1057(l0): point = 362
   Insn 958(l0): point = 364
   Insn 957(l0): point = 366
   Insn 956(l0): point = 368
   Insn 955(l0): point = 370
   Insn 954(l0): point = 372
   Insn 953(l0): point = 374
   Insn 952(l0): point = 376
   Insn 951(l0): point = 378
   Insn 950(l0): point = 380
   Insn 949(l0): point = 382
   Insn 948(l0): point = 384
   Insn 946(l0): point = 387
   Insn 945(l0): point = 389
   Insn 942(l0): point = 392
   Insn 1055(l0): point = 395
   Insn 937(l0): point = 397
   Insn 913(l0): point = 400
   Insn 912(l0): point = 402
   Insn 911(l0): point = 404
   Insn 910(l0): point = 406
   Insn 909(l0): point = 408
   Insn 908(l0): point = 410
   Insn 907(l0): point = 412
   Insn 906(l0): point = 414
   Insn 905(l0): point = 416
   Insn 934(l0): point = 419
   Insn 933(l0): point = 421
   Insn 932(l0): point = 423
   Insn 931(l0): point = 425
   Insn 930(l0): point = 427
   Insn 929(l0): point = 429
   Insn 928(l0): point = 431
   Insn 927(l0): point = 433
   Insn 926(l0): point = 435
   Insn 924(l0): point = 438
   Insn 923(l0): point = 440
   Insn 922(l0): point = 442
   Insn 921(l0): point = 444
   Insn 920(l0): point = 446
   Insn 919(l0): point = 448
   Insn 918(l0): point = 450
   Insn 917(l0): point = 452
   Insn 916(l0): point = 454
   Insn 903(l0): point = 457
   Insn 902(l0): point = 459
   Insn 901(l0): point = 461
   Insn 900(l0): point = 463
   Insn 899(l0): point = 465
   Insn 898(l0): point = 467
   Insn 897(l0): point = 469
   Insn 896(l0): point = 471
   Insn 895(l0): point = 473
   Insn 808(l0): point = 476
   Insn 807(l0): point = 478
   Insn 806(l0): point = 480
   Insn 805(l0): point = 482
   Insn 804(l0): point = 484
   Insn 803(l0): point = 486
   Insn 802(l0): point = 488
   Insn 801(l0): point = 490
   Insn 800(l0): point = 492
   Insn 799(l0): point = 494
   Insn 798(l0): point = 496
   Insn 1045(l0): point = 499
   Insn 707(l0): point = 501
   Insn 706(l0): point = 503
   Insn 705(l0): point = 505
   Insn 704(l0): point = 507
   Insn 703(l0): point = 509
   Insn 702(l0): point = 511
   Insn 701(l0): point = 513
   Insn 700(l0): point = 515
   Insn 682(l0): point = 518
   Insn 681(l0): point = 520
   Insn 680(l0): point = 522
   Insn 679(l0): point = 524
   Insn 678(l0): point = 526
   Insn 412(l0): point = 529
   Insn 411(l0): point = 531
   Insn 410(l0): point = 533
   Insn 409(l0): point = 535
   Insn 408(l0): point = 537
   Insn 407(l0): point = 539
   Insn 406(l0): point = 541
   Insn 405(l0): point = 543
   Insn 404(l0): point = 545
   Insn 403(l0): point = 547
   Insn 402(l0): point = 549
   Insn 401(l0): point = 551
   Insn 400(l0): point = 553
   Insn 399(l0): point = 555
   Insn 398(l0): point = 557
   Insn 397(l0): point = 559
   Insn 396(l0): point = 561
   Insn 698(l0): point = 564
   Insn 697(l0): point = 566
   Insn 695(l0): point = 568
   Insn 694(l0): point = 570
   Insn 693(l0): point = 572
   Insn 692(l0): point = 574
   Insn 691(l0): point = 576
   Insn 690(l0): point = 578
   Insn 689(l0): point = 580
   Insn 686(l0): point = 583
   Insn 1041(l0): point = 586
   Insn 623(l0): point = 589
   Insn 622(l0): point = 591
   Insn 611(l0): point = 594
   Insn 610(l0): point = 596
   Insn 599(l0): point = 599
   Insn 598(l0): point = 601
   Insn 593(l0): point = 604
   Insn 592(l0): point = 606
   Insn 607(l0): point = 609
   Insn 606(l0): point = 611
   Insn 605(l0): point = 613
   Insn 604(l0): point = 615
   Insn 603(l0): point = 617
   Insn 602(l0): point = 619
   Insn 601(l0): point = 621
   Insn 619(l0): point = 624
   Insn 618(l0): point = 626
   Insn 617(l0): point = 628
   Insn 616(l0): point = 630
   Insn 615(l0): point = 632
   Insn 614(l0): point = 634
   Insn 613(l0): point = 636
   Insn 631(l0): point = 639
   Insn 630(l0): point = 641
   Insn 629(l0): point = 643
   Insn 628(l0): point = 645
   Insn 627(l0): point = 647
   Insn 626(l0): point = 649
   Insn 625(l0): point = 651
   Insn 1034(l0): point = 654
   Insn 1043(l0): point = 657
   Insn 663(l0): point = 660
   Insn 662(l0): point = 662
   Insn 651(l0): point = 665
   Insn 650(l0): point = 667
   Insn 639(l0): point = 670
   Insn 638(l0): point = 672
   Insn 591(l0): point = 675
   Insn 590(l0): point = 677
   Insn 589(l0): point = 679
   Insn 588(l0): point = 681
   Insn 587(l0): point = 683
   Insn 586(l0): point = 685
   Insn 585(l0): point = 687
   Insn 584(l0): point = 689
   Insn 583(l0): point = 691
   Insn 582(l0): point = 693
   Insn 580(l0): point = 696
   Insn 579(l0): point = 698
   Insn 577(l0): point = 700
   Insn 576(l0): point = 702
   Insn 575(l0): point = 704
   Insn 574(l0): point = 706
   Insn 573(l0): point = 708
   Insn 572(l0): point = 710
   Insn 571(l0): point = 712
   Insn 570(l0): point = 714
   Insn 569(l0): point = 716
   Insn 568(l0): point = 718
   Insn 567(l0): point = 720
   Insn 566(l0): point = 722
   Insn 565(l0): point = 724
   Insn 564(l0): point = 726
   Insn 563(l0): point = 728
   Insn 562(l0): point = 730
   Insn 561(l0): point = 732
   Insn 560(l0): point = 734
   Insn 559(l0): point = 736
   Insn 558(l0): point = 738
   Insn 554(l0): point = 741
   Insn 553(l0): point = 743
   Insn 552(l0): point = 745
   Insn 551(l0): point = 747
   Insn 546(l0): point = 750
   Insn 545(l0): point = 752
   Insn 542(l0): point = 755
   Insn 1038(l0): point = 758
   Insn 537(l0): point = 760
   Insn 505(l0): point = 763
   Insn 504(l0): point = 765
   Insn 503(l0): point = 767
   Insn 502(l0): point = 769
   Insn 501(l0): point = 771
   Insn 500(l0): point = 773
   Insn 499(l0): point = 775
   Insn 498(l0): point = 777
   Insn 497(l0): point = 779
   Insn 496(l0): point = 781
   Insn 495(l0): point = 783
   Insn 494(l0): point = 785
   Insn 493(l0): point = 787
   Insn 534(l0): point = 790
   Insn 533(l0): point = 792
   Insn 532(l0): point = 794
   Insn 531(l0): point = 796
   Insn 530(l0): point = 798
   Insn 529(l0): point = 800
   Insn 528(l0): point = 802
   Insn 527(l0): point = 804
   Insn 526(l0): point = 806
   Insn 525(l0): point = 808
   Insn 524(l0): point = 810
   Insn 523(l0): point = 812
   Insn 522(l0): point = 814
   Insn 520(l0): point = 817
   Insn 519(l0): point = 819
   Insn 518(l0): point = 821
   Insn 517(l0): point = 823
   Insn 516(l0): point = 825
   Insn 515(l0): point = 827
   Insn 514(l0): point = 829
   Insn 513(l0): point = 831
   Insn 512(l0): point = 833
   Insn 511(l0): point = 835
   Insn 510(l0): point = 837
   Insn 509(l0): point = 839
   Insn 508(l0): point = 841
   Insn 491(l0): point = 844
   Insn 490(l0): point = 846
   Insn 489(l0): point = 848
   Insn 488(l0): point = 850
   Insn 487(l0): point = 852
   Insn 486(l0): point = 854
   Insn 485(l0): point = 856
   Insn 484(l0): point = 858
   Insn 483(l0): point = 860
   Insn 482(l0): point = 862
   Insn 481(l0): point = 864
   Insn 480(l0): point = 866
   Insn 479(l0): point = 868
   Insn 548(l0): point = 871
   Insn 1036(l0): point = 874
   Insn 475(l0): point = 876
   Insn 474(l0): point = 878
   Insn 473(l0): point = 880
   Insn 472(l0): point = 882
   Insn 471(l0): point = 884
   Insn 470(l0): point = 886
   Insn 469(l0): point = 888
   Insn 468(l0): point = 890
   Insn 467(l0): point = 892
   Insn 466(l0): point = 894
   Insn 465(l0): point = 896
   Insn 464(l0): point = 898
   Insn 463(l0): point = 900
   Insn 462(l0): point = 902
   Insn 461(l0): point = 904
   Insn 455(l0): point = 907
   Insn 454(l0): point = 909
   Insn 451(l0): point = 912
   Insn 1032(l0): point = 915
   Insn 446(l0): point = 917
   Insn 422(l0): point = 920
   Insn 421(l0): point = 922
   Insn 420(l0): point = 924
   Insn 419(l0): point = 926
   Insn 418(l0): point = 928
   Insn 417(l0): point = 930
   Insn 416(l0): point = 932
   Insn 415(l0): point = 934
   Insn 414(l0): point = 936
   Insn 443(l0): point = 939
   Insn 442(l0): point = 941
   Insn 441(l0): point = 943
   Insn 440(l0): point = 945
   Insn 439(l0): point = 947
   Insn 438(l0): point = 949
   Insn 437(l0): point = 951
   Insn 436(l0): point = 953
   Insn 435(l0): point = 955
   Insn 433(l0): point = 958
   Insn 432(l0): point = 960
   Insn 431(l0): point = 962
   Insn 430(l0): point = 964
   Insn 429(l0): point = 966
   Insn 428(l0): point = 968
   Insn 427(l0): point = 970
   Insn 426(l0): point = 972
   Insn 425(l0): point = 974
   Insn 647(l0): point = 977
   Insn 646(l0): point = 979
   Insn 645(l0): point = 981
   Insn 644(l0): point = 983
   Insn 643(l0): point = 985
   Insn 642(l0): point = 987
   Insn 641(l0): point = 989
   Insn 659(l0): point = 992
   Insn 658(l0): point = 994
   Insn 657(l0): point = 996
   Insn 656(l0): point = 998
   Insn 655(l0): point = 1000
   Insn 654(l0): point = 1002
   Insn 653(l0): point = 1004
   Insn 671(l0): point = 1007
   Insn 670(l0): point = 1009
   Insn 669(l0): point = 1011
   Insn 668(l0): point = 1013
   Insn 667(l0): point = 1015
   Insn 666(l0): point = 1017
   Insn 665(l0): point = 1019
   Insn 1030(l0): point = 1022
   Insn 392(l0): point = 1024
   Insn 218(l0): point = 1027
   Insn 217(l0): point = 1029
   Insn 216(l0): point = 1031
   Insn 215(l0): point = 1033
   Insn 214(l0): point = 1035
   Insn 195(l0): point = 1038
   Insn 194(l0): point = 1040
   Insn 193(l0): point = 1042
   Insn 192(l0): point = 1044
   Insn 191(l0): point = 1046
   Insn 190(l0): point = 1048
   Insn 189(l0): point = 1050
   Insn 188(l0): point = 1052
   Insn 187(l0): point = 1054
   Insn 186(l0): point = 1056
   Insn 185(l0): point = 1058
   Insn 184(l0): point = 1060
   Insn 183(l0): point = 1062
   Insn 182(l0): point = 1064
   Insn 181(l0): point = 1066
   Insn 180(l0): point = 1068
   Insn 179(l0): point = 1070
   Insn 178(l0): point = 1072
   Insn 177(l0): point = 1074
   Insn 176(l0): point = 1076
   Insn 390(l0): point = 1079
   Insn 389(l0): point = 1081
   Insn 387(l0): point = 1083
   Insn 386(l0): point = 1085
   Insn 385(l0): point = 1087
   Insn 384(l0): point = 1089
   Insn 383(l0): point = 1091
   Insn 382(l0): point = 1093
   Insn 381(l0): point = 1095
   Insn 380(l0): point = 1097
   Insn 379(l0): point = 1099
   Insn 378(l0): point = 1101
   Insn 377(l0): point = 1103
   Insn 376(l0): point = 1105
   Insn 375(l0): point = 1107
   Insn 374(l0): point = 1109
   Insn 370(l0): point = 1112
   Insn 369(l0): point = 1114
   Insn 368(l0): point = 1116
   Insn 367(l0): point = 1118
   Insn 315(l0): point = 1121
   Insn 314(l0): point = 1123
   Insn 311(l0): point = 1126
   Insn 1024(l0): point = 1129
   Insn 306(l0): point = 1131
   Insn 240(l0): point = 1134
   Insn 239(l0): point = 1136
   Insn 238(l0): point = 1138
   Insn 237(l0): point = 1140
   Insn 236(l0): point = 1142
   Insn 235(l0): point = 1144
   Insn 234(l0): point = 1146
   Insn 233(l0): point = 1148
   Insn 232(l0): point = 1150
   Insn 261(l0): point = 1153
   Insn 260(l0): point = 1155
   Insn 259(l0): point = 1157
   Insn 258(l0): point = 1159
   Insn 257(l0): point = 1161
   Insn 256(l0): point = 1163
   Insn 255(l0): point = 1165
   Insn 254(l0): point = 1167
   Insn 253(l0): point = 1169
   Insn 282(l0): point = 1172
   Insn 281(l0): point = 1174
   Insn 280(l0): point = 1176
   Insn 279(l0): point = 1178
   Insn 278(l0): point = 1180
   Insn 277(l0): point = 1182
   Insn 276(l0): point = 1184
   Insn 275(l0): point = 1186
   Insn 274(l0): point = 1188
   Insn 303(l0): point = 1191
   Insn 302(l0): point = 1193
   Insn 301(l0): point = 1195
   Insn 300(l0): point = 1197
   Insn 299(l0): point = 1199
   Insn 298(l0): point = 1201
   Insn 297(l0): point = 1203
   Insn 296(l0): point = 1205
   Insn 295(l0): point = 1207
   Insn 293(l0): point = 1210
   Insn 292(l0): point = 1212
   Insn 291(l0): point = 1214
   Insn 290(l0): point = 1216
   Insn 289(l0): point = 1218
   Insn 288(l0): point = 1220
   Insn 287(l0): point = 1222
   Insn 286(l0): point = 1224
   Insn 285(l0): point = 1226
   Insn 272(l0): point = 1229
   Insn 271(l0): point = 1231
   Insn 270(l0): point = 1233
   Insn 269(l0): point = 1235
   Insn 268(l0): point = 1237
   Insn 267(l0): point = 1239
   Insn 266(l0): point = 1241
   Insn 265(l0): point = 1243
   Insn 264(l0): point = 1245
   Insn 251(l0): point = 1248
   Insn 250(l0): point = 1250
   Insn 249(l0): point = 1252
   Insn 248(l0): point = 1254
   Insn 247(l0): point = 1256
   Insn 246(l0): point = 1258
   Insn 245(l0): point = 1260
   Insn 244(l0): point = 1262
   Insn 243(l0): point = 1264
   Insn 230(l0): point = 1267
   Insn 229(l0): point = 1269
   Insn 228(l0): point = 1271
   Insn 227(l0): point = 1273
   Insn 226(l0): point = 1275
   Insn 225(l0): point = 1277
   Insn 224(l0): point = 1279
   Insn 223(l0): point = 1281
   Insn 222(l0): point = 1283
   Insn 212(l0): point = 1286
   Insn 211(l0): point = 1288
   Insn 210(l0): point = 1290
   Insn 209(l0): point = 1292
   Insn 206(l0): point = 1295
   Insn 1022(l0): point = 1298
   Insn 201(l0): point = 1300
   Insn 198(l0): point = 1303
   Insn 197(l0): point = 1305
   Insn 1060(l0): point = 1309
   Insn 362(l0): point = 1312
   Insn 361(l0): point = 1314
   Insn 360(l0): point = 1316
   Insn 359(l0): point = 1318
   Insn 358(l0): point = 1320
   Insn 357(l0): point = 1322
   Insn 356(l0): point = 1324
   Insn 355(l0): point = 1326
   Insn 354(l0): point = 1328
   Insn 353(l0): point = 1330
   Insn 352(l0): point = 1332
   Insn 1028(l0): point = 1335
   Insn 347(l0): point = 1337
   Insn 346(l0): point = 1339
   Insn 345(l0): point = 1341
   Insn 344(l0): point = 1343
   Insn 343(l0): point = 1345
   Insn 342(l0): point = 1347
   Insn 341(l0): point = 1349
   Insn 340(l0): point = 1351
   Insn 339(l0): point = 1353
   Insn 338(l0): point = 1355
   Insn 337(l0): point = 1357
   Insn 1026(l0): point = 1360
   Insn 332(l0): point = 1363
   Insn 331(l0): point = 1365
   Insn 330(l0): point = 1368
   Insn 329(l0): point = 1370
   Insn 328(l0): point = 1372
   Insn 327(l0): point = 1374
   Insn 326(l0): point = 1376
   Insn 325(l0): point = 1378
   Insn 324(l0): point = 1380
   Insn 323(l0): point = 1382
   Insn 322(l0): point = 1384
   Insn 321(l0): point = 1386
   Insn 320(l0): point = 1388
   Insn 319(l0): point = 1390
   Insn 318(l0): point = 1392
   Insn 317(l0): point = 1394
   Insn 1020(l0): point = 1397
   Insn 172(l0): point = 1399
   Insn 171(l0): point = 1401
   Insn 170(l0): point = 1403
   Insn 169(l0): point = 1405
   Insn 168(l0): point = 1407
   Insn 167(l0): point = 1409
   Insn 166(l0): point = 1411
   Insn 165(l0): point = 1413
   Insn 145(l0): point = 1416
   Insn 144(l0): point = 1418
   Insn 143(l0): point = 1420
   Insn 142(l0): point = 1422
   Insn 141(l0): point = 1424
   Insn 140(l0): point = 1426
   Insn 139(l0): point = 1428
   Insn 138(l0): point = 1430
   Insn 137(l0): point = 1432
   Insn 81(l0): point = 1435
   Insn 80(l0): point = 1437
   Insn 79(l0): point = 1439
   Insn 78(l0): point = 1441
   Insn 77(l0): point = 1443
   Insn 75(l0): point = 1446
   Insn 74(l0): point = 1448
   Insn 73(l0): point = 1450
   Insn 72(l0): point = 1452
   Insn 71(l0): point = 1454
   Insn 70(l0): point = 1456
   Insn 69(l0): point = 1458
   Insn 68(l0): point = 1460
   Insn 67(l0): point = 1462
   Insn 66(l0): point = 1464
   Insn 65(l0): point = 1466
   Insn 64(l0): point = 1468
   Insn 63(l0): point = 1470
   Insn 62(l0): point = 1472
   Insn 163(l0): point = 1475
   Insn 162(l0): point = 1477
   Insn 160(l0): point = 1479
   Insn 159(l0): point = 1481
   Insn 158(l0): point = 1483
   Insn 157(l0): point = 1485
   Insn 156(l0): point = 1487
   Insn 155(l0): point = 1489
   Insn 154(l0): point = 1491
   Insn 151(l0): point = 1494
   Insn 97(l0): point = 1497
   Insn 96(l0): point = 1499
   Insn 95(l0): point = 1501
   Insn 94(l0): point = 1503
   Insn 93(l0): point = 1505
   Insn 92(l0): point = 1507
   Insn 91(l0): point = 1509
   Insn 90(l0): point = 1511
   Insn 89(l0): point = 1513
   Insn 88(l0): point = 1515
   Insn 87(l0): point = 1517
   Insn 86(l0): point = 1519
   Insn 85(l0): point = 1521
   Insn 1016(l0): point = 1525
   Insn 121(l0): point = 1527
   Insn 120(l0): point = 1529
   Insn 119(l0): point = 1531
   Insn 118(l0): point = 1533
   Insn 117(l0): point = 1535
   Insn 116(l0): point = 1537
   Insn 115(l0): point = 1539
   Insn 110(l0): point = 1542
   Insn 109(l0): point = 1544
   Insn 1018(l0): point = 1547
   Insn 132(l0): point = 1549
   Insn 131(l0): point = 1551
   Insn 130(l0): point = 1553
   Insn 129(l0): point = 1555
   Insn 128(l0): point = 1557
   Insn 127(l0): point = 1559
   Insn 126(l0): point = 1561
   Insn 108(l0): point = 1564
   Insn 107(l0): point = 1566
   Insn 106(l0): point = 1568
   Insn 105(l0): point = 1570
   Insn 104(l0): point = 1572
   Insn 103(l0): point = 1574
   Insn 102(l0): point = 1576
   Insn 101(l0): point = 1578
   Insn 100(l0): point = 1580
   Insn 99(l0): point = 1582
   Insn 1013(l0): point = 1585
   Insn 58(l0): point = 1587
   Insn 31(l0): point = 1590
   Insn 30(l0): point = 1592
   Insn 29(l0): point = 1594
   Insn 28(l0): point = 1596
   Insn 27(l0): point = 1598
   Insn 26(l0): point = 1600
   Insn 25(l0): point = 1602
   Insn 24(l0): point = 1604
   Insn 23(l0): point = 1606
   Insn 22(l0): point = 1608
   Insn 21(l0): point = 1610
   Insn 20(l0): point = 1612
   Insn 56(l0): point = 1615
   Insn 55(l0): point = 1617
   Insn 53(l0): point = 1619
   Insn 52(l0): point = 1621
   Insn 51(l0): point = 1623
   Insn 50(l0): point = 1625
   Insn 49(l0): point = 1627
   Insn 48(l0): point = 1629
   Insn 47(l0): point = 1631
   Insn 46(l0): point = 1633
   Insn 45(l0): point = 1635
   Insn 44(l0): point = 1637
   Insn 43(l0): point = 1639
   Insn 42(l0): point = 1641
   Insn 41(l0): point = 1643
   Insn 40(l0): point = 1645
   Insn 36(l0): point = 1648
   Insn 35(l0): point = 1650
   Insn 34(l0): point = 1652
   Insn 33(l0): point = 1654
   Insn 1011(l0): point = 1657
   Insn 16(l0): point = 1659
   Insn 15(l0): point = 1661
   Insn 14(l0): point = 1663
   Insn 13(l0): point = 1665
   Insn 12(l0): point = 1667
   Insn 11(l0): point = 1669
   Insn 10(l0): point = 1671
   Insn 9(l0): point = 1673
   Insn 8(l0): point = 1675
   Insn 7(l0): point = 1677
   Insn 6(l0): point = 1679
   Insn 2(l0): point = 1681
 a0(r205): [67..68]
 a1(r364): [73..76]
 a2(r363): [75..78]
 a3(r362): [81..82]
 a4(r361): [83..84]
 a5(r204): [89..90]
 a6(r203): [91..92]
 a7(r360): [93..94]
 a8(r359): [100..103]
 a9(r258): [203..206]
 a10(r257): [211..212]
 a11(r256): [213..214]
 a12(r358): [219..220]
 a13(r255): [367..370]
 a14(r254): [375..376]
 a15(r253): [377..378]
 a16(r357): [383..384]
 a17(r89): [395..397] [390..392]
 a18(r252): [422..423]
 a19(r251): [428..429]
 a20(r356): [434..435]
 a21(r250): [441..442]
 a22(r249): [447..448]
 a23(r355): [453..454]
 a24(r248): [403..404]
 a25(r247): [409..410]
 a26(r354): [415..416]
 a27(r246): [460..461]
 a28(r245): [466..467]
 a29(r353): [472..473]
 a30(r244): [228..231]
 a31(r243): [236..237]
 a32(r242): [238..239]
 a33(r352): [244..245]
 a34(r241): [253..256]
 a35(r240): [261..262]
 a36(r239): [263..264]
 a37(r351): [269..270]
 a38(r88): [281..283] [276..278]
 a39(r238): [308..309]
 a40(r237): [314..315]
 a41(r350): [320..321]
 a42(r236): [327..328]
 a43(r235): [333..334]
 a44(r349): [339..340]
 a45(r234): [289..290]
 a46(r233): [295..296]
 a47(r348): [301..302]
 a48(r232): [346..347]
 a49(r231): [352..353]
 a50(r347): [358..359]
 a51(r230): [479..480]
 a52(r229): [483..484]
 a53(r228): [489..490]
 a54(r346): [495..496]
 a55(r87): [114..116] [109..111]
 a56(r227): [149..150]
 a57(r226): [155..156]
 a58(r225): [161..162]
 a59(r224): [163..164]
 a60(r345): [169..170]
 a61(r223): [176..177]
 a62(r222): [182..183]
 a63(r221): [188..189]
 a64(r220): [190..191]
 a65(r344): [196..197]
 a66(r219): [122..123]
 a67(r218): [128..129]
 a68(r217): [134..135]
 a69(r216): [136..137]
 a70(r343): [142..143]
 a71(r215): [4..5]
 a72(r214): [10..11]
 a73(r213): [16..17]
 a74(r212): [18..19]
 a75(r342): [24..25]
 a76(r211): [28..29]
 a77(r210): [34..35]
 a78(r209): [36..37]
 a79(r341): [42..43]
 a80(r208): [46..47]
 a81(r207): [52..53]
 a82(r206): [54..55]
 a83(r340): [60..61]
 a84(r339): [502..503]
 a85(r338): [504..505]
 a86(r202): [510..511]
 a87(r201): [512..513]
 a88(r337): [514..515]
 a89(r156): [567..568]
 a90(r155): [571..572]
 a91(r154): [577..578]
 a92(r336): [579..580]
 a93(r200): [1010..1013]
 a94(r335): [1018..1019]
 a95(r199): [995..998]
 a96(r334): [1003..1004]
 a97(r198): [980..983]
 a98(r333): [988..989]
 a99(r197): [642..645]
 a100(r332): [650..651]
 a101(r196): [627..630]
 a102(r331): [635..636]
 a103(r195): [612..615]
 a104(r330): [620..621]
 a105(r194): [675..679] [607..608]
 a106(r193): [680..681]
 a107(r192): [686..687]
 a108(r329): [692..693]
 a109(r175): [699..700]
 a110(r328): [705..708]
 a111(r327): [707..710]
 a112(r326): [713..714]
 a113(r325): [715..716]
 a114(r174): [721..722]
 a115(r173): [727..730]
 a116(r171): [729..736]
 a117(r172): [731..732]
 a118(r324): [733..734]
 a119(r323): [737..738]
 a120(r322): [744..747]
 a121(r86): [758..760] [753..755]
 a122(r191): [793..794]
 a123(r190): [799..800]
 a124(r189): [805..806]
 a125(r188): [807..808]
 a126(r321): [813..814]
 a127(r187): [820..821]
 a128(r186): [826..827]
 a129(r185): [832..833]
 a130(r184): [834..835]
 a131(r320): [840..841]
 a132(r183): [766..767]
 a133(r182): [772..773]
 a134(r181): [778..779]
 a135(r180): [780..781]
 a136(r319): [786..787]
 a137(r179): [847..848]
 a138(r178): [853..854]
 a139(r177): [859..860]
 a140(r176): [861..862]
 a141(r318): [867..868]
 a142(r317): [877..878]
 a143(r316): [879..880]
 a144(r170): [885..886]
 a145(r169): [891..894]
 a146(r167): [893..900]
 a147(r168): [895..896]
 a148(r315): [897..898]
 a149(r314): [901..902]
 a150(r85): [915..917] [910..912]
 a151(r166): [942..943]
 a152(r165): [948..949]
 a153(r313): [954..955]
 a154(r164): [961..962]
 a155(r163): [967..968]
 a156(r312): [973..974]
 a157(r162): [923..924]
 a158(r161): [929..930]
 a159(r311): [935..936]
 a160(r160): [532..533]
 a161(r159): [538..539]
 a162(r310): [544..545]
 a163(r158): [548..549]
 a164(r157): [554..559]
 a165(r309): [556..557]
 a166(r308): [560..561]
 a167(r118): [1082..1083]
 a168(r307): [1088..1091]
 a169(r306): [1090..1093]
 a170(r305): [1096..1097]
 a171(r304): [1098..1099]
 a172(r117): [1104..1105]
 a173(r116): [1106..1107]
 a174(r303): [1108..1109]
 a175(r302): [1115..1118]
 a176(r153): [1315..1318]
 a177(r152): [1323..1324]
 a178(r151): [1325..1326]
 a179(r301): [1331..1332]
 a180(r150): [1340..1343]
 a181(r149): [1348..1349]
 a182(r148): [1350..1351]
 a183(r300): [1356..1357]
 a184(r147): [1366..1372]
 a185(r146): [1373..1374]
 a186(r145): [1379..1380]
 a187(r144): [1385..1386]
 a188(r143): [1387..1388]
 a189(r299): [1393..1394]
 a190(r84): [1129..1131] [1124..1126]
 a191(r142): [1194..1195]
 a192(r141): [1200..1201]
 a193(r298): [1206..1207]
 a194(r140): [1213..1214]
 a195(r139): [1219..1220]
 a196(r297): [1225..1226]
 a197(r138): [1175..1176]
 a198(r137): [1181..1182]
 a199(r296): [1187..1188]
 a200(r136): [1232..1233]
 a201(r135): [1238..1239]
 a202(r295): [1244..1245]
 a203(r134): [1156..1157]
 a204(r133): [1162..1163]
 a205(r294): [1168..1169]
 a206(r132): [1251..1252]
 a207(r131): [1257..1258]
 a208(r293): [1263..1264]
 a209(r130): [1137..1138]
 a210(r129): [1143..1144]
 a211(r292): [1149..1150]
 a212(r128): [1270..1271]
 a213(r127): [1276..1277]
 a214(r291): [1282..1283]
 a215(r126): [1289..1290]
 a216(r125): [1291..1292]
 a217(r83): [1298..1300] [1293..1295]
 a218(r124): [1043..1044]
 a219(r123): [1049..1050]
 a220(r122): [1051..1052]
 a221(r290): [1057..1058]
 a222(r121): [1061..1062]
 a223(r120): [1067..1068]
 a224(r119): [1069..1070]
 a225(r289): [1075..1076]
 a226(r288): [1400..1401]
 a227(r287): [1402..1403]
 a228(r115): [1408..1409]
 a229(r114): [1410..1411]
 a230(r286): [1412..1413]
 a231(r99): [1478..1479]
 a232(r98): [1482..1483]
 a233(r97): [1488..1489]
 a234(r285): [1490..1491]
 a235(r284): [1429..1430]
 a236(r113): [1552..1555]
 a237(r283): [1560..1561]
 a238(r112): [1530..1533]
 a239(r282): [1538..1539]
 a240(r111): [1564..1568] [1545..1546]
 a241(r110): [1569..1570]
 a242(r109): [1575..1576]
 a243(r281): [1581..1582]
 a244(r108): [1500..1501]
 a245(r107): [1504..1505]
 a246(r105): [1504..1515]
 a247(r106): [1510..1511]
 a248(r280): [1512..1513]
 a249(r279): [1520..1521]
 a250(r104): [1449..1450]
 a251(r103): [1451..1452]
 a252(r102): [1453..1454]
 a253(r101): [1459..1460]
 a254(r100): [1465..1470]
 a255(r278): [1467..1468]
 a256(r277): [1471..1472]
 a257(r94): [1618..1619]
 a258(r276): [1624..1627]
 a259(r275): [1626..1629]
 a260(r274): [1632..1633]
 a261(r273): [1634..1635]
 a262(r93): [1640..1641]
 a263(r92): [1642..1643]
 a264(r272): [1644..1645]
 a265(r271): [1651..1654]
 a266(r96): [1593..1598]
 a267(r270): [1595..1596]
 a268(r269): [1599..1600]
 a269(r268): [1603..1604]
 a270(r95): [1605..1606]
 a271(r267): [1611..1612]
 a272(r266): [1660..1661]
 a273(r265): [1662..1663]
 a274(r91): [1668..1669]
 a275(r90): [1670..1671]
 a276(r264): [1672..1673]
 a277(r263): [1678..1679]
Compressing live ranges: from 1684 to 554 - 32%
Ranges after the compression:
 a0(r205): [26..27]
 a1(r364): [28..29]
 a2(r363): [28..29]
 a3(r362): [30..31]
 a4(r361): [32..33]
 a5(r204): [34..35]
 a6(r203): [36..37]
 a7(r360): [38..39]
 a8(r359): [40..41]
 a9(r258): [76..77]
 a10(r257): [78..79]
 a11(r256): [80..81]
 a12(r358): [82..83]
 a13(r255): [128..129]
 a14(r254): [130..131]
 a15(r253): [132..133]
 a16(r357): [134..135]
 a17(r89): [136..139]
 a18(r252): [146..147]
 a19(r251): [148..149]
 a20(r356): [150..151]
 a21(r250): [152..153]
 a22(r249): [154..155]
 a23(r355): [156..157]
 a24(r248): [140..141]
 a25(r247): [142..143]
 a26(r354): [144..145]
 a27(r246): [158..159]
 a28(r245): [160..161]
 a29(r353): [162..163]
 a30(r244): [84..85]
 a31(r243): [86..87]
 a32(r242): [88..89]
 a33(r352): [90..91]
 a34(r241): [92..93]
 a35(r240): [94..95]
 a36(r239): [96..97]
 a37(r351): [98..99]
 a38(r88): [100..103]
 a39(r238): [110..111]
 a40(r237): [112..113]
 a41(r350): [114..115]
 a42(r236): [116..117]
 a43(r235): [118..119]
 a44(r349): [120..121]
 a45(r234): [104..105]
 a46(r233): [106..107]
 a47(r348): [108..109]
 a48(r232): [122..123]
 a49(r231): [124..125]
 a50(r347): [126..127]
 a51(r230): [164..165]
 a52(r229): [166..167]
 a53(r228): [168..169]
 a54(r346): [170..171]
 a55(r87): [42..45]
 a56(r227): [56..57]
 a57(r226): [58..59]
 a58(r225): [60..61]
 a59(r224): [62..63]
 a60(r345): [64..65]
 a61(r223): [66..67]
 a62(r222): [68..69]
 a63(r221): [70..71]
 a64(r220): [72..73]
 a65(r344): [74..75]
 a66(r219): [46..47]
 a67(r218): [48..49]
 a68(r217): [50..51]
 a69(r216): [52..53]
 a70(r343): [54..55]
 a71(r215): [0..1]
 a72(r214): [2..3]
 a73(r213): [4..5]
 a74(r212): [6..7]
 a75(r342): [8..9]
 a76(r211): [10..11]
 a77(r210): [12..13]
 a78(r209): [14..15]
 a79(r341): [16..17]
 a80(r208): [18..19]
 a81(r207): [20..21]
 a82(r206): [22..23]
 a83(r340): [24..25]
 a84(r339): [172..173]
 a85(r338): [174..175]
 a86(r202): [176..177]
 a87(r201): [178..179]
 a88(r337): [180..181]
 a89(r156): [194..195]
 a90(r155): [196..197]
 a91(r154): [198..199]
 a92(r336): [200..201]
 a93(r200): [332..333]
 a94(r335): [334..335]
 a95(r199): [328..329]
 a96(r334): [330..331]
 a97(r198): [324..325]
 a98(r333): [326..327]
 a99(r197): [212..213]
 a100(r332): [214..215]
 a101(r196): [208..209]
 a102(r331): [210..211]
 a103(r195): [204..205]
 a104(r330): [206..207]
 a105(r194): [216..217] [202..203]
 a106(r193): [218..219]
 a107(r192): [220..221]
 a108(r329): [222..223]
 a109(r175): [224..225]
 a110(r328): [226..227]
 a111(r327): [226..227]
 a112(r326): [228..229]
 a113(r325): [230..231]
 a114(r174): [232..233]
 a115(r173): [234..235]
 a116(r171): [234..239]
 a117(r172): [236..237]
 a118(r324): [238..239]
 a119(r323): [240..241]
 a120(r322): [242..243]
 a121(r86): [244..247]
 a122(r191): [258..259]
 a123(r190): [260..261]
 a124(r189): [262..263]
 a125(r188): [264..265]
 a126(r321): [266..267]
 a127(r187): [268..269]
 a128(r186): [270..271]
 a129(r185): [272..273]
 a130(r184): [274..275]
 a131(r320): [276..277]
 a132(r183): [248..249]
 a133(r182): [250..251]
 a134(r181): [252..253]
 a135(r180): [254..255]
 a136(r319): [256..257]
 a137(r179): [278..279]
 a138(r178): [280..281]
 a139(r177): [282..283]
 a140(r176): [284..285]
 a141(r318): [286..287]
 a142(r317): [288..289]
 a143(r316): [290..291]
 a144(r170): [292..293]
 a145(r169): [294..295]
 a146(r167): [294..299]
 a147(r168): [296..297]
 a148(r315): [298..299]
 a149(r314): [300..301]
 a150(r85): [302..305]
 a151(r166): [312..313]
 a152(r165): [314..315]
 a153(r313): [316..317]
 a154(r164): [318..319]
 a155(r163): [320..321]
 a156(r312): [322..323]
 a157(r162): [306..307]
 a158(r161): [308..309]
 a159(r311): [310..311]
 a160(r160): [182..183]
 a161(r159): [184..185]
 a162(r310): [186..187]
 a163(r158): [188..189]
 a164(r157): [190..191]
 a165(r309): [190..191]
 a166(r308): [192..193]
 a167(r118): [352..353]
 a168(r307): [354..355]
 a169(r306): [354..355]
 a170(r305): [356..357]
 a171(r304): [358..359]
 a172(r117): [360..361]
 a173(r116): [362..363]
 a174(r303): [364..365]
 a175(r302): [366..367]
 a176(r153): [428..429]
 a177(r152): [430..431]
 a178(r151): [432..433]
 a179(r301): [434..435]
 a180(r150): [436..437]
 a181(r149): [438..439]
 a182(r148): [440..441]
 a183(r300): [442..443]
 a184(r147): [444..445]
 a185(r146): [446..447]
 a186(r145): [448..449]
 a187(r144): [450..451]
 a188(r143): [452..453]
 a189(r299): [454..455]
 a190(r84): [368..371]
 a191(r142): [390..391]
 a192(r141): [392..393]
 a193(r298): [394..395]
 a194(r140): [396..397]
 a195(r139): [398..399]
 a196(r297): [400..401]
 a197(r138): [384..385]
 a198(r137): [386..387]
 a199(r296): [388..389]
 a200(r136): [402..403]
 a201(r135): [404..405]
 a202(r295): [406..407]
 a203(r134): [378..379]
 a204(r133): [380..381]
 a205(r294): [382..383]
 a206(r132): [408..409]
 a207(r131): [410..411]
 a208(r293): [412..413]
 a209(r130): [372..373]
 a210(r129): [374..375]
 a211(r292): [376..377]
 a212(r128): [414..415]
 a213(r127): [416..417]
 a214(r291): [418..419]
 a215(r126): [420..421]
 a216(r125): [422..423]
 a217(r83): [424..427]
 a218(r124): [336..337]
 a219(r123): [338..339]
 a220(r122): [340..341]
 a221(r290): [342..343]
 a222(r121): [344..345]
 a223(r120): [346..347]
 a224(r119): [348..349]
 a225(r289): [350..351]
 a226(r288): [456..457]
 a227(r287): [458..459]
 a228(r115): [460..461]
 a229(r114): [462..463]
 a230(r286): [464..465]
 a231(r99): [480..481]
 a232(r98): [482..483]
 a233(r97): [484..485]
 a234(r285): [486..487]
 a235(r284): [466..467]
 a236(r113): [504..505]
 a237(r283): [506..507]
 a238(r112): [498..499]
 a239(r282): [500..501]
 a240(r111): [508..509] [502..503]
 a241(r110): [510..511]
 a242(r109): [512..513]
 a243(r281): [514..515]
 a244(r108): [488..489]
 a245(r107): [490..491]
 a246(r105): [490..495]
 a247(r106): [492..493]
 a248(r280): [494..495]
 a249(r279): [496..497]
 a250(r104): [468..469]
 a251(r103): [470..471]
 a252(r102): [472..473]
 a253(r101): [474..475]
 a254(r100): [476..477]
 a255(r278): [476..477]
 a256(r277): [478..479]
 a257(r94): [526..527]
 a258(r276): [528..529]
 a259(r275): [528..529]
 a260(r274): [530..531]
 a261(r273): [532..533]
 a262(r93): [534..535]
 a263(r92): [536..537]
 a264(r272): [538..539]
 a265(r271): [540..541]
 a266(r96): [516..517]
 a267(r270): [516..517]
 a268(r269): [518..519]
 a269(r268): [520..521]
 a270(r95): [522..523]
 a271(r267): [524..525]
 a272(r266): [542..543]
 a273(r265): [544..545]
 a274(r91): [546..547]
 a275(r90): [548..549]
 a276(r264): [550..551]
 a277(r263): [552..553]
  regions=1, blocks=114, points=554
    allocnos=278 (big 0), copies=0, conflicts=0, ranges=280
Disposition:
  217:r83  l0     0  190:r84  l0     0  150:r85  l0     0  121:r86  l0     0
   55:r87  l0     0   38:r88  l0     0   17:r89  l0     0  275:r90  l0     0
  274:r91  l0     0  263:r92  l0     0  262:r93  l0     0  257:r94  l0     0
  270:r95  l0     0  266:r96  l0     0  233:r97  l0     0  232:r98  l0     0
  231:r99  l0     0  254:r100 l0     0  253:r101 l0     0  252:r102 l0     0
  251:r103 l0     0  250:r104 l0     0  246:r105 l0     3  247:r106 l0     0
  245:r107 l0     0  244:r108 l0     0  242:r109 l0     0  241:r110 l0     0
  240:r111 l0     0  238:r112 l0     0  236:r113 l0     0  229:r114 l0     0
  228:r115 l0     0  173:r116 l0     0  172:r117 l0     0  167:r118 l0     0
  224:r119 l0     0  223:r120 l0     0  222:r121 l0     0  220:r122 l0     0
  219:r123 l0     0  218:r124 l0     0  216:r125 l0     0  215:r126 l0     0
  213:r127 l0     0  212:r128 l0     0  210:r129 l0     0  209:r130 l0     0
  207:r131 l0     0  206:r132 l0     0  204:r133 l0     0  203:r134 l0     0
  201:r135 l0     0  200:r136 l0     0  198:r137 l0     0  197:r138 l0     0
  195:r139 l0     0  194:r140 l0     0  192:r141 l0     0  191:r142 l0     0
  188:r143 l0     0  187:r144 l0     0  186:r145 l0     0  185:r146 l0     0
  184:r147 l0     0  182:r148 l0     0  181:r149 l0     0  180:r150 l0     0
  178:r151 l0     0  177:r152 l0     0  176:r153 l0     0   91:r154 l0     0
   90:r155 l0     0   89:r156 l0     0  164:r157 l0     0  163:r158 l0     0
  161:r159 l0     0  160:r160 l0     0  158:r161 l0     0  157:r162 l0     0
  155:r163 l0     0  154:r164 l0     0  152:r165 l0     0  151:r166 l0     0
  146:r167 l0     0  147:r168 l0     1  145:r169 l0     1  144:r170 l0     0
  116:r171 l0     0  117:r172 l0     1  115:r173 l0     1  114:r174 l0     0
  109:r175 l0     0  140:r176 l0     0  139:r177 l0     0  138:r178 l0     0
  137:r179 l0     0  135:r180 l0     0  134:r181 l0     0  133:r182 l0     0
  132:r183 l0     0  130:r184 l0     0  129:r185 l0     0  128:r186 l0     0
  127:r187 l0     0  125:r188 l0     0  124:r189 l0     0  123:r190 l0     0
  122:r191 l0     0  107:r192 l0     0  106:r193 l0     0  105:r194 l0     0
  103:r195 l0     0  101:r196 l0     0   99:r197 l0     0   97:r198 l0     0
   95:r199 l0     0   93:r200 l0     0   87:r201 l0     0   86:r202 l0     0
    6:r203 l0     0    5:r204 l0     0    0:r205 l0     0   82:r206 l0     0
   81:r207 l0     0   80:r208 l0     0   78:r209 l0     0   77:r210 l0     0
   76:r211 l0     0   74:r212 l0     0   73:r213 l0     0   72:r214 l0     0
   71:r215 l0     0   69:r216 l0     0   68:r217 l0     0   67:r218 l0     0
   66:r219 l0     0   64:r220 l0     0   63:r221 l0     0   62:r222 l0     0
   61:r223 l0     0   59:r224 l0     0   58:r225 l0     0   57:r226 l0     0
   56:r227 l0     0   53:r228 l0     0   52:r229 l0     0   51:r230 l0     0
   49:r231 l0     0   48:r232 l0     0   46:r233 l0     0   45:r234 l0     0
   43:r235 l0     0   42:r236 l0     0   40:r237 l0     0   39:r238 l0     0
   36:r239 l0     0   35:r240 l0     0   34:r241 l0     0   32:r242 l0     0
   31:r243 l0     0   30:r244 l0     0   28:r245 l0     0   27:r246 l0     0
   25:r247 l0     0   24:r248 l0     0   22:r249 l0     0   21:r250 l0     0
   19:r251 l0     0   18:r252 l0     0   15:r253 l0     0   14:r254 l0     0
   13:r255 l0     0   11:r256 l0     0   10:r257 l0     0    9:r258 l0     0
  277:r263 l0     0  276:r264 l0     0  273:r265 l0     0  272:r266 l0     0
  271:r267 l0     0  269:r268 l0     0  268:r269 l0     0  267:r270 l0     1
  265:r271 l0     0  264:r272 l0     0  261:r273 l0     0  260:r274 l0     0
  259:r275 l0     1  258:r276 l0     0  256:r277 l0     0  255:r278 l0     1
  249:r279 l0     0  248:r280 l0     0  243:r281 l0     0  239:r282 l0     0
  237:r283 l0     0  235:r284 l0     0  234:r285 l0     0  230:r286 l0     0
  227:r287 l0     0  226:r288 l0     0  225:r289 l0     0  221:r290 l0     0
  214:r291 l0     0  211:r292 l0     0  208:r293 l0     0  205:r294 l0     0
  202:r295 l0     0  199:r296 l0     0  196:r297 l0     0  193:r298 l0     0
  189:r299 l0     0  183:r300 l0     0  179:r301 l0     0  175:r302 l0     0
  174:r303 l0     0  171:r304 l0     0  170:r305 l0     0  169:r306 l0     1
  168:r307 l0     0  166:r308 l0     0  165:r309 l0     1  162:r310 l0     0
  159:r311 l0     0  156:r312 l0     0  153:r313 l0     0  149:r314 l0     0
  148:r315 l0     1  143:r316 l0     0  142:r317 l0     0  141:r318 l0     0
  136:r319 l0     0  131:r320 l0     0  126:r321 l0     0  120:r322 l0     0
  119:r323 l0     0  118:r324 l0     1  113:r325 l0     0  112:r326 l0     0
  111:r327 l0     1  110:r328 l0     0  108:r329 l0     0  104:r330 l0     0
  102:r331 l0     0  100:r332 l0     0   98:r333 l0     0   96:r334 l0     0
   94:r335 l0     0   92:r336 l0     0   88:r337 l0     0   85:r338 l0     0
   84:r339 l0     0   83:r340 l0     0   79:r341 l0     0   75:r342 l0     0
   70:r343 l0     0   65:r344 l0     0   60:r345 l0     0   54:r346 l0     0
   50:r347 l0     0   47:r348 l0     0   44:r349 l0     0   41:r350 l0     0
   37:r351 l0     0   33:r352 l0     0   29:r353 l0     0   26:r354 l0     0
   23:r355 l0     0   20:r356 l0     0   16:r357 l0     0   12:r358 l0     0
    8:r359 l0     0    7:r360 l0     0    4:r361 l0     0    3:r362 l0     0
    2:r363 l0     1    1:r364 l0     0
+++Costs: overall -226, reg -226, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void brite::Topology::Classify()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={148d,122u} r1={152d,4u} r2={152d,4u} r4={180d,32u} r5={295d,148u} r6={1d,113u} r7={1d,260u} r8={147d} r9={147d} r10={147d} r11={147d} r12={147d} r13={147d} r14={147d} r15={147d} r16={1d,112u} r17={254d,63u} r18={147d} r19={147d} r20={1d,233u} r21={148d} r22={148d} r23={148d} r24={148d} r25={148d} r26={148d} r27={148d} r28={148d} r29={147d} r30={147d} r31={147d} r32={147d} r33={147d} r34={147d} r35={147d} r36={147d} r37={148d} r38={148d} r39={147d} r40={147d} r45={147d} r46={147d} r47={147d} r48={147d} r49={147d} r50={147d} r51={147d} r52={147d} r53={147d} r54={147d} r55={147d} r56={147d} r57={147d} r58={147d} r59={147d} r60={147d} r61={147d} r62={147d} r63={147d} r64={147d} r65={147d} r66={147d} r67={147d} r68={147d} r69={147d} r70={147d} r71={147d} r72={147d} r73={147d} r74={147d} r75={147d} r76={147d} r83={2d,1u} r84={2d,1u} r85={2d,1u} r86={2d,1u} r87={2d,1u} r88={2d,1u} r89={2d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,2u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,2u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,2u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d,1u} r258={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={1d,1u} r287={1d,1u} r288={1d,1u} r289={1d,1u} r290={1d,1u} r291={1d,1u} r292={1d,1u} r293={1d,1u} r294={1d,1u} r295={1d,1u} r296={1d,1u} r297={1d,1u} r298={1d,1u} r299={1d,1u} r300={1d,1u} r301={1d,1u} r302={1d,1u} r303={1d,1u} r304={1d,1u} r305={1d,1u} r306={1d,1u} r307={1d,1u} r308={1d,1u} r309={1d,1u} r310={1d,1u} r311={1d,1u} r312={1d,1u} r313={1d,1u} r314={1d,1u} r315={1d,1u} r316={1d,1u} r317={1d,1u} r318={1d,1u} r319={1d,1u} r320={1d,1u} r321={1d,1u} r322={1d,1u} r323={1d,1u} r324={1d,1u} r325={1d,1u} r326={1d,1u} r327={1d,1u} r328={1d,1u} r329={1d,1u} r330={1d,1u} r331={1d,1u} r332={1d,1u} r333={1d,1u} r334={1d,1u} r335={1d,1u} r336={1d,1u} r337={1d,1u} r338={1d,1u} r339={1d,1u} r340={1d,1u} r341={1d,1u} r342={1d,1u} r343={1d,1u} r344={1d,1u} r345={1d,1u} r346={1d,1u} r347={1d,1u} r348={1d,1u} r349={1d,1u} r350={1d,1u} r351={1d,1u} r352={1d,1u} r353={1d,1u} r354={1d,1u} r355={1d,1u} r356={1d,1u} r357={1d,1u} r358={1d,1u} r359={1d,1u} r360={1d,1u} r361={1d,1u} r362={1d,1u} r363={1d,1u} r364={1d,1u} 
;;    total ref usage 11966{10594d,1372u,0e} in 786{639 regular + 147 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 90 91 263 264 265 266
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -152 [0xffffffffffffff68])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) Topology.cc:317 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (parallel [
            (set (reg:DI 263)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:320 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 263)) Topology.cc:320 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 263)
        (nil)))
(call_insn 8 7 9 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt14_List_iteratorIPN5brite4EdgeEEC1Ev") [flags 0x1]  <function_decl 0x103d5da00 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) Topology.cc:320 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 264)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -152 [0xffffffffffffff68])) [0 this+0 S8 A64])) Topology.cc:321 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 90 [ D.45127 ])
        (mem/f/j:DI (reg/f:DI 264) [0 this_12(D)->g+0 S8 A64])) Topology.cc:321 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 264)
        (nil)))
(insn 11 10 12 2 (parallel [
            (set (reg/f:DI 91 [ D.45128 ])
                (plus:DI (reg/f:DI 90 [ D.45127 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:321 221 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.45127 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.45128 ])) Topology.cc:321 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.45128 ])
        (nil)))
(call_insn 13 12 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt4listIPN5brite4EdgeESaIS2_EE5beginEv") [flags 0x1]  <function_decl 0x1036f0200 begin>) [0 begin S1 A8])
            (const_int 0 [0]))) Topology.cc:321 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 14 13 15 2 (set (reg:DI 265)
        (reg:DI 0 ax)) Topology.cc:321 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 15 14 16 2 (set (reg:DI 266)
        (reg:DI 265)) Topology.cc:321 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 265)
        (nil)))
(insn 16 15 1011 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70])) [0 el+0 S8 A64])
        (reg:DI 266)) Topology.cc:321 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 266)
        (nil)))
(jump_insn 1011 16 1012 2 (set (pc)
        (label_ref 38)) Topology.cc:321 636 {jump}
     (nil)
 -> 38)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1012 1011 54)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 95 96 267 268 269 270
(code_label 54 1012 19 3 140 "" [1 uses])
(note 19 54 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 3 (parallel [
            (set (reg:DI 267)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:322 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 21 20 22 3 (set (reg:DI 5 di)
        (reg:DI 267)) Topology.cc:322 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 267)
        (nil)))
(call_insn 22 21 23 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:322 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 23 22 24 3 (set (reg/f:DI 95 [ D.45129 ])
        (reg:DI 0 ax)) Topology.cc:322 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 24 23 25 3 (set (reg/f:DI 268)
        (mem/f:DI (reg/f:DI 95 [ D.45129 ]) [0 *_18+0 S8 A64])) Topology.cc:322 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.45129 ])
        (nil)))
(insn 25 24 26 3 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 edge+0 S8 A64])
        (reg/f:DI 268)) Topology.cc:322 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 268)
        (nil)))
(insn 26 25 27 3 (set (reg/f:DI 269)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -152 [0xffffffffffffff68])) [0 this+0 S8 A64])) Topology.cc:323 89 {*movdi_internal}
     (nil))
(insn 27 26 28 3 (set (reg/f:DI 96 [ D.45127 ])
        (mem/f/j:DI (reg/f:DI 269) [0 this_12(D)->g+0 S8 A64])) Topology.cc:323 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 269)
        (nil)))
(insn 28 27 29 3 (set (reg:DI 270)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 edge+0 S8 A64])) Topology.cc:323 89 {*movdi_internal}
     (nil))
(insn 29 28 30 3 (set (reg:DI 4 si)
        (reg:DI 270)) Topology.cc:323 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 270)
        (nil)))
(insn 30 29 31 3 (set (reg:DI 5 di)
        (reg/f:DI 96 [ D.45127 ])) Topology.cc:323 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96 [ D.45127 ])
        (nil)))
(call_insn 31 30 32 3 (call (mem:QI (symbol_ref:DI ("_ZN5brite5Graph14AddIncListNodeEPNS_4EdgeE") [flags 0x41]  <function_decl 0x10363b300 AddIncListNode>) [0 AddIncListNode S1 A8])
        (const_int 0 [0])) Topology.cc:323 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 271
(note 32 31 33 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 4 (parallel [
            (set (reg:DI 271)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:321 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 34 33 35 4 (set (reg:SI 4 si)
        (const_int 0 [0])) Topology.cc:321 90 {*movsi_internal}
     (nil))
(insn 35 34 36 4 (set (reg:DI 5 di)
        (reg:DI 271)) Topology.cc:321 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 271)
        (nil)))
(call_insn 36 35 38 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt14_List_iteratorIPN5brite4EdgeEEppEi") [flags 0x1]  <function_decl 0x103d5d300 operator++>) [0 operator++ S1 A8])
            (const_int 0 [0]))) Topology.cc:321 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       5 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 92 93 94 272 273 274 275 276
(code_label 38 36 39 5 139 "" [1 uses])
(note 39 38 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 5 (set (reg/f:DI 272)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -152 [0xffffffffffffff68])) [0 this+0 S8 A64])) Topology.cc:321 89 {*movdi_internal}
     (nil))
(insn 41 40 42 5 (set (reg/f:DI 92 [ D.45127 ])
        (mem/f/j:DI (reg/f:DI 272) [0 this_12(D)->g+0 S8 A64])) Topology.cc:321 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 272)
        (nil)))
(insn 42 41 43 5 (parallel [
            (set (reg/f:DI 93 [ D.45128 ])
                (plus:DI (reg/f:DI 92 [ D.45127 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:321 221 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.45127 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 43 42 44 5 (set (reg:DI 5 di)
        (reg/f:DI 93 [ D.45128 ])) Topology.cc:321 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.45128 ])
        (nil)))
(call_insn 44 43 45 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt4listIPN5brite4EdgeESaIS2_EE3endEv") [flags 0x1]  <function_decl 0x1036f0400 end>) [0 end S1 A8])
            (const_int 0 [0]))) Topology.cc:321 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 45 44 46 5 (set (reg:DI 273)
        (reg:DI 0 ax)) Topology.cc:321 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 46 45 47 5 (set (reg:DI 274)
        (reg:DI 273)) Topology.cc:321 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 273)
        (nil)))
(insn 47 46 48 5 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 D.41851+0 S8 A64])
        (reg:DI 274)) Topology.cc:321 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 274)
        (nil)))
(insn 48 47 49 5 (parallel [
            (set (reg:DI 275)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:321 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 49 48 50 5 (parallel [
            (set (reg:DI 276)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:321 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 50 49 51 5 (set (reg:DI 4 si)
        (reg:DI 275)) Topology.cc:321 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 275)
        (nil)))
(insn 51 50 52 5 (set (reg:DI 5 di)
        (reg:DI 276)) Topology.cc:321 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 276)
        (nil)))
(call_insn 52 51 53 5 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEneERKS3_") [flags 0x1]  <function_decl 0x103d5d700 operator!=>) [0 operator!= S1 A8])
            (const_int 0 [0]))) Topology.cc:321 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 53 52 55 5 (set (reg:QI 94 [ D.45126 ])
        (reg:QI 0 ax)) Topology.cc:321 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 55 53 56 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 94 [ D.45126 ])
            (const_int 0 [0]))) Topology.cc:321 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 94 [ D.45126 ])
        (nil)))
(jump_insn 56 55 57 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) Topology.cc:321 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 54)
;;  succ:       3
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 57 56 58 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 1013 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) Topology.cc:327 90 {*movsi_internal}
     (nil))
(jump_insn 1013 58 1014 6 (set (pc)
        (label_ref 152)) Topology.cc:327 636 {jump}
     (nil)
 -> 152)
;;  succ:       17 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1014 1013 161)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 100 101 102 103 104 277 278
(code_label 161 1014 61 7 148 "" [1 uses])
(note 61 161 62 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 7 (set (reg/f:DI 277)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -152 [0xffffffffffffff68])) [0 this+0 S8 A64])) Topology.cc:329 89 {*movdi_internal}
     (nil))
(insn 63 62 64 7 (set (reg/f:DI 100 [ D.45127 ])
        (mem/f/j:DI (reg/f:DI 277) [0 this_12(D)->g+0 S8 A64])) Topology.cc:329 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 277)
        (nil)))
(insn 64 63 65 7 (set (reg:SI 278)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) Topology.cc:329 90 {*movsi_internal}
     (nil))
(insn 65 64 66 7 (set (reg:SI 4 si)
        (reg:SI 278)) Topology.cc:329 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 278)
        (nil)))
(insn 66 65 67 7 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.45127 ])) Topology.cc:329 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100 [ D.45127 ])
        (nil)))
(call_insn 67 66 68 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5brite5Graph10GetNodePtrEi") [flags 0x41]  <function_decl 0x10363b400 GetNodePtr>) [0 GetNodePtr S1 A8])
            (const_int 0 [0]))) Topology.cc:329 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 68 67 69 7 (set (reg/f:DI 101 [ D.45131 ])
        (reg:DI 0 ax)) Topology.cc:329 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 69 68 70 7 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 node+0 S8 A64])
        (reg/f:DI 101 [ D.45131 ])) Topology.cc:329 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101 [ D.45131 ])
        (nil)))
(insn 70 69 71 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [0 node+0 S8 A64])
            (const_int 0 [0]))) Topology.cc:330 4 {*cmpdi_ccno_1}
     (nil))
(insn 71 70 72 7 (set (reg:QI 102 [ D.45126 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) Topology.cc:330 592 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 72 71 73 7 (set (reg:DI 103 [ D.45132 ])
        (zero_extend:DI (reg:QI 102 [ D.45126 ]))) Topology.cc:330 134 {zero_extendqidi2}
     (expr_list:REG_DEAD (reg:QI 102 [ D.45126 ])
        (nil)))
(insn 73 72 74 7 (set (reg:DI 104 [ D.45132 ])
        (reg:DI 103 [ D.45132 ])) Topology.cc:330 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 103 [ D.45132 ])
        (nil)))
(insn 74 73 75 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 104 [ D.45132 ])
            (const_int 0 [0]))) Topology.cc:330 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 104 [ D.45132 ])
        (nil)))
(jump_insn 75 74 76 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) Topology.cc:330 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 83)
;;  succ:       8 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 76 75 77 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 8 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*LC49") [flags 0x2]  <var_decl 0x10423b1c8 *LC49>)) Topology.cc:330 89 {*movdi_internal}
     (nil))
(insn 78 77 79 8 (set (reg:SI 1 dx)
        (const_int 330 [0x14a])) Topology.cc:330 90 {*movsi_internal}
     (nil))
(insn 79 78 80 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC1") [flags 0x2]  <var_decl 0x10417fda8 *LC1>)) Topology.cc:330 89 {*movdi_internal}
     (nil))
(insn 80 79 81 8 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZZN5brite8Topology8ClassifyEvE8__func__") [flags 0x1c02]  <var_decl 0x103dbae40 __func__>)) Topology.cc:330 89 {*movdi_internal}
     (nil))
(call_insn 81 80 82 8 (call (mem:QI (symbol_ref:DI ("__assert_rtn") [flags 0x41]  <function_decl 0x1035dc600 __assert_rtn>) [0 __assert_rtn S1 A8])
        (const_int 0 [0])) Topology.cc:330 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                        (expr_list:REG_NORETURN (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 82 81 83)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 105 106 107 108 279 280
(code_label 83 82 84 9 142 "" [1 uses])
(note 84 83 85 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 9 (set (reg:DI 279)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 node+0 S8 A64])) Topology.cc:332 89 {*movdi_internal}
     (nil))
(insn 86 85 87 9 (set (reg:DI 5 di)
        (reg:DI 279)) Topology.cc:332 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 279)
        (nil)))
(call_insn 87 86 88 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode12GetOutDegreeEv") [flags 0x41]  <function_decl 0x1035e6600 GetOutDegree>) [0 GetOutDegree S1 A8])
            (const_int 0 [0]))) Topology.cc:332 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 88 87 89 9 (set (reg:SI 105 [ D.45130 ])
        (reg:SI 0 ax)) Topology.cc:332 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 89 88 90 9 (set (reg/f:DI 280)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -152 [0xffffffffffffff68])) [0 this+0 S8 A64])) Topology.cc:332 89 {*movdi_internal}
     (nil))
(insn 90 89 91 9 (set (reg/f:DI 106 [ D.45133 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 280)
                (const_int 8 [0x8])) [0 this_12(D)->m+0 S8 A64])) Topology.cc:332 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 280)
        (nil)))
(insn 91 90 92 9 (set (reg:DI 5 di)
        (reg/f:DI 106 [ D.45133 ])) Topology.cc:332 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106 [ D.45133 ])
        (nil)))
(call_insn 92 91 93 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite5Model9GetMEdgesEv") [flags 0x41]  <function_decl 0x103b38900 GetMEdges>) [0 GetMEdges S1 A8])
            (const_int 0 [0]))) Topology.cc:332 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 93 92 94 9 (set (reg:SI 107 [ D.45130 ])
        (reg:SI 0 ax)) Topology.cc:332 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 94 93 95 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 105 [ D.45130 ])
            (reg:SI 107 [ D.45130 ]))) Topology.cc:332 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 107 [ D.45130 ])
        (expr_list:REG_DEAD (reg:SI 105 [ D.45130 ])
            (nil))))
(insn 95 94 96 9 (set (reg:QI 108 [ D.45126 ])
        (le:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) Topology.cc:332 592 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
(insn 96 95 97 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 108 [ D.45126 ])
            (const_int 0 [0]))) Topology.cc:332 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 108 [ D.45126 ])
        (nil)))
(jump_insn 97 96 98 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 149)
            (pc))) Topology.cc:332 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 149)
;;  succ:       10 (FALLTHRU)
;;              16
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 109 110 111 281
(note 98 97 99 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 10 (set (reg:DI 281)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 node+0 S8 A64])) Topology.cc:334 89 {*movdi_internal}
     (nil))
(insn 100 99 101 10 (set (reg:DI 5 di)
        (reg:DI 281)) Topology.cc:334 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 281)
        (nil)))
(call_insn 101 100 102 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:334 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 102 101 103 10 (set (reg/f:DI 109 [ D.45134 ])
        (reg:DI 0 ax)) Topology.cc:334 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 103 102 104 10 (set (reg:DI 5 di)
        (reg/f:DI 109 [ D.45134 ])) Topology.cc:334 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 109 [ D.45134 ])
        (nil)))
(call_insn 104 103 105 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite8NodeConf11GetNodeTypeEv") [flags 0x41]  <function_decl 0x1035f8a00 GetNodeType>) [0 GetNodeType S1 A8])
            (const_int 0 [0]))) Topology.cc:334 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 105 104 106 10 (set (reg:SI 110 [ D.45135 ])
        (reg:SI 0 ax)) Topology.cc:334 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 106 105 107 10 (set (reg:SI 111 [ D.45130 ])
        (reg:SI 110 [ D.45135 ])) Topology.cc:334 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 110 [ D.45135 ])
        (nil)))
(insn 107 106 108 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 111 [ D.45130 ])
            (const_int 1 [0x1]))) Topology.cc:334 7 {*cmpsi_1}
     (nil))
(jump_insn 108 107 1005 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 124)
            (pc))) Topology.cc:334 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 124)
;;  succ:       13
;;              11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111
;; lr  def 	 17 [flags]
(note 1005 108 109 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 109 1005 110 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 111 [ D.45130 ])
            (const_int 2 [0x2]))) Topology.cc:334 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 111 [ D.45130 ])
        (nil)))
(jump_insn 110 109 114 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1015)
            (pc))) Topology.cc:334 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 1015)
;;  succ:       12 (FALLTHRU)
;;              14
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 112 282
(note 114 110 115 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 12 (set (reg:DI 282)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 node+0 S8 A64])) Topology.cc:336 89 {*movdi_internal}
     (nil))
(insn 116 115 117 12 (set (reg:DI 5 di)
        (reg:DI 282)) Topology.cc:336 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 282)
        (nil)))
(call_insn 117 116 118 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:336 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 118 117 119 12 (set (reg/f:DI 112 [ D.45134 ])
        (reg:DI 0 ax)) Topology.cc:336 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 119 118 120 12 (set (reg:SI 4 si)
        (const_int 1 [0x1])) Topology.cc:336 90 {*movsi_internal}
     (nil))
(insn 120 119 121 12 (set (reg:DI 5 di)
        (reg/f:DI 112 [ D.45134 ])) Topology.cc:336 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 112 [ D.45134 ])
        (nil)))
(call_insn 121 120 1016 12 (call (mem:QI (symbol_ref/i:DI ("_ZN5brite14RouterNodeConf13SetRouterTypeENS0_14RouterNodeTypeE") [flags 0x41]  <function_decl 0x103609200 SetRouterType>) [0 SetRouterType S1 A8])
        (const_int 0 [0])) Topology.cc:336 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(jump_insn 1016 121 1017 12 (set (pc)
        (label_ref 147)) Topology.cc:337 636 {jump}
     (nil)
 -> 147)
;;  succ:       15 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1017 1016 124)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 113 283
(code_label 124 1017 125 13 145 "" [1 uses])
(note 125 124 126 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 126 125 127 13 (set (reg:DI 283)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 node+0 S8 A64])) Topology.cc:340 89 {*movdi_internal}
     (nil))
(insn 127 126 128 13 (set (reg:DI 5 di)
        (reg:DI 283)) Topology.cc:340 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 283)
        (nil)))
(call_insn 128 127 129 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:340 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 129 128 130 13 (set (reg/f:DI 113 [ D.45134 ])
        (reg:DI 0 ax)) Topology.cc:340 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 130 129 131 13 (set (reg:SI 4 si)
        (const_int 1 [0x1])) Topology.cc:340 90 {*movsi_internal}
     (nil))
(insn 131 130 132 13 (set (reg:DI 5 di)
        (reg/f:DI 113 [ D.45134 ])) Topology.cc:340 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 113 [ D.45134 ])
        (nil)))
(call_insn 132 131 1018 13 (call (mem:QI (symbol_ref/i:DI ("_ZN5brite10ASNodeConf9SetASTypeENS0_10ASNodeTypeE") [flags 0x41]  <function_decl 0x103609c00 SetASType>) [0 SetASType S1 A8])
        (const_int 0 [0])) Topology.cc:340 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(jump_insn 1018 132 1019 13 (set (pc)
        (label_ref 147)) Topology.cc:341 636 {jump}
     (nil)
 -> 147)
;;  succ:       15 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1019 1018 1015)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 284
(code_label 1015 1019 136 14 209 "" [1 uses])
(note 136 1015 137 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 138 14 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC50") [flags 0x2]  <var_decl 0x10423b260 *LC50>)) Topology.cc:344 89 {*movdi_internal}
     (nil))
(insn 138 137 139 14 (set (reg:DI 284)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cerr") [flags 0x1040]  <var_decl 0x1031027b8 cerr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) Topology.cc:344 89 {*movdi_internal}
     (nil))
(insn 139 138 140 14 (set (reg:DI 5 di)
        (reg:DI 284)) Topology.cc:344 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 284)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cerr") [flags 0x1040]  <var_decl 0x1031027b8 cerr>)
            (nil))))
(call_insn 140 139 141 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x102fc9a00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) Topology.cc:344 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 141 140 142 14 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*LC20") [flags 0x2]  <var_decl 0x1041c91c8 *LC20>)) Topology.cc:345 89 {*movdi_internal}
     (nil))
(insn 142 141 143 14 (set (reg:SI 1 dx)
        (const_int 345 [0x159])) Topology.cc:345 90 {*movsi_internal}
     (nil))
(insn 143 142 144 14 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC1") [flags 0x2]  <var_decl 0x10417fda8 *LC1>)) Topology.cc:345 89 {*movdi_internal}
     (nil))
(insn 144 143 145 14 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZZN5brite8Topology8ClassifyEvE8__func__") [flags 0x1c02]  <var_decl 0x103dbae40 __func__>)) Topology.cc:345 89 {*movdi_internal}
     (nil))
(call_insn 145 144 146 14 (call (mem:QI (symbol_ref:DI ("__assert_rtn") [flags 0x41]  <function_decl 0x1035dc600 __assert_rtn>) [0 __assert_rtn S1 A8])
        (const_int 0 [0])) Topology.cc:345 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                        (expr_list:REG_NORETURN (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 146 145 147)
;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 [100.0%] 
;;              13 [100.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 147 146 148 15 147 "" [2 uses])
(note 148 147 149 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
;;  succ:       16 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9
;;              15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 149 148 150 16 143 "" [1 uses])
(note 150 149 151 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 151 150 152 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:327 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       17 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU,DFS_BACK)
;;              6 [100.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 97 98 99 285
(code_label 152 151 153 17 141 "" [1 uses])
(note 153 152 154 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 154 153 155 17 (set (reg/f:DI 285)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -152 [0xffffffffffffff68])) [0 this+0 S8 A64])) Topology.cc:327 89 {*movdi_internal}
     (nil))
(insn 155 154 156 17 (set (reg/f:DI 97 [ D.45127 ])
        (mem/f/j:DI (reg/f:DI 285) [0 this_12(D)->g+0 S8 A64])) Topology.cc:327 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 285)
        (nil)))
(insn 156 155 157 17 (set (reg:DI 5 di)
        (reg/f:DI 97 [ D.45127 ])) Topology.cc:327 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97 [ D.45127 ])
        (nil)))
(call_insn 157 156 158 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5brite5Graph11GetNumNodesEv") [flags 0x41]  <function_decl 0x10363b800 GetNumNodes>) [0 GetNumNodes S1 A8])
            (const_int 0 [0]))) Topology.cc:327 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 158 157 159 17 (set (reg:SI 98 [ D.45130 ])
        (reg:SI 0 ax)) Topology.cc:327 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 159 158 160 17 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 98 [ D.45130 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) Topology.cc:327 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 98 [ D.45130 ])
        (nil)))
(insn 160 159 162 17 (set (reg:QI 99 [ D.45126 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) Topology.cc:327 592 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
(insn 162 160 163 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 99 [ D.45126 ])
            (const_int 0 [0]))) Topology.cc:327 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 99 [ D.45126 ])
        (nil)))
(jump_insn 163 162 164 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 161)
            (pc))) Topology.cc:327 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 161)
;;  succ:       7
;;              18 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 114 115 286 287 288
(note 164 163 165 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 166 18 (set (reg/f:DI 286)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -152 [0xffffffffffffff68])) [0 this+0 S8 A64])) Topology.cc:351 89 {*movdi_internal}
     (nil))
(insn 166 165 167 18 (set (reg/f:DI 114 [ D.45127 ])
        (mem/f/j:DI (reg/f:DI 286) [0 this_12(D)->g+0 S8 A64])) Topology.cc:351 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 286)
        (nil)))
(insn 167 166 168 18 (parallel [
            (set (reg/f:DI 115 [ D.45128 ])
                (plus:DI (reg/f:DI 114 [ D.45127 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:351 221 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 114 [ D.45127 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 168 167 169 18 (set (reg:DI 5 di)
        (reg/f:DI 115 [ D.45128 ])) Topology.cc:351 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 115 [ D.45128 ])
        (nil)))
(call_insn 169 168 170 18 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt4listIPN5brite4EdgeESaIS2_EE5beginEv") [flags 0x1]  <function_decl 0x1036f0200 begin>) [0 begin S1 A8])
            (const_int 0 [0]))) Topology.cc:351 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 170 169 171 18 (set (reg:DI 287)
        (reg:DI 0 ax)) Topology.cc:351 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 171 170 172 18 (set (reg:DI 288)
        (reg:DI 287)) Topology.cc:351 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 287)
        (nil)))
(insn 172 171 1020 18 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70])) [0 el+0 S8 A64])
        (reg:DI 288)) Topology.cc:351 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 288)
        (nil)))
(jump_insn 1020 172 1021 18 (set (pc)
        (label_ref 372)) Topology.cc:351 636 {jump}
     (nil)
 -> 372)
;;  succ:       43 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1021 1020 388)
;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       43
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 119 120 121 122 123 124 289 290
(code_label 388 1021 175 19 164 "" [1 uses])
(note 175 388 176 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 177 19 (parallel [
            (set (reg:DI 289)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:352 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 177 176 178 19 (set (reg:DI 5 di)
        (reg:DI 289)) Topology.cc:352 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 289)
        (nil)))
(call_insn 178 177 179 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:352 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 179 178 180 19 (set (reg/f:DI 119 [ D.45129 ])
        (reg:DI 0 ax)) Topology.cc:352 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 180 179 181 19 (set (reg/f:DI 120 [ D.45136 ])
        (mem/f:DI (reg/f:DI 119 [ D.45129 ]) [0 *_53+0 S8 A64])) Topology.cc:352 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 119 [ D.45129 ])
        (nil)))
(insn 181 180 182 19 (set (reg:DI 5 di)
        (reg/f:DI 120 [ D.45136 ])) Topology.cc:352 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 120 [ D.45136 ])
        (nil)))
(call_insn 182 181 183 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge6GetSrcEv") [flags 0x41]  <function_decl 0x103612c00 GetSrc>) [0 GetSrc S1 A8])
            (const_int 0 [0]))) Topology.cc:352 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 183 182 184 19 (set (reg/f:DI 121 [ D.45131 ])
        (reg:DI 0 ax)) Topology.cc:352 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 184 183 185 19 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 Src+0 S8 A64])
        (reg/f:DI 121 [ D.45131 ])) Topology.cc:352 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 121 [ D.45131 ])
        (nil)))
(insn 185 184 186 19 (parallel [
            (set (reg:DI 290)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:353 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 186 185 187 19 (set (reg:DI 5 di)
        (reg:DI 290)) Topology.cc:353 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 290)
        (nil)))
(call_insn 187 186 188 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:353 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 188 187 189 19 (set (reg/f:DI 122 [ D.45129 ])
        (reg:DI 0 ax)) Topology.cc:353 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 189 188 190 19 (set (reg/f:DI 123 [ D.45136 ])
        (mem/f:DI (reg/f:DI 122 [ D.45129 ]) [0 *_57+0 S8 A64])) Topology.cc:353 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 122 [ D.45129 ])
        (nil)))
(insn 190 189 191 19 (set (reg:DI 5 di)
        (reg/f:DI 123 [ D.45136 ])) Topology.cc:353 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 123 [ D.45136 ])
        (nil)))
(call_insn 191 190 192 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge6GetDstEv") [flags 0x41]  <function_decl 0x103612d00 GetDst>) [0 GetDst S1 A8])
            (const_int 0 [0]))) Topology.cc:353 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 192 191 193 19 (set (reg/f:DI 124 [ D.45131 ])
        (reg:DI 0 ax)) Topology.cc:353 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 193 192 194 19 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 Dst+0 S8 A64])
        (reg/f:DI 124 [ D.45131 ])) Topology.cc:353 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 124 [ D.45131 ])
        (nil)))
(insn 194 193 195 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [0 Src+0 S8 A64])
            (const_int 0 [0]))) Topology.cc:354 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 195 194 196 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 199)
            (pc))) Topology.cc:354 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 199)
;;  succ:       21
;;              20 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 196 195 197 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 197 196 198 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [0 Dst+0 S8 A64])
            (const_int 0 [0]))) Topology.cc:354 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 198 197 199 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 204)
            (pc))) Topology.cc:354 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 204)
;;  succ:       21 (FALLTHRU)
;;              22
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19
;;              20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(code_label 199 198 200 21 150 "" [1 uses])
(note 200 199 201 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 201 200 1022 21 (set (reg:QI 83 [ D.45126 ])
        (const_int 1 [0x1])) Topology.cc:354 93 {*movqi_internal}
     (nil))
(jump_insn 1022 201 1023 21 (set (pc)
        (label_ref 207)) Topology.cc:354 636 {jump}
     (nil)
 -> 207)
;;  succ:       23 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 1023 1022 204)
;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(code_label 204 1023 205 22 151 "" [1 uses])
(note 205 204 206 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 206 205 207 22 (set (reg:QI 83 [ D.45126 ])
        (const_int 0 [0])) Topology.cc:354 93 {*movqi_internal}
     (nil))
;;  succ:       23 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;;              21 [100.0%] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  def 	 17 [flags] 125 126
(code_label 207 206 208 23 152 "" [1 uses])
(note 208 207 209 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 209 208 210 23 (set (reg:DI 125 [ D.45132 ])
        (zero_extend:DI (reg:QI 83 [ D.45126 ]))) Topology.cc:354 134 {zero_extendqidi2}
     (expr_list:REG_DEAD (reg:QI 83 [ D.45126 ])
        (nil)))
(insn 210 209 211 23 (set (reg:DI 126 [ D.45132 ])
        (reg:DI 125 [ D.45132 ])) Topology.cc:354 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 125 [ D.45132 ])
        (nil)))
(insn 211 210 212 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 126 [ D.45132 ])
            (const_int 0 [0]))) Topology.cc:354 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 126 [ D.45132 ])
        (nil)))
(jump_insn 212 211 213 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 220)
            (pc))) Topology.cc:354 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 220)
;;  succ:       24 (FALLTHRU)
;;              25
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 213 212 214 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 24 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*LC51") [flags 0x2]  <var_decl 0x10423b2f8 *LC51>)) Topology.cc:354 89 {*movdi_internal}
     (nil))
(insn 215 214 216 24 (set (reg:SI 1 dx)
        (const_int 354 [0x162])) Topology.cc:354 90 {*movsi_internal}
     (nil))
(insn 216 215 217 24 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC1") [flags 0x2]  <var_decl 0x10417fda8 *LC1>)) Topology.cc:354 89 {*movdi_internal}
     (nil))
(insn 217 216 218 24 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZZN5brite8Topology8ClassifyEvE8__func__") [flags 0x1c02]  <var_decl 0x103dbae40 __func__>)) Topology.cc:354 89 {*movdi_internal}
     (nil))
(call_insn 218 217 219 24 (call (mem:QI (symbol_ref:DI ("__assert_rtn") [flags 0x41]  <function_decl 0x1035dc600 __assert_rtn>) [0 __assert_rtn S1 A8])
        (const_int 0 [0])) Topology.cc:354 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                        (expr_list:REG_NORETURN (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 219 218 220)
;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 127 128 291
(code_label 220 219 221 25 153 "" [1 uses])
(note 221 220 222 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 222 221 223 25 (set (reg:DI 291)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 Src+0 S8 A64])) Topology.cc:355 89 {*movdi_internal}
     (nil))
(insn 223 222 224 25 (set (reg:DI 5 di)
        (reg:DI 291)) Topology.cc:355 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 291)
        (nil)))
(call_insn 224 223 225 25 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:355 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 225 224 226 25 (set (reg/f:DI 127 [ D.45134 ])
        (reg:DI 0 ax)) Topology.cc:355 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 226 225 227 25 (set (reg:DI 5 di)
        (reg/f:DI 127 [ D.45134 ])) Topology.cc:355 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 127 [ D.45134 ])
        (nil)))
(call_insn 227 226 228 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite8NodeConf11GetNodeTypeEv") [flags 0x41]  <function_decl 0x1035f8a00 GetNodeType>) [0 GetNodeType S1 A8])
            (const_int 0 [0]))) Topology.cc:355 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 228 227 229 25 (set (reg:SI 128 [ D.45135 ])
        (reg:SI 0 ax)) Topology.cc:355 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 229 228 230 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 128 [ D.45135 ])
            (const_int 2 [0x2]))) Topology.cc:360 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 128 [ D.45135 ])
        (nil)))
(jump_insn 230 229 231 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 241)
            (pc))) Topology.cc:360 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 241)
;;  succ:       26 (FALLTHRU)
;;              27
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 129 130 292
(note 231 230 232 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 232 231 233 26 (set (reg:DI 292)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 Src+0 S8 A64])) Topology.cc:356 89 {*movdi_internal}
     (nil))
(insn 233 232 234 26 (set (reg:DI 5 di)
        (reg:DI 292)) Topology.cc:356 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 292)
        (nil)))
(call_insn 234 233 235 26 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:356 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 235 234 236 26 (set (reg/f:DI 129 [ D.45134 ])
        (reg:DI 0 ax)) Topology.cc:356 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 236 235 237 26 (set (reg:DI 5 di)
        (reg/f:DI 129 [ D.45134 ])) Topology.cc:356 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 129 [ D.45134 ])
        (nil)))
(call_insn 237 236 238 26 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite14RouterNodeConf13GetRouterTypeEv") [flags 0x41]  <function_decl 0x103609100 GetRouterType>) [0 GetRouterType S1 A8])
            (const_int 0 [0]))) Topology.cc:356 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 238 237 239 26 (set (reg:SI 130 [ D.45137 ])
        (reg:SI 0 ax)) Topology.cc:356 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 239 238 240 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 130 [ D.45137 ])
            (const_int 1 [0x1]))) Topology.cc:355 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 130 [ D.45137 ])
        (nil)))
(jump_insn 240 239 241 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 304)
            (pc))) Topology.cc:355 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 304)
;;  succ:       33
;;              27 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25
;;              26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 131 132 293
(code_label 241 240 242 27 154 "" [1 uses])
(note 242 241 243 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 243 242 244 27 (set (reg:DI 293)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 Src+0 S8 A64])) Topology.cc:357 89 {*movdi_internal}
     (nil))
(insn 244 243 245 27 (set (reg:DI 5 di)
        (reg:DI 293)) Topology.cc:357 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 293)
        (nil)))
(call_insn 245 244 246 27 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:357 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 246 245 247 27 (set (reg/f:DI 131 [ D.45134 ])
        (reg:DI 0 ax)) Topology.cc:357 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 247 246 248 27 (set (reg:DI 5 di)
        (reg/f:DI 131 [ D.45134 ])) Topology.cc:357 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 131 [ D.45134 ])
        (nil)))
(call_insn 248 247 249 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite8NodeConf11GetNodeTypeEv") [flags 0x41]  <function_decl 0x1035f8a00 GetNodeType>) [0 GetNodeType S1 A8])
            (const_int 0 [0]))) Topology.cc:357 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 249 248 250 27 (set (reg:SI 132 [ D.45135 ])
        (reg:SI 0 ax)) Topology.cc:357 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 250 249 251 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 132 [ D.45135 ])
            (const_int 1 [0x1]))) Topology.cc:356 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 132 [ D.45135 ])
        (nil)))
(jump_insn 251 250 252 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 262)
            (pc))) Topology.cc:356 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 262)
;;  succ:       28 (FALLTHRU)
;;              29
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 133 134 294
(note 252 251 253 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 253 252 254 28 (set (reg:DI 294)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 Src+0 S8 A64])) Topology.cc:358 89 {*movdi_internal}
     (nil))
(insn 254 253 255 28 (set (reg:DI 5 di)
        (reg:DI 294)) Topology.cc:358 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 294)
        (nil)))
(call_insn 255 254 256 28 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:358 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 256 255 257 28 (set (reg/f:DI 133 [ D.45134 ])
        (reg:DI 0 ax)) Topology.cc:358 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 257 256 258 28 (set (reg:DI 5 di)
        (reg/f:DI 133 [ D.45134 ])) Topology.cc:358 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 133 [ D.45134 ])
        (nil)))
(call_insn 258 257 259 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite10ASNodeConf9GetASTypeEv") [flags 0x41]  <function_decl 0x103609b00 GetASType>) [0 GetASType S1 A8])
            (const_int 0 [0]))) Topology.cc:358 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 259 258 260 28 (set (reg:SI 134 [ D.45138 ])
        (reg:SI 0 ax)) Topology.cc:358 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 260 259 261 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 134 [ D.45138 ])
            (const_int 1 [0x1]))) Topology.cc:357 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 134 [ D.45138 ])
        (nil)))
(jump_insn 261 260 262 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 304)
            (pc))) Topology.cc:357 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 304)
;;  succ:       33
;;              29 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       27
;;              28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 135 136 295
(code_label 262 261 263 29 156 "" [1 uses])
(note 263 262 264 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 264 263 265 29 (set (reg:DI 295)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 Dst+0 S8 A64])) Topology.cc:359 89 {*movdi_internal}
     (nil))
(insn 265 264 266 29 (set (reg:DI 5 di)
        (reg:DI 295)) Topology.cc:359 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 295)
        (nil)))
(call_insn 266 265 267 29 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:359 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 267 266 268 29 (set (reg/f:DI 135 [ D.45134 ])
        (reg:DI 0 ax)) Topology.cc:359 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 268 267 269 29 (set (reg:DI 5 di)
        (reg/f:DI 135 [ D.45134 ])) Topology.cc:359 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 135 [ D.45134 ])
        (nil)))
(call_insn 269 268 270 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite8NodeConf11GetNodeTypeEv") [flags 0x41]  <function_decl 0x1035f8a00 GetNodeType>) [0 GetNodeType S1 A8])
            (const_int 0 [0]))) Topology.cc:359 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 270 269 271 29 (set (reg:SI 136 [ D.45135 ])
        (reg:SI 0 ax)) Topology.cc:359 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 271 270 272 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 136 [ D.45135 ])
            (const_int 2 [0x2]))) Topology.cc:358 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 136 [ D.45135 ])
        (nil)))
(jump_insn 272 271 273 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 283)
            (pc))) Topology.cc:358 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 283)
;;  succ:       30 (FALLTHRU)
;;              31
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       29 (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 137 138 296
(note 273 272 274 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 274 273 275 30 (set (reg:DI 296)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 Dst+0 S8 A64])) Topology.cc:360 89 {*movdi_internal}
     (nil))
(insn 275 274 276 30 (set (reg:DI 5 di)
        (reg:DI 296)) Topology.cc:360 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 296)
        (nil)))
(call_insn 276 275 277 30 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:360 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 277 276 278 30 (set (reg/f:DI 137 [ D.45134 ])
        (reg:DI 0 ax)) Topology.cc:360 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 278 277 279 30 (set (reg:DI 5 di)
        (reg/f:DI 137 [ D.45134 ])) Topology.cc:360 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 137 [ D.45134 ])
        (nil)))
(call_insn 279 278 280 30 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite14RouterNodeConf13GetRouterTypeEv") [flags 0x41]  <function_decl 0x103609100 GetRouterType>) [0 GetRouterType S1 A8])
            (const_int 0 [0]))) Topology.cc:360 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 280 279 281 30 (set (reg:SI 138 [ D.45137 ])
        (reg:SI 0 ax)) Topology.cc:360 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 281 280 282 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 138 [ D.45137 ])
            (const_int 1 [0x1]))) Topology.cc:359 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 138 [ D.45137 ])
        (nil)))
(jump_insn 282 281 283 30 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 304)
            (pc))) Topology.cc:359 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 304)
;;  succ:       33
;;              31 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       29
;;              30 (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 139 140 297
(code_label 283 282 284 31 157 "" [1 uses])
(note 284 283 285 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 285 284 286 31 (set (reg:DI 297)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 Dst+0 S8 A64])) Topology.cc:361 89 {*movdi_internal}
     (nil))
(insn 286 285 287 31 (set (reg:DI 5 di)
        (reg:DI 297)) Topology.cc:361 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 297)
        (nil)))
(call_insn 287 286 288 31 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:361 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 288 287 289 31 (set (reg/f:DI 139 [ D.45134 ])
        (reg:DI 0 ax)) Topology.cc:361 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 289 288 290 31 (set (reg:DI 5 di)
        (reg/f:DI 139 [ D.45134 ])) Topology.cc:361 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 139 [ D.45134 ])
        (nil)))
(call_insn 290 289 291 31 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite8NodeConf11GetNodeTypeEv") [flags 0x41]  <function_decl 0x1035f8a00 GetNodeType>) [0 GetNodeType S1 A8])
            (const_int 0 [0]))) Topology.cc:361 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 291 290 292 31 (set (reg:SI 140 [ D.45135 ])
        (reg:SI 0 ax)) Topology.cc:361 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 292 291 293 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 140 [ D.45135 ])
            (const_int 1 [0x1]))) Topology.cc:360 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 140 [ D.45135 ])
        (nil)))
(jump_insn 293 292 294 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 309)
            (pc))) Topology.cc:360 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 309)
;;  succ:       32 (FALLTHRU)
;;              34
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       31 (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 141 142 298
(note 294 293 295 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 295 294 296 32 (set (reg:DI 298)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 Dst+0 S8 A64])) Topology.cc:362 89 {*movdi_internal}
     (nil))
(insn 296 295 297 32 (set (reg:DI 5 di)
        (reg:DI 298)) Topology.cc:362 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 298)
        (nil)))
(call_insn 297 296 298 32 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:362 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 298 297 299 32 (set (reg/f:DI 141 [ D.45134 ])
        (reg:DI 0 ax)) Topology.cc:362 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 299 298 300 32 (set (reg:DI 5 di)
        (reg/f:DI 141 [ D.45134 ])) Topology.cc:362 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 141 [ D.45134 ])
        (nil)))
(call_insn 300 299 301 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite10ASNodeConf9GetASTypeEv") [flags 0x41]  <function_decl 0x103609b00 GetASType>) [0 GetASType S1 A8])
            (const_int 0 [0]))) Topology.cc:362 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 301 300 302 32 (set (reg:SI 142 [ D.45138 ])
        (reg:SI 0 ax)) Topology.cc:362 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 302 301 303 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 142 [ D.45138 ])
            (const_int 1 [0x1]))) Topology.cc:361 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 142 [ D.45138 ])
        (nil)))
(jump_insn 303 302 304 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 309)
            (pc))) Topology.cc:361 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 309)
;;  succ:       33 (FALLTHRU)
;;              34
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26
;;              28
;;              30
;;              32 (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 84
(code_label 304 303 305 33 155 "" [3 uses])
(note 305 304 306 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 306 305 1024 33 (set (reg:QI 84 [ D.45126 ])
        (const_int 1 [0x1])) Topology.cc:360 93 {*movqi_internal}
     (nil))
(jump_insn 1024 306 1025 33 (set (pc)
        (label_ref 312)) Topology.cc:360 636 {jump}
     (nil)
 -> 312)
;;  succ:       35 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84

(barrier 1025 1024 309)
;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       31
;;              32
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 84
(code_label 309 1025 310 34 158 "" [2 uses])
(note 310 309 311 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 311 310 312 34 (set (reg:QI 84 [ D.45126 ])
        (const_int 0 [0])) Topology.cc:360 93 {*movqi_internal}
     (nil))
;;  succ:       35 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84

;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       34 (FALLTHRU)
;;              33 [100.0%] 
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84
;; lr  def 	 17 [flags]
(code_label 312 311 313 35 159 "" [1 uses])
(note 313 312 314 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 314 313 315 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 84 [ D.45126 ])
            (const_int 0 [0]))) Topology.cc:355 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 84 [ D.45126 ])
        (nil)))
(jump_insn 315 314 316 35 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 365)
            (pc))) Topology.cc:355 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 365)
;;  succ:       36 (FALLTHRU)
;;              42
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       35 (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 143 144 145 146 147 299
(note 316 315 317 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 317 316 318 36 (parallel [
            (set (reg:DI 299)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:364 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 318 317 319 36 (set (reg:DI 5 di)
        (reg:DI 299)) Topology.cc:364 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 299)
        (nil)))
(call_insn 319 318 320 36 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:364 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 320 319 321 36 (set (reg/f:DI 143 [ D.45129 ])
        (reg:DI 0 ax)) Topology.cc:364 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 321 320 322 36 (set (reg/f:DI 144 [ D.45136 ])
        (mem/f:DI (reg/f:DI 143 [ D.45129 ]) [0 *_100+0 S8 A64])) Topology.cc:364 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 143 [ D.45129 ])
        (nil)))
(insn 322 321 323 36 (set (reg:DI 5 di)
        (reg/f:DI 144 [ D.45136 ])) Topology.cc:364 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 144 [ D.45136 ])
        (nil)))
(call_insn 323 322 324 36 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge7GetConfEv") [flags 0x41]  <function_decl 0x103612500 GetConf>) [0 GetConf S1 A8])
            (const_int 0 [0]))) Topology.cc:364 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 324 323 325 36 (set (reg/f:DI 145 [ D.45139 ])
        (reg:DI 0 ax)) Topology.cc:364 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 325 324 326 36 (set (reg:DI 5 di)
        (reg/f:DI 145 [ D.45139 ])) Topology.cc:364 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 145 [ D.45139 ])
        (nil)))
(call_insn 326 325 327 36 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite8EdgeConf11GetEdgeTypeEv") [flags 0x41]  <function_decl 0x10361c500 GetEdgeType>) [0 GetEdgeType S1 A8])
            (const_int 0 [0]))) Topology.cc:364 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 327 326 328 36 (set (reg:SI 146 [ D.45140 ])
        (reg:SI 0 ax)) Topology.cc:364 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 328 327 329 36 (set (reg:SI 147 [ D.45130 ])
        (reg:SI 146 [ D.45140 ])) Topology.cc:364 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 146 [ D.45140 ])
        (nil)))
(insn 329 328 330 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 147 [ D.45130 ])
            (const_int 0 [0]))) Topology.cc:364 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 330 329 1007 36 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 335)
            (pc))) Topology.cc:364 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 335)
;;  succ:       39
;;              37 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147

;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       36 (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147
;; lr  def 	 17 [flags]
(note 1007 330 331 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 331 1007 332 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 147 [ D.45130 ])
            (const_int 1 [0x1]))) Topology.cc:364 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 147 [ D.45130 ])
        (nil)))
(jump_insn 332 331 1008 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 350)
            (pc))) Topology.cc:364 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 350)
;;  succ:       40
;;              38 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       37 (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1008 332 1026 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1026 1008 1027 38 (set (pc)
        (label_ref 365)) 636 {jump}
     (nil)
 -> 365)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1027 1026 335)
;; basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       36
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 148 149 150 300
(code_label 335 1027 336 39 162 "" [1 uses])
(note 336 335 337 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 337 336 338 39 (parallel [
            (set (reg:DI 300)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:366 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 338 337 339 39 (set (reg:DI 5 di)
        (reg:DI 300)) Topology.cc:366 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 300)
        (nil)))
(call_insn 339 338 340 39 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:366 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 340 339 341 39 (set (reg/f:DI 148 [ D.45129 ])
        (reg:DI 0 ax)) Topology.cc:366 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 341 340 342 39 (set (reg/f:DI 149 [ D.45136 ])
        (mem/f:DI (reg/f:DI 148 [ D.45129 ]) [0 *_107+0 S8 A64])) Topology.cc:366 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 148 [ D.45129 ])
        (nil)))
(insn 342 341 343 39 (set (reg:DI 5 di)
        (reg/f:DI 149 [ D.45136 ])) Topology.cc:366 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 149 [ D.45136 ])
        (nil)))
(call_insn 343 342 344 39 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge7GetConfEv") [flags 0x41]  <function_decl 0x103612500 GetConf>) [0 GetConf S1 A8])
            (const_int 0 [0]))) Topology.cc:366 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 344 343 345 39 (set (reg/f:DI 150 [ D.45139 ])
        (reg:DI 0 ax)) Topology.cc:366 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 345 344 346 39 (set (reg:SI 4 si)
        (const_int 2 [0x2])) Topology.cc:366 90 {*movsi_internal}
     (nil))
(insn 346 345 347 39 (set (reg:DI 5 di)
        (reg/f:DI 150 [ D.45139 ])) Topology.cc:366 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 150 [ D.45139 ])
        (nil)))
(call_insn 347 346 1028 39 (call (mem:QI (symbol_ref/i:DI ("_ZN5brite14RouterEdgeConf17SetRouterEdgeTypeENS0_14RouterEdgeTypeE") [flags 0x41]  <function_decl 0x10362ba00 SetRouterEdgeType>) [0 SetRouterEdgeType S1 A8])
        (const_int 0 [0])) Topology.cc:366 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(jump_insn 1028 347 1029 39 (set (pc)
        (label_ref 363)) Topology.cc:367 636 {jump}
     (nil)
 -> 363)
;;  succ:       41 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1029 1028 350)
;; basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 39, next block 113, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       37
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 151 152 153 301
(code_label 350 1029 351 40 163 "" [1 uses])
(note 351 350 352 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 352 351 353 40 (parallel [
            (set (reg:DI 301)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:369 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 353 352 354 40 (set (reg:DI 5 di)
        (reg:DI 301)) Topology.cc:369 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 301)
        (nil)))
(call_insn 354 353 355 40 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:369 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 355 354 356 40 (set (reg/f:DI 151 [ D.45129 ])
        (reg:DI 0 ax)) Topology.cc:369 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 356 355 357 40 (set (reg/f:DI 152 [ D.45136 ])
        (mem/f:DI (reg/f:DI 151 [ D.45129 ]) [0 *_111+0 S8 A64])) Topology.cc:369 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 151 [ D.45129 ])
        (nil)))
(insn 357 356 358 40 (set (reg:DI 5 di)
        (reg/f:DI 152 [ D.45136 ])) Topology.cc:369 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 152 [ D.45136 ])
        (nil)))
(call_insn 358 357 359 40 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge7GetConfEv") [flags 0x41]  <function_decl 0x103612500 GetConf>) [0 GetConf S1 A8])
            (const_int 0 [0]))) Topology.cc:369 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 359 358 360 40 (set (reg/f:DI 153 [ D.45139 ])
        (reg:DI 0 ax)) Topology.cc:369 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 360 359 361 40 (set (reg:SI 4 si)
        (const_int 1 [0x1])) Topology.cc:369 90 {*movsi_internal}
     (nil))
(insn 361 360 362 40 (set (reg:DI 5 di)
        (reg/f:DI 153 [ D.45139 ])) Topology.cc:369 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 153 [ D.45139 ])
        (nil)))
(call_insn 362 361 1059 40 (call (mem:QI (symbol_ref/i:DI ("_ZN5brite10ASEdgeConf13SetASEdgeTypeENS0_10ASEdgeTypeE") [flags 0x41]  <function_decl 0x10361ce00 SetASEdgeType>) [0 SetASEdgeType S1 A8])
        (const_int 0 [0])) Topology.cc:369 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       113 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 113, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 40, next block 41, flags: (NEW, RTL, MODIFIED)
;;  pred:       40 (FALLTHRU)
;; bb 113 artificial_defs: { }
;; bb 113 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1059 362 1060 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 1060 1059 363 113 (const_int 0 [0]) Topology.cc:370 662 {nop}
     (nil))
;;  succ:       41 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 113, next block 42, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       113 [100.0%]  (FALLTHRU)
;;              39 [100.0%] 
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 363 1060 364 41 161 "" [1 uses])
(note 364 363 365 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
;;  succ:       42 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       35
;;              41 (FALLTHRU)
;;              38 [100.0%] 
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 302
(code_label 365 364 366 42 160 "" [2 uses])
(note 366 365 367 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 367 366 368 42 (parallel [
            (set (reg:DI 302)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:351 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 368 367 369 42 (set (reg:SI 4 si)
        (const_int 0 [0])) Topology.cc:351 90 {*movsi_internal}
     (nil))
(insn 369 368 370 42 (set (reg:DI 5 di)
        (reg:DI 302)) Topology.cc:351 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 302)
        (nil)))
(call_insn 370 369 372 42 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt14_List_iteratorIPN5brite4EdgeEEppEi") [flags 0x1]  <function_decl 0x103d5d300 operator++>) [0 operator++ S1 A8])
            (const_int 0 [0]))) Topology.cc:351 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       43 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42 (FALLTHRU,DFS_BACK)
;;              18 [100.0%] 
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 116 117 118 303 304 305 306 307
(code_label 372 370 373 43 149 "" [1 uses])
(note 373 372 374 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 374 373 375 43 (set (reg/f:DI 303)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -152 [0xffffffffffffff68])) [0 this+0 S8 A64])) Topology.cc:351 89 {*movdi_internal}
     (nil))
(insn 375 374 376 43 (set (reg/f:DI 116 [ D.45127 ])
        (mem/f/j:DI (reg/f:DI 303) [0 this_12(D)->g+0 S8 A64])) Topology.cc:351 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 303)
        (nil)))
(insn 376 375 377 43 (parallel [
            (set (reg/f:DI 117 [ D.45128 ])
                (plus:DI (reg/f:DI 116 [ D.45127 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:351 221 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 116 [ D.45127 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 377 376 378 43 (set (reg:DI 5 di)
        (reg/f:DI 117 [ D.45128 ])) Topology.cc:351 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 117 [ D.45128 ])
        (nil)))
(call_insn 378 377 379 43 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt4listIPN5brite4EdgeESaIS2_EE3endEv") [flags 0x1]  <function_decl 0x1036f0400 end>) [0 end S1 A8])
            (const_int 0 [0]))) Topology.cc:351 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 379 378 380 43 (set (reg:DI 304)
        (reg:DI 0 ax)) Topology.cc:351 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 380 379 381 43 (set (reg:DI 305)
        (reg:DI 304)) Topology.cc:351 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 304)
        (nil)))
(insn 381 380 382 43 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 D.41861+0 S8 A64])
        (reg:DI 305)) Topology.cc:351 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 305)
        (nil)))
(insn 382 381 383 43 (parallel [
            (set (reg:DI 306)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:351 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 383 382 384 43 (parallel [
            (set (reg:DI 307)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:351 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 384 383 385 43 (set (reg:DI 4 si)
        (reg:DI 306)) Topology.cc:351 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 306)
        (nil)))
(insn 385 384 386 43 (set (reg:DI 5 di)
        (reg:DI 307)) Topology.cc:351 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 307)
        (nil)))
(call_insn 386 385 387 43 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEneERKS3_") [flags 0x1]  <function_decl 0x103d5d700 operator!=>) [0 operator!= S1 A8])
            (const_int 0 [0]))) Topology.cc:351 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 387 386 389 43 (set (reg:QI 118 [ D.45126 ])
        (reg:QI 0 ax)) Topology.cc:351 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 389 387 390 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 118 [ D.45126 ])
            (const_int 0 [0]))) Topology.cc:351 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 118 [ D.45126 ])
        (nil)))
(jump_insn 390 389 391 43 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 388)
            (pc))) Topology.cc:351 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 388)
;;  succ:       19
;;              44 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       43 (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 391 390 392 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 392 391 1030 44 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
        (const_int 0 [0])) Topology.cc:376 90 {*movsi_internal}
     (nil))
(jump_insn 1030 392 1031 44 (set (pc)
        (label_ref 687)) Topology.cc:376 636 {jump}
     (nil)
 -> 687)
;;  succ:       82 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1031 1030 696)
;; basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       82
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 157 158 159 160 308 309 310
(code_label 696 1031 395 45 188 "" [1 uses])
(note 395 696 396 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 396 395 397 45 (set (reg/f:DI 308)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -152 [0xffffffffffffff68])) [0 this+0 S8 A64])) Topology.cc:379 89 {*movdi_internal}
     (nil))
(insn 397 396 398 45 (set (reg/f:DI 157 [ D.45127 ])
        (mem/f/j:DI (reg/f:DI 308) [0 this_12(D)->g+0 S8 A64])) Topology.cc:379 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 308)
        (nil)))
(insn 398 397 399 45 (set (reg:SI 309)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) Topology.cc:379 90 {*movsi_internal}
     (nil))
(insn 399 398 400 45 (set (reg:SI 4 si)
        (reg:SI 309)) Topology.cc:379 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 309)
        (nil)))
(insn 400 399 401 45 (set (reg:DI 5 di)
        (reg/f:DI 157 [ D.45127 ])) Topology.cc:379 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 157 [ D.45127 ])
        (nil)))
(call_insn 401 400 402 45 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5brite5Graph10GetNodePtrEi") [flags 0x41]  <function_decl 0x10363b400 GetNodePtr>) [0 GetNodePtr S1 A8])
            (const_int 0 [0]))) Topology.cc:379 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 402 401 403 45 (set (reg/f:DI 158 [ D.45131 ])
        (reg:DI 0 ax)) Topology.cc:379 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 403 402 404 45 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 node+0 S8 A64])
        (reg/f:DI 158 [ D.45131 ])) Topology.cc:379 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 158 [ D.45131 ])
        (nil)))
(insn 404 403 405 45 (set (reg:DI 310)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 node+0 S8 A64])) Topology.cc:380 89 {*movdi_internal}
     (nil))
(insn 405 404 406 45 (set (reg:DI 5 di)
        (reg:DI 310)) Topology.cc:380 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 310)
        (nil)))
(call_insn 406 405 407 45 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:380 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 407 406 408 45 (set (reg/f:DI 159 [ D.45134 ])
        (reg:DI 0 ax)) Topology.cc:380 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 408 407 409 45 (set (reg:DI 5 di)
        (reg/f:DI 159 [ D.45134 ])) Topology.cc:380 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 159 [ D.45134 ])
        (nil)))
(call_insn 409 408 410 45 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite8NodeConf11GetNodeTypeEv") [flags 0x41]  <function_decl 0x1035f8a00 GetNodeType>) [0 GetNodeType S1 A8])
            (const_int 0 [0]))) Topology.cc:380 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 410 409 411 45 (set (reg:SI 160 [ D.45135 ])
        (reg:SI 0 ax)) Topology.cc:380 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 411 410 412 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 160 [ D.45135 ])
            (const_int 2 [0x2]))) Topology.cc:381 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 160 [ D.45135 ])
        (nil)))
(jump_insn 412 411 413 45 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 423)
            (pc))) Topology.cc:381 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 423)
;;  succ:       46 (FALLTHRU)
;;              47
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       45 (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 161 162 311
(note 413 412 414 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 414 413 415 46 (set (reg:DI 311)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 node+0 S8 A64])) Topology.cc:381 89 {*movdi_internal}
     (nil))
(insn 415 414 416 46 (set (reg:DI 5 di)
        (reg:DI 311)) Topology.cc:381 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 311)
        (nil)))
(call_insn 416 415 417 46 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:381 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 417 416 418 46 (set (reg/f:DI 161 [ D.45134 ])
        (reg:DI 0 ax)) Topology.cc:381 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 418 417 419 46 (set (reg:DI 5 di)
        (reg/f:DI 161 [ D.45134 ])) Topology.cc:381 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 161 [ D.45134 ])
        (nil)))
(call_insn 419 418 420 46 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite14RouterNodeConf13GetRouterTypeEv") [flags 0x41]  <function_decl 0x103609100 GetRouterType>) [0 GetRouterType S1 A8])
            (const_int 0 [0]))) Topology.cc:381 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 420 419 421 46 (set (reg:SI 162 [ D.45137 ])
        (reg:SI 0 ax)) Topology.cc:381 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 421 420 422 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 162 [ D.45137 ])
            (const_int 1 [0x1]))) Topology.cc:380 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 162 [ D.45137 ])
        (nil)))
(jump_insn 422 421 423 46 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 444)
            (pc))) Topology.cc:380 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 444)
;;  succ:       49
;;              47 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       45
;;              46 (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 163 164 312
(code_label 423 422 424 47 166 "" [1 uses])
(note 424 423 425 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 425 424 426 47 (set (reg:DI 312)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 node+0 S8 A64])) Topology.cc:382 89 {*movdi_internal}
     (nil))
(insn 426 425 427 47 (set (reg:DI 5 di)
        (reg:DI 312)) Topology.cc:382 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 312)
        (nil)))
(call_insn 427 426 428 47 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:382 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 428 427 429 47 (set (reg/f:DI 163 [ D.45134 ])
        (reg:DI 0 ax)) Topology.cc:382 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 429 428 430 47 (set (reg:DI 5 di)
        (reg/f:DI 163 [ D.45134 ])) Topology.cc:382 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 163 [ D.45134 ])
        (nil)))
(call_insn 430 429 431 47 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite8NodeConf11GetNodeTypeEv") [flags 0x41]  <function_decl 0x1035f8a00 GetNodeType>) [0 GetNodeType S1 A8])
            (const_int 0 [0]))) Topology.cc:382 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 431 430 432 47 (set (reg:SI 164 [ D.45135 ])
        (reg:SI 0 ax)) Topology.cc:382 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 432 431 433 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 164 [ D.45135 ])
            (const_int 1 [0x1]))) Topology.cc:381 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 164 [ D.45135 ])
        (nil)))
(jump_insn 433 432 434 47 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 449)
            (pc))) Topology.cc:381 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 449)
;;  succ:       48 (FALLTHRU)
;;              50
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       47 (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 165 166 313
(note 434 433 435 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 435 434 436 48 (set (reg:DI 313)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 node+0 S8 A64])) Topology.cc:383 89 {*movdi_internal}
     (nil))
(insn 436 435 437 48 (set (reg:DI 5 di)
        (reg:DI 313)) Topology.cc:383 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 313)
        (nil)))
(call_insn 437 436 438 48 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:383 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 438 437 439 48 (set (reg/f:DI 165 [ D.45134 ])
        (reg:DI 0 ax)) Topology.cc:383 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 439 438 440 48 (set (reg:DI 5 di)
        (reg/f:DI 165 [ D.45134 ])) Topology.cc:383 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 165 [ D.45134 ])
        (nil)))
(call_insn 440 439 441 48 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite10ASNodeConf9GetASTypeEv") [flags 0x41]  <function_decl 0x103609b00 GetASType>) [0 GetASType S1 A8])
            (const_int 0 [0]))) Topology.cc:383 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 441 440 442 48 (set (reg:SI 166 [ D.45138 ])
        (reg:SI 0 ax)) Topology.cc:383 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 442 441 443 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 166 [ D.45138 ])
            (const_int 1 [0x1]))) Topology.cc:382 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 166 [ D.45138 ])
        (nil)))
(jump_insn 443 442 444 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 449)
            (pc))) Topology.cc:382 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 449)
;;  succ:       49 (FALLTHRU)
;;              50
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       46
;;              48 (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 85
(code_label 444 443 445 49 167 "" [1 uses])
(note 445 444 446 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 446 445 1032 49 (set (reg:QI 85 [ D.45126 ])
        (const_int 1 [0x1])) Topology.cc:381 93 {*movqi_internal}
     (nil))
(jump_insn 1032 446 1033 49 (set (pc)
        (label_ref 452)) Topology.cc:381 636 {jump}
     (nil)
 -> 452)
;;  succ:       51 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85

(barrier 1033 1032 449)
;; basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 49, next block 51, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       47
;;              48
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 85
(code_label 449 1033 450 50 168 "" [2 uses])
(note 450 449 451 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 451 450 452 50 (set (reg:QI 85 [ D.45126 ])
        (const_int 0 [0])) Topology.cc:381 93 {*movqi_internal}
     (nil))
;;  succ:       51 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85

;; basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 50, next block 52, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       50 (FALLTHRU)
;;              49 [100.0%] 
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85
;; lr  def 	 17 [flags]
(code_label 452 451 453 51 169 "" [1 uses])
(note 453 452 454 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 454 453 455 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 85 [ D.45126 ])
            (const_int 0 [0]))) Topology.cc:380 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 85 [ D.45126 ])
        (nil)))
(jump_insn 455 454 456 51 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 459)
            (pc))) Topology.cc:380 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 459)
;;  succ:       52 (FALLTHRU)
;;              53
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 51, next block 53, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       51 (FALLTHRU)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 456 455 1034 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1034 456 1035 52 (set (pc)
        (label_ref 684)) Topology.cc:384 636 {jump}
     (nil)
 -> 684)
;;  succ:       81 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1035 1034 459)
;; basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 52, next block 54, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       51
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 167 168 169 170 314 315 316 317
(code_label 459 1035 460 53 170 "" [1 uses])
(note 460 459 461 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 461 460 462 53 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 num_stub_links+0 S4 A32])
        (const_int 0 [0])) Topology.cc:386 90 {*movsi_internal}
     (nil))
(insn 462 461 463 53 (set (reg:SI 314)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) Topology.cc:387 90 {*movsi_internal}
     (nil))
(insn 463 462 464 53 (set (reg:DI 167 [ D.45141 ])
        (sign_extend:DI (reg:SI 314))) Topology.cc:387 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 314)
        (nil)))
(insn 464 463 465 53 (set (reg/f:DI 315)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -152 [0xffffffffffffff68])) [0 this+0 S8 A64])) Topology.cc:387 89 {*movdi_internal}
     (nil))
(insn 465 464 466 53 (set (reg/f:DI 168 [ D.45127 ])
        (mem/f/j:DI (reg/f:DI 315) [0 this_12(D)->g+0 S8 A64])) Topology.cc:387 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 315)
        (nil)))
(insn 466 465 467 53 (parallel [
            (set (reg/f:DI 169 [ D.45142 ])
                (plus:DI (reg/f:DI 168 [ D.45127 ])
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:387 221 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 168 [ D.45127 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 467 466 468 53 (set (reg:DI 4 si)
        (reg:DI 167 [ D.45141 ])) Topology.cc:387 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 167 [ D.45141 ])
        (nil)))
(insn 468 467 469 53 (set (reg:DI 5 di)
        (reg/f:DI 169 [ D.45142 ])) Topology.cc:387 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 169 [ D.45142 ])
        (nil)))
(call_insn 469 468 470 53 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorISt4listIPN5brite4EdgeESaIS3_EESaIS5_EEixEm") [flags 0x1]  <function_decl 0x1037c2d00 operator[]>) [0 operator[] S1 A8])
            (const_int 0 [0]))) Topology.cc:387 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 470 469 471 53 (set (reg/f:DI 170 [ D.45143 ])
        (reg:DI 0 ax)) Topology.cc:387 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 471 470 472 53 (set (reg:DI 5 di)
        (reg/f:DI 170 [ D.45143 ])) Topology.cc:387 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 170 [ D.45143 ])
        (nil)))
(call_insn 472 471 473 53 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt4listIPN5brite4EdgeESaIS2_EE5beginEv") [flags 0x1]  <function_decl 0x1036f0200 begin>) [0 begin S1 A8])
            (const_int 0 [0]))) Topology.cc:387 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 473 472 474 53 (set (reg:DI 316)
        (reg:DI 0 ax)) Topology.cc:387 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 474 473 475 53 (set (reg:DI 317)
        (reg:DI 316)) Topology.cc:387 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 316)
        (nil)))
(insn 475 474 1036 53 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70])) [0 el+0 S8 A64])
        (reg:DI 317)) Topology.cc:387 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 317)
        (nil)))
(jump_insn 1036 475 1037 53 (set (pc)
        (label_ref 556)) Topology.cc:387 636 {jump}
     (nil)
 -> 556)
;;  succ:       63 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1037 1036 578)
;; basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 53, next block 55, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       63
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 176 177 178 179 318
(code_label 578 1037 478 54 178 "" [1 uses])
(note 478 578 479 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 479 478 480 54 (parallel [
            (set (reg:DI 318)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:389 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 480 479 481 54 (set (reg:DI 5 di)
        (reg:DI 318)) Topology.cc:389 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 318)
        (nil)))
(call_insn 481 480 482 54 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:389 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 482 481 483 54 (set (reg/f:DI 176 [ D.45129 ])
        (reg:DI 0 ax)) Topology.cc:389 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 483 482 484 54 (set (reg/f:DI 177 [ D.45136 ])
        (mem/f:DI (reg/f:DI 176 [ D.45129 ]) [0 *_152+0 S8 A64])) Topology.cc:389 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 176 [ D.45129 ])
        (nil)))
(insn 484 483 485 54 (set (reg:DI 5 di)
        (reg/f:DI 177 [ D.45136 ])) Topology.cc:389 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 177 [ D.45136 ])
        (nil)))
(call_insn 485 484 486 54 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge7GetConfEv") [flags 0x41]  <function_decl 0x103612500 GetConf>) [0 GetConf S1 A8])
            (const_int 0 [0]))) Topology.cc:389 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 486 485 487 54 (set (reg/f:DI 178 [ D.45139 ])
        (reg:DI 0 ax)) Topology.cc:389 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 487 486 488 54 (set (reg:DI 5 di)
        (reg/f:DI 178 [ D.45139 ])) Topology.cc:389 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 178 [ D.45139 ])
        (nil)))
(call_insn 488 487 489 54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite8EdgeConf11GetEdgeTypeEv") [flags 0x41]  <function_decl 0x10361c500 GetEdgeType>) [0 GetEdgeType S1 A8])
            (const_int 0 [0]))) Topology.cc:389 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 489 488 490 54 (set (reg:SI 179 [ D.45140 ])
        (reg:SI 0 ax)) Topology.cc:389 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 490 489 491 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 179 [ D.45140 ])
            (const_int 1 [0x1]))) Topology.cc:390 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 179 [ D.45140 ])
        (nil)))
(jump_insn 491 490 492 54 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 506)
            (pc))) Topology.cc:390 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 506)
;;  succ:       55 (FALLTHRU)
;;              56
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 55, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 54, next block 56, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       54 (FALLTHRU)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 180 181 182 183 319
(note 492 491 493 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 493 492 494 55 (parallel [
            (set (reg:DI 319)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:390 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 494 493 495 55 (set (reg:DI 5 di)
        (reg:DI 319)) Topology.cc:390 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 319)
        (nil)))
(call_insn 495 494 496 55 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:390 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 496 495 497 55 (set (reg/f:DI 180 [ D.45129 ])
        (reg:DI 0 ax)) Topology.cc:390 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 497 496 498 55 (set (reg/f:DI 181 [ D.45136 ])
        (mem/f:DI (reg/f:DI 180 [ D.45129 ]) [0 *_158+0 S8 A64])) Topology.cc:390 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 180 [ D.45129 ])
        (nil)))
(insn 498 497 499 55 (set (reg:DI 5 di)
        (reg/f:DI 181 [ D.45136 ])) Topology.cc:390 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 181 [ D.45136 ])
        (nil)))
(call_insn 499 498 500 55 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge7GetConfEv") [flags 0x41]  <function_decl 0x103612500 GetConf>) [0 GetConf S1 A8])
            (const_int 0 [0]))) Topology.cc:390 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 500 499 501 55 (set (reg/f:DI 182 [ D.45139 ])
        (reg:DI 0 ax)) Topology.cc:390 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 501 500 502 55 (set (reg:DI 5 di)
        (reg/f:DI 182 [ D.45139 ])) Topology.cc:390 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 182 [ D.45139 ])
        (nil)))
(call_insn 502 501 503 55 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite10ASEdgeConf13GetASEdgeTypeEv") [flags 0x41]  <function_decl 0x10361cd00 GetASEdgeType>) [0 GetASEdgeType S1 A8])
            (const_int 0 [0]))) Topology.cc:390 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 503 502 504 55 (set (reg:SI 183 [ D.45144 ])
        (reg:SI 0 ax)) Topology.cc:390 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 504 503 505 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 183 [ D.45144 ])
            (const_int 1 [0x1]))) Topology.cc:389 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 183 [ D.45144 ])
        (nil)))
(jump_insn 505 504 506 55 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 535)
            (pc))) Topology.cc:389 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 535)
;;  succ:       58
;;              56 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 56, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 55, next block 57, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       54
;;              55 (FALLTHRU)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 184 185 186 187 320
(code_label 506 505 507 56 173 "" [1 uses])
(note 507 506 508 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 508 507 509 56 (parallel [
            (set (reg:DI 320)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:391 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 509 508 510 56 (set (reg:DI 5 di)
        (reg:DI 320)) Topology.cc:391 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 320)
        (nil)))
(call_insn 510 509 511 56 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:391 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 511 510 512 56 (set (reg/f:DI 184 [ D.45129 ])
        (reg:DI 0 ax)) Topology.cc:391 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 512 511 513 56 (set (reg/f:DI 185 [ D.45136 ])
        (mem/f:DI (reg/f:DI 184 [ D.45129 ]) [0 *_164+0 S8 A64])) Topology.cc:391 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 184 [ D.45129 ])
        (nil)))
(insn 513 512 514 56 (set (reg:DI 5 di)
        (reg/f:DI 185 [ D.45136 ])) Topology.cc:391 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 185 [ D.45136 ])
        (nil)))
(call_insn 514 513 515 56 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge7GetConfEv") [flags 0x41]  <function_decl 0x103612500 GetConf>) [0 GetConf S1 A8])
            (const_int 0 [0]))) Topology.cc:391 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 515 514 516 56 (set (reg/f:DI 186 [ D.45139 ])
        (reg:DI 0 ax)) Topology.cc:391 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 516 515 517 56 (set (reg:DI 5 di)
        (reg/f:DI 186 [ D.45139 ])) Topology.cc:391 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 186 [ D.45139 ])
        (nil)))
(call_insn 517 516 518 56 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite8EdgeConf11GetEdgeTypeEv") [flags 0x41]  <function_decl 0x10361c500 GetEdgeType>) [0 GetEdgeType S1 A8])
            (const_int 0 [0]))) Topology.cc:391 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 518 517 519 56 (set (reg:SI 187 [ D.45140 ])
        (reg:SI 0 ax)) Topology.cc:391 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 519 518 520 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 187 [ D.45140 ])
            (const_int 0 [0]))) Topology.cc:390 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 187 [ D.45140 ])
        (nil)))
(jump_insn 520 519 521 56 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 540)
            (pc))) Topology.cc:390 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 540)
;;  succ:       57 (FALLTHRU)
;;              59
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 57, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 56, next block 58, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       56 (FALLTHRU)
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 188 189 190 191 321
(note 521 520 522 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 522 521 523 57 (parallel [
            (set (reg:DI 321)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:392 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 523 522 524 57 (set (reg:DI 5 di)
        (reg:DI 321)) Topology.cc:392 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 321)
        (nil)))
(call_insn 524 523 525 57 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:392 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 525 524 526 57 (set (reg/f:DI 188 [ D.45129 ])
        (reg:DI 0 ax)) Topology.cc:392 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 526 525 527 57 (set (reg/f:DI 189 [ D.45136 ])
        (mem/f:DI (reg/f:DI 188 [ D.45129 ]) [0 *_170+0 S8 A64])) Topology.cc:392 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 188 [ D.45129 ])
        (nil)))
(insn 527 526 528 57 (set (reg:DI 5 di)
        (reg/f:DI 189 [ D.45136 ])) Topology.cc:392 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 189 [ D.45136 ])
        (nil)))
(call_insn 528 527 529 57 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge7GetConfEv") [flags 0x41]  <function_decl 0x103612500 GetConf>) [0 GetConf S1 A8])
            (const_int 0 [0]))) Topology.cc:392 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 529 528 530 57 (set (reg/f:DI 190 [ D.45139 ])
        (reg:DI 0 ax)) Topology.cc:392 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 530 529 531 57 (set (reg:DI 5 di)
        (reg/f:DI 190 [ D.45139 ])) Topology.cc:392 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 190 [ D.45139 ])
        (nil)))
(call_insn 531 530 532 57 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite14RouterEdgeConf17GetRouterEdgeTypeEv") [flags 0x41]  <function_decl 0x10362b700 GetRouterEdgeType>) [0 GetRouterEdgeType S1 A8])
            (const_int 0 [0]))) Topology.cc:392 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 532 531 533 57 (set (reg:SI 191 [ D.45145 ])
        (reg:SI 0 ax)) Topology.cc:392 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 533 532 534 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 191 [ D.45145 ])
            (const_int 2 [0x2]))) Topology.cc:391 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 191 [ D.45145 ])
        (nil)))
(jump_insn 534 533 535 57 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 540)
            (pc))) Topology.cc:391 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 540)
;;  succ:       58 (FALLTHRU)
;;              59
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 57, next block 59, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       55
;;              57 (FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 86
(code_label 535 534 536 58 174 "" [1 uses])
(note 536 535 537 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 537 536 1038 58 (set (reg:QI 86 [ D.45126 ])
        (const_int 1 [0x1])) Topology.cc:390 93 {*movqi_internal}
     (nil))
(jump_insn 1038 537 1039 58 (set (pc)
        (label_ref 543)) Topology.cc:390 636 {jump}
     (nil)
 -> 543)
;;  succ:       60 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86

(barrier 1039 1038 540)
;; basic block 59, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 58, next block 60, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       56
;;              57
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 86
(code_label 540 1039 541 59 175 "" [2 uses])
(note 541 540 542 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 542 541 543 59 (set (reg:QI 86 [ D.45126 ])
        (const_int 0 [0])) Topology.cc:390 93 {*movqi_internal}
     (nil))
;;  succ:       60 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86

;; basic block 60, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 59, next block 61, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       59 (FALLTHRU)
;;              58 [100.0%] 
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86
;; lr  def 	 17 [flags]
(code_label 543 542 544 60 176 "" [1 uses])
(note 544 543 545 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 545 544 546 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 86 [ D.45126 ])
            (const_int 0 [0]))) Topology.cc:389 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 86 [ D.45126 ])
        (nil)))
(jump_insn 546 545 547 60 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 549)
            (pc))) Topology.cc:389 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 549)
;;  succ:       61 (FALLTHRU)
;;              62
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 61, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 60, next block 62, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       60 (FALLTHRU)
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 547 546 548 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 548 547 549 61 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [0 num_stub_links+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 num_stub_links+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:394 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       62 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 62, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 61, next block 63, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       60
;;              61 (FALLTHRU)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 322
(code_label 549 548 550 62 177 "" [1 uses])
(note 550 549 551 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 551 550 552 62 (parallel [
            (set (reg:DI 322)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:387 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 552 551 553 62 (set (reg:SI 4 si)
        (const_int 0 [0])) Topology.cc:387 90 {*movsi_internal}
     (nil))
(insn 553 552 554 62 (set (reg:DI 5 di)
        (reg:DI 322)) Topology.cc:387 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 322)
        (nil)))
(call_insn 554 553 556 62 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt14_List_iteratorIPN5brite4EdgeEEppEi") [flags 0x1]  <function_decl 0x103d5d300 operator++>) [0 operator++ S1 A8])
            (const_int 0 [0]))) Topology.cc:387 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       63 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 63, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 62, next block 64, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       62 (FALLTHRU,DFS_BACK)
;;              53 [100.0%] 
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 171 172 173 174 175 323 324 325 326 327 328
(code_label 556 554 557 63 172 "" [1 uses])
(note 557 556 558 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 558 557 559 63 (set (reg:SI 323)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) Topology.cc:387 90 {*movsi_internal}
     (nil))
(insn 559 558 560 63 (set (reg:DI 171 [ D.45141 ])
        (sign_extend:DI (reg:SI 323))) Topology.cc:387 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 323)
        (nil)))
(insn 560 559 561 63 (set (reg/f:DI 324)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -152 [0xffffffffffffff68])) [0 this+0 S8 A64])) Topology.cc:387 89 {*movdi_internal}
     (nil))
(insn 561 560 562 63 (set (reg/f:DI 172 [ D.45127 ])
        (mem/f/j:DI (reg/f:DI 324) [0 this_12(D)->g+0 S8 A64])) Topology.cc:387 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 324)
        (nil)))
(insn 562 561 563 63 (parallel [
            (set (reg/f:DI 173 [ D.45142 ])
                (plus:DI (reg/f:DI 172 [ D.45127 ])
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:387 221 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 172 [ D.45127 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 563 562 564 63 (set (reg:DI 4 si)
        (reg:DI 171 [ D.45141 ])) Topology.cc:387 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 171 [ D.45141 ])
        (nil)))
(insn 564 563 565 63 (set (reg:DI 5 di)
        (reg/f:DI 173 [ D.45142 ])) Topology.cc:387 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 173 [ D.45142 ])
        (nil)))
(call_insn 565 564 566 63 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorISt4listIPN5brite4EdgeESaIS3_EESaIS5_EEixEm") [flags 0x1]  <function_decl 0x1037c2d00 operator[]>) [0 operator[] S1 A8])
            (const_int 0 [0]))) Topology.cc:387 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 566 565 567 63 (set (reg/f:DI 174 [ D.45143 ])
        (reg:DI 0 ax)) Topology.cc:387 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 567 566 568 63 (set (reg:DI 5 di)
        (reg/f:DI 174 [ D.45143 ])) Topology.cc:387 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 174 [ D.45143 ])
        (nil)))
(call_insn 568 567 569 63 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt4listIPN5brite4EdgeESaIS2_EE3endEv") [flags 0x1]  <function_decl 0x1036f0400 end>) [0 end S1 A8])
            (const_int 0 [0]))) Topology.cc:387 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 569 568 570 63 (set (reg:DI 325)
        (reg:DI 0 ax)) Topology.cc:387 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 570 569 571 63 (set (reg:DI 326)
        (reg:DI 325)) Topology.cc:387 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 325)
        (nil)))
(insn 571 570 572 63 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 D.41871+0 S8 A64])
        (reg:DI 326)) Topology.cc:387 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 326)
        (nil)))
(insn 572 571 573 63 (parallel [
            (set (reg:DI 327)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:387 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 573 572 574 63 (parallel [
            (set (reg:DI 328)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:387 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 574 573 575 63 (set (reg:DI 4 si)
        (reg:DI 327)) Topology.cc:387 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 327)
        (nil)))
(insn 575 574 576 63 (set (reg:DI 5 di)
        (reg:DI 328)) Topology.cc:387 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 328)
        (nil)))
(call_insn 576 575 577 63 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEneERKS3_") [flags 0x1]  <function_decl 0x103d5d700 operator!=>) [0 operator!= S1 A8])
            (const_int 0 [0]))) Topology.cc:387 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 577 576 579 63 (set (reg:QI 175 [ D.45126 ])
        (reg:QI 0 ax)) Topology.cc:387 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 579 577 580 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 175 [ D.45126 ])
            (const_int 0 [0]))) Topology.cc:387 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 175 [ D.45126 ])
        (nil)))
(jump_insn 580 579 581 63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 578)
            (pc))) Topology.cc:387 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 578)
;;  succ:       54
;;              64 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 64, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 63, next block 65, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       63 (FALLTHRU)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 192 193 194 329
(note 581 580 582 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 582 581 583 64 (set (reg:DI 329)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 node+0 S8 A64])) Topology.cc:399 89 {*movdi_internal}
     (nil))
(insn 583 582 584 64 (set (reg:DI 5 di)
        (reg:DI 329)) Topology.cc:399 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 329)
        (nil)))
(call_insn 584 583 585 64 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:399 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 585 584 586 64 (set (reg/f:DI 192 [ D.45134 ])
        (reg:DI 0 ax)) Topology.cc:399 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 586 585 587 64 (set (reg:DI 5 di)
        (reg/f:DI 192 [ D.45134 ])) Topology.cc:399 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 192 [ D.45134 ])
        (nil)))
(call_insn 587 586 588 64 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite8NodeConf11GetNodeTypeEv") [flags 0x41]  <function_decl 0x1035f8a00 GetNodeType>) [0 GetNodeType S1 A8])
            (const_int 0 [0]))) Topology.cc:399 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 588 587 589 64 (set (reg:SI 193 [ D.45135 ])
        (reg:SI 0 ax)) Topology.cc:399 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 589 588 590 64 (set (reg:SI 194 [ D.45130 ])
        (reg:SI 193 [ D.45135 ])) Topology.cc:399 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 193 [ D.45135 ])
        (nil)))
(insn 590 589 591 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 194 [ D.45130 ])
            (const_int 1 [0x1]))) Topology.cc:399 7 {*cmpsi_1}
     (nil))
(jump_insn 591 590 1009 64 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 636)
            (pc))) Topology.cc:399 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 636)
;;  succ:       73
;;              65 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 194

;; basic block 65, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 64, next block 66, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       64 (FALLTHRU)
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 194
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 194
;; lr  def 	 17 [flags]
(note 1009 591 592 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 592 1009 593 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 194 [ D.45130 ])
            (const_int 2 [0x2]))) Topology.cc:399 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 194 [ D.45130 ])
        (nil)))
(jump_insn 593 592 597 65 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1040)
            (pc))) Topology.cc:399 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 1040)
;;  succ:       66 (FALLTHRU)
;;              80
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 66, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 65, next block 67, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       65 (FALLTHRU)
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 597 593 598 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 598 597 599 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 num_stub_links+0 S4 A32])
            (const_int 1 [0x1]))) Topology.cc:401 7 {*cmpsi_1}
     (nil))
(jump_insn 599 598 600 66 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 608)
            (pc))) Topology.cc:401 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 608)
;;  succ:       67 (FALLTHRU)
;;              68
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 67, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 66, next block 68, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       66 (FALLTHRU)
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 195 330
(note 600 599 601 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 601 600 602 67 (set (reg:DI 330)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 node+0 S8 A64])) Topology.cc:402 89 {*movdi_internal}
     (nil))
(insn 602 601 603 67 (set (reg:DI 5 di)
        (reg:DI 330)) Topology.cc:402 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 330)
        (nil)))
(call_insn 603 602 604 67 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:402 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 604 603 605 67 (set (reg/f:DI 195 [ D.45134 ])
        (reg:DI 0 ax)) Topology.cc:402 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 605 604 606 67 (set (reg:SI 4 si)
        (const_int 3 [0x3])) Topology.cc:402 90 {*movsi_internal}
     (nil))
(insn 606 605 607 67 (set (reg:DI 5 di)
        (reg/f:DI 195 [ D.45134 ])) Topology.cc:402 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 195 [ D.45134 ])
        (nil)))
(call_insn 607 606 608 67 (call (mem:QI (symbol_ref/i:DI ("_ZN5brite14RouterNodeConf13SetRouterTypeENS0_14RouterNodeTypeE") [flags 0x41]  <function_decl 0x103609200 SetRouterType>) [0 SetRouterType S1 A8])
        (const_int 0 [0])) Topology.cc:402 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       68 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 68, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 67, next block 69, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       66
;;              67 (FALLTHRU)
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 608 607 609 68 182 "" [1 uses])
(note 609 608 610 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 610 609 611 68 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 num_stub_links+0 S4 A32])
            (const_int 1 [0x1]))) Topology.cc:404 7 {*cmpsi_1}
     (nil))
(jump_insn 611 610 612 68 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 620)
            (pc))) Topology.cc:404 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 620)
;;  succ:       69 (FALLTHRU)
;;              70
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 69, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 68, next block 70, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       68 (FALLTHRU)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 196 331
(note 612 611 613 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 613 612 614 69 (set (reg:DI 331)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 node+0 S8 A64])) Topology.cc:405 89 {*movdi_internal}
     (nil))
(insn 614 613 615 69 (set (reg:DI 5 di)
        (reg:DI 331)) Topology.cc:405 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 331)
        (nil)))
(call_insn 615 614 616 69 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:405 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 616 615 617 69 (set (reg/f:DI 196 [ D.45134 ])
        (reg:DI 0 ax)) Topology.cc:405 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 617 616 618 69 (set (reg:SI 4 si)
        (const_int 2 [0x2])) Topology.cc:405 90 {*movsi_internal}
     (nil))
(insn 618 617 619 69 (set (reg:DI 5 di)
        (reg/f:DI 196 [ D.45134 ])) Topology.cc:405 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 196 [ D.45134 ])
        (nil)))
(call_insn 619 618 620 69 (call (mem:QI (symbol_ref/i:DI ("_ZN5brite14RouterNodeConf13SetRouterTypeENS0_14RouterNodeTypeE") [flags 0x41]  <function_decl 0x103609200 SetRouterType>) [0 SetRouterType S1 A8])
        (const_int 0 [0])) Topology.cc:405 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       70 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 70, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 69, next block 71, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       68
;;              69 (FALLTHRU)
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 620 619 621 70 183 "" [1 uses])
(note 621 620 622 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 622 621 623 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 num_stub_links+0 S4 A32])
            (const_int 0 [0]))) Topology.cc:407 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 623 622 624 70 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 632)
            (pc))) Topology.cc:407 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 632)
;;  succ:       71 (FALLTHRU)
;;              72
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 71, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 70, next block 72, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       70 (FALLTHRU)
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 197 332
(note 624 623 625 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 625 624 626 71 (set (reg:DI 332)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 node+0 S8 A64])) Topology.cc:408 89 {*movdi_internal}
     (nil))
(insn 626 625 627 71 (set (reg:DI 5 di)
        (reg:DI 332)) Topology.cc:408 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 332)
        (nil)))
(call_insn 627 626 628 71 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:408 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 628 627 629 71 (set (reg/f:DI 197 [ D.45134 ])
        (reg:DI 0 ax)) Topology.cc:408 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 629 628 630 71 (set (reg:SI 4 si)
        (const_int 4 [0x4])) Topology.cc:408 90 {*movsi_internal}
     (nil))
(insn 630 629 631 71 (set (reg:DI 5 di)
        (reg/f:DI 197 [ D.45134 ])) Topology.cc:408 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 197 [ D.45134 ])
        (nil)))
(call_insn 631 630 632 71 (call (mem:QI (symbol_ref/i:DI ("_ZN5brite14RouterNodeConf13SetRouterTypeENS0_14RouterNodeTypeE") [flags 0x41]  <function_decl 0x103609200 SetRouterType>) [0 SetRouterType S1 A8])
        (const_int 0 [0])) Topology.cc:408 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       72 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 72, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 71, next block 73, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       70
;;              71 (FALLTHRU)
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 632 631 633 72 184 "" [1 uses])
(note 633 632 1041 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1041 633 1042 72 (set (pc)
        (label_ref 684)) Topology.cc:410 636 {jump}
     (nil)
 -> 684)
;;  succ:       81 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1042 1041 636)
;; basic block 73, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 72, next block 74, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       64
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 636 1042 637 73 180 "" [1 uses])
(note 637 636 638 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 638 637 639 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 num_stub_links+0 S4 A32])
            (const_int 1 [0x1]))) Topology.cc:413 7 {*cmpsi_1}
     (nil))
(jump_insn 639 638 640 73 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 648)
            (pc))) Topology.cc:413 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 648)
;;  succ:       74 (FALLTHRU)
;;              75
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 74, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 73, next block 75, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       73 (FALLTHRU)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 198 333
(note 640 639 641 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 641 640 642 74 (set (reg:DI 333)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 node+0 S8 A64])) Topology.cc:414 89 {*movdi_internal}
     (nil))
(insn 642 641 643 74 (set (reg:DI 5 di)
        (reg:DI 333)) Topology.cc:414 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 333)
        (nil)))
(call_insn 643 642 644 74 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:414 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 644 643 645 74 (set (reg/f:DI 198 [ D.45134 ])
        (reg:DI 0 ax)) Topology.cc:414 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 645 644 646 74 (set (reg:SI 4 si)
        (const_int 2 [0x2])) Topology.cc:414 90 {*movsi_internal}
     (nil))
(insn 646 645 647 74 (set (reg:DI 5 di)
        (reg/f:DI 198 [ D.45134 ])) Topology.cc:414 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 198 [ D.45134 ])
        (nil)))
(call_insn 647 646 648 74 (call (mem:QI (symbol_ref/i:DI ("_ZN5brite10ASNodeConf9SetASTypeENS0_10ASNodeTypeE") [flags 0x41]  <function_decl 0x103609c00 SetASType>) [0 SetASType S1 A8])
        (const_int 0 [0])) Topology.cc:414 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       75 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 75, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 74, next block 76, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       73
;;              74 (FALLTHRU)
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 648 647 649 75 185 "" [1 uses])
(note 649 648 650 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 650 649 651 75 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 num_stub_links+0 S4 A32])
            (const_int 1 [0x1]))) Topology.cc:416 7 {*cmpsi_1}
     (nil))
(jump_insn 651 650 652 75 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 660)
            (pc))) Topology.cc:416 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 660)
;;  succ:       76 (FALLTHRU)
;;              77
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 76, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 75, next block 77, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       75 (FALLTHRU)
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 199 334
(note 652 651 653 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 653 652 654 76 (set (reg:DI 334)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 node+0 S8 A64])) Topology.cc:417 89 {*movdi_internal}
     (nil))
(insn 654 653 655 76 (set (reg:DI 5 di)
        (reg:DI 334)) Topology.cc:417 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 334)
        (nil)))
(call_insn 655 654 656 76 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:417 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 656 655 657 76 (set (reg/f:DI 199 [ D.45134 ])
        (reg:DI 0 ax)) Topology.cc:417 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 657 656 658 76 (set (reg:SI 4 si)
        (const_int 3 [0x3])) Topology.cc:417 90 {*movsi_internal}
     (nil))
(insn 658 657 659 76 (set (reg:DI 5 di)
        (reg/f:DI 199 [ D.45134 ])) Topology.cc:417 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 199 [ D.45134 ])
        (nil)))
(call_insn 659 658 660 76 (call (mem:QI (symbol_ref/i:DI ("_ZN5brite10ASNodeConf9SetASTypeENS0_10ASNodeTypeE") [flags 0x41]  <function_decl 0x103609c00 SetASType>) [0 SetASType S1 A8])
        (const_int 0 [0])) Topology.cc:417 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       77 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 77, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 76, next block 78, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       75
;;              76 (FALLTHRU)
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 660 659 661 77 186 "" [1 uses])
(note 661 660 662 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 662 661 663 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 num_stub_links+0 S4 A32])
            (const_int 0 [0]))) Topology.cc:419 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 663 662 664 77 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 672)
            (pc))) Topology.cc:419 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 672)
;;  succ:       78 (FALLTHRU)
;;              79
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 78, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 77, next block 79, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       77 (FALLTHRU)
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 200 335
(note 664 663 665 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 665 664 666 78 (set (reg:DI 335)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 node+0 S8 A64])) Topology.cc:420 89 {*movdi_internal}
     (nil))
(insn 666 665 667 78 (set (reg:DI 5 di)
        (reg:DI 335)) Topology.cc:420 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 335)
        (nil)))
(call_insn 667 666 668 78 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:420 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 668 667 669 78 (set (reg/f:DI 200 [ D.45134 ])
        (reg:DI 0 ax)) Topology.cc:420 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 669 668 670 78 (set (reg:SI 4 si)
        (const_int 4 [0x4])) Topology.cc:420 90 {*movsi_internal}
     (nil))
(insn 670 669 671 78 (set (reg:DI 5 di)
        (reg/f:DI 200 [ D.45134 ])) Topology.cc:420 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 200 [ D.45134 ])
        (nil)))
(call_insn 671 670 672 78 (call (mem:QI (symbol_ref/i:DI ("_ZN5brite10ASNodeConf9SetASTypeENS0_10ASNodeTypeE") [flags 0x41]  <function_decl 0x103609c00 SetASType>) [0 SetASType S1 A8])
        (const_int 0 [0])) Topology.cc:420 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       79 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 79, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 78, next block 80, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       77
;;              78 (FALLTHRU)
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 672 671 673 79 187 "" [1 uses])
(note 673 672 1043 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1043 673 1044 79 (set (pc)
        (label_ref 684)) Topology.cc:422 636 {jump}
     (nil)
 -> 684)
;;  succ:       81 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1044 1043 1040)
;; basic block 80, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 79, next block 81, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       65
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(code_label 1040 1044 677 80 210 "" [1 uses])
(note 677 1040 678 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 678 677 679 80 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*LC20") [flags 0x2]  <var_decl 0x1041c91c8 *LC20>)) Topology.cc:425 89 {*movdi_internal}
     (nil))
(insn 679 678 680 80 (set (reg:SI 1 dx)
        (const_int 425 [0x1a9])) Topology.cc:425 90 {*movsi_internal}
     (nil))
(insn 680 679 681 80 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*LC1") [flags 0x2]  <var_decl 0x10417fda8 *LC1>)) Topology.cc:425 89 {*movdi_internal}
     (nil))
(insn 681 680 682 80 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZZN5brite8Topology8ClassifyEvE8__func__") [flags 0x1c02]  <var_decl 0x103dbae40 __func__>)) Topology.cc:425 89 {*movdi_internal}
     (nil))
(call_insn 682 681 683 80 (call (mem:QI (symbol_ref:DI ("__assert_rtn") [flags 0x41]  <function_decl 0x1035dc600 __assert_rtn>) [0 __assert_rtn S1 A8])
        (const_int 0 [0])) Topology.cc:425 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                        (expr_list:REG_NORETURN (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 683 682 684)
;; basic block 81, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 80, next block 82, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       72 [100.0%] 
;;              52 [100.0%] 
;;              79 [100.0%] 
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 684 683 685 81 171 "" [3 uses])
(note 685 684 686 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 686 685 687 81 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:376 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       82 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 82, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 81, next block 83, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       81 (FALLTHRU,DFS_BACK)
;;              44 [100.0%] 
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 154 155 156 336
(code_label 687 686 688 82 165 "" [1 uses])
(note 688 687 689 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 689 688 690 82 (set (reg/f:DI 336)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -152 [0xffffffffffffff68])) [0 this+0 S8 A64])) Topology.cc:376 89 {*movdi_internal}
     (nil))
(insn 690 689 691 82 (set (reg/f:DI 154 [ D.45127 ])
        (mem/f/j:DI (reg/f:DI 336) [0 this_12(D)->g+0 S8 A64])) Topology.cc:376 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 336)
        (nil)))
(insn 691 690 692 82 (set (reg:DI 5 di)
        (reg/f:DI 154 [ D.45127 ])) Topology.cc:376 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 154 [ D.45127 ])
        (nil)))
(call_insn 692 691 693 82 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5brite5Graph11GetNumNodesEv") [flags 0x41]  <function_decl 0x10363b800 GetNumNodes>) [0 GetNumNodes S1 A8])
            (const_int 0 [0]))) Topology.cc:376 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 693 692 694 82 (set (reg:SI 155 [ D.45130 ])
        (reg:SI 0 ax)) Topology.cc:376 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 694 693 695 82 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 155 [ D.45130 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32]))) Topology.cc:376 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 155 [ D.45130 ])
        (nil)))
(insn 695 694 697 82 (set (reg:QI 156 [ D.45126 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) Topology.cc:376 592 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
(insn 697 695 698 82 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 156 [ D.45126 ])
            (const_int 0 [0]))) Topology.cc:376 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 156 [ D.45126 ])
        (nil)))
(jump_insn 698 697 699 82 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 696)
            (pc))) Topology.cc:376 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 696)
;;  succ:       45
;;              83 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 83, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 82, next block 84, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       82 (FALLTHRU)
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 201 202 337 338 339
(note 699 698 700 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 700 699 701 83 (set (reg/f:DI 337)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -152 [0xffffffffffffff68])) [0 this+0 S8 A64])) Topology.cc:431 89 {*movdi_internal}
     (nil))
(insn 701 700 702 83 (set (reg/f:DI 201 [ D.45127 ])
        (mem/f/j:DI (reg/f:DI 337) [0 this_12(D)->g+0 S8 A64])) Topology.cc:431 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 337)
        (nil)))
(insn 702 701 703 83 (parallel [
            (set (reg/f:DI 202 [ D.45128 ])
                (plus:DI (reg/f:DI 201 [ D.45127 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:431 221 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 201 [ D.45127 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 703 702 704 83 (set (reg:DI 5 di)
        (reg/f:DI 202 [ D.45128 ])) Topology.cc:431 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 202 [ D.45128 ])
        (nil)))
(call_insn 704 703 705 83 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt4listIPN5brite4EdgeESaIS2_EE5beginEv") [flags 0x1]  <function_decl 0x1036f0200 begin>) [0 begin S1 A8])
            (const_int 0 [0]))) Topology.cc:431 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 705 704 706 83 (set (reg:DI 338)
        (reg:DI 0 ax)) Topology.cc:431 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 706 705 707 83 (set (reg:DI 339)
        (reg:DI 338)) Topology.cc:431 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 338)
        (nil)))
(insn 707 706 1045 83 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70])) [0 el+0 S8 A64])
        (reg:DI 339)) Topology.cc:431 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 339)
        (nil)))
(jump_insn 1045 707 1046 83 (set (pc)
        (label_ref 983)) Topology.cc:431 636 {jump}
     (nil)
 -> 983)
;;  succ:       111 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1046 1045 999)
;; basic block 84, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 83, next block 85, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       111
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 206 207 208 209 210 211 212 213 214 215 340 341 342
(code_label 999 1046 710 84 208 "" [1 uses])
(note 710 999 711 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 711 710 712 84 (parallel [
            (set (reg:DI 340)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:433 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 712 711 713 84 (set (reg:DI 5 di)
        (reg:DI 340)) Topology.cc:433 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 340)
        (nil)))
(call_insn 713 712 714 84 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:433 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 714 713 715 84 (set (reg/f:DI 206 [ D.45129 ])
        (reg:DI 0 ax)) Topology.cc:433 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 715 714 716 84 (set (reg/f:DI 207 [ D.45136 ])
        (mem/f:DI (reg/f:DI 206 [ D.45129 ]) [0 *_203+0 S8 A64])) Topology.cc:433 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 206 [ D.45129 ])
        (nil)))
(insn 716 715 717 84 (set (reg:DI 5 di)
        (reg/f:DI 207 [ D.45136 ])) Topology.cc:433 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 207 [ D.45136 ])
        (nil)))
(call_insn 717 716 718 84 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge6GetSrcEv") [flags 0x41]  <function_decl 0x103612c00 GetSrc>) [0 GetSrc S1 A8])
            (const_int 0 [0]))) Topology.cc:433 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 718 717 719 84 (set (reg/f:DI 208 [ D.45131 ])
        (reg:DI 0 ax)) Topology.cc:433 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 719 718 720 84 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 Src+0 S8 A64])
        (reg/f:DI 208 [ D.45131 ])) Topology.cc:433 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 208 [ D.45131 ])
        (nil)))
(insn 720 719 721 84 (parallel [
            (set (reg:DI 341)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:434 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 721 720 722 84 (set (reg:DI 5 di)
        (reg:DI 341)) Topology.cc:434 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 341)
        (nil)))
(call_insn 722 721 723 84 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:434 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 723 722 724 84 (set (reg/f:DI 209 [ D.45129 ])
        (reg:DI 0 ax)) Topology.cc:434 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 724 723 725 84 (set (reg/f:DI 210 [ D.45136 ])
        (mem/f:DI (reg/f:DI 209 [ D.45129 ]) [0 *_207+0 S8 A64])) Topology.cc:434 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 209 [ D.45129 ])
        (nil)))
(insn 725 724 726 84 (set (reg:DI 5 di)
        (reg/f:DI 210 [ D.45136 ])) Topology.cc:434 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 210 [ D.45136 ])
        (nil)))
(call_insn 726 725 727 84 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge6GetDstEv") [flags 0x41]  <function_decl 0x103612d00 GetDst>) [0 GetDst S1 A8])
            (const_int 0 [0]))) Topology.cc:434 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 727 726 728 84 (set (reg/f:DI 211 [ D.45131 ])
        (reg:DI 0 ax)) Topology.cc:434 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 728 727 729 84 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 Dst+0 S8 A64])
        (reg/f:DI 211 [ D.45131 ])) Topology.cc:434 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 211 [ D.45131 ])
        (nil)))
(insn 729 728 730 84 (parallel [
            (set (reg:DI 342)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:436 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 730 729 731 84 (set (reg:DI 5 di)
        (reg:DI 342)) Topology.cc:436 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 342)
        (nil)))
(call_insn 731 730 732 84 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:436 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 732 731 733 84 (set (reg/f:DI 212 [ D.45129 ])
        (reg:DI 0 ax)) Topology.cc:436 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 733 732 734 84 (set (reg/f:DI 213 [ D.45136 ])
        (mem/f:DI (reg/f:DI 212 [ D.45129 ]) [0 *_211+0 S8 A64])) Topology.cc:436 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 212 [ D.45129 ])
        (nil)))
(insn 734 733 735 84 (set (reg:DI 5 di)
        (reg/f:DI 213 [ D.45136 ])) Topology.cc:436 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 213 [ D.45136 ])
        (nil)))
(call_insn 735 734 736 84 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge7GetConfEv") [flags 0x41]  <function_decl 0x103612500 GetConf>) [0 GetConf S1 A8])
            (const_int 0 [0]))) Topology.cc:436 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 736 735 737 84 (set (reg/f:DI 214 [ D.45139 ])
        (reg:DI 0 ax)) Topology.cc:436 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 737 736 738 84 (set (reg:DI 5 di)
        (reg/f:DI 214 [ D.45139 ])) Topology.cc:436 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 214 [ D.45139 ])
        (nil)))
(call_insn 738 737 739 84 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite8EdgeConf11GetEdgeTypeEv") [flags 0x41]  <function_decl 0x10361c500 GetEdgeType>) [0 GetEdgeType S1 A8])
            (const_int 0 [0]))) Topology.cc:436 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 739 738 740 84 (set (reg:SI 215 [ D.45140 ])
        (reg:SI 0 ax)) Topology.cc:436 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 740 739 741 84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 215 [ D.45140 ])
            (const_int 1 [0x1]))) Topology.cc:437 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 215 [ D.45140 ])
        (nil)))
(jump_insn 741 740 742 84 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 756)
            (pc))) Topology.cc:437 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 756)
;;  succ:       85 (FALLTHRU)
;;              86
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 85, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 84, next block 86, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       84 (FALLTHRU)
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 216 217 218 219 343
(note 742 741 743 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 743 742 744 85 (parallel [
            (set (reg:DI 343)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:437 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 744 743 745 85 (set (reg:DI 5 di)
        (reg:DI 343)) Topology.cc:437 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 343)
        (nil)))
(call_insn 745 744 746 85 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:437 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 746 745 747 85 (set (reg/f:DI 216 [ D.45129 ])
        (reg:DI 0 ax)) Topology.cc:437 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 747 746 748 85 (set (reg/f:DI 217 [ D.45136 ])
        (mem/f:DI (reg/f:DI 216 [ D.45129 ]) [0 *_217+0 S8 A64])) Topology.cc:437 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 216 [ D.45129 ])
        (nil)))
(insn 748 747 749 85 (set (reg:DI 5 di)
        (reg/f:DI 217 [ D.45136 ])) Topology.cc:437 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 217 [ D.45136 ])
        (nil)))
(call_insn 749 748 750 85 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge7GetConfEv") [flags 0x41]  <function_decl 0x103612500 GetConf>) [0 GetConf S1 A8])
            (const_int 0 [0]))) Topology.cc:437 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 750 749 751 85 (set (reg/f:DI 218 [ D.45139 ])
        (reg:DI 0 ax)) Topology.cc:437 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 751 750 752 85 (set (reg:DI 5 di)
        (reg/f:DI 218 [ D.45139 ])) Topology.cc:437 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 218 [ D.45139 ])
        (nil)))
(call_insn 752 751 753 85 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite10ASEdgeConf13GetASEdgeTypeEv") [flags 0x41]  <function_decl 0x10361cd00 GetASEdgeType>) [0 GetASEdgeType S1 A8])
            (const_int 0 [0]))) Topology.cc:437 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 753 752 754 85 (set (reg:SI 219 [ D.45144 ])
        (reg:SI 0 ax)) Topology.cc:437 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 754 753 755 85 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 219 [ D.45144 ])
            (const_int 1 [0x1]))) Topology.cc:436 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 219 [ D.45144 ])
        (nil)))
(jump_insn 755 754 756 85 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 785)
            (pc))) Topology.cc:436 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 785)
;;  succ:       88
;;              86 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 86, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 85, next block 87, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       84
;;              85 (FALLTHRU)
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 220 221 222 223 344
(code_label 756 755 757 86 190 "" [1 uses])
(note 757 756 758 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 758 757 759 86 (parallel [
            (set (reg:DI 344)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:438 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 759 758 760 86 (set (reg:DI 5 di)
        (reg:DI 344)) Topology.cc:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 344)
        (nil)))
(call_insn 760 759 761 86 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:438 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 761 760 762 86 (set (reg/f:DI 220 [ D.45129 ])
        (reg:DI 0 ax)) Topology.cc:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 762 761 763 86 (set (reg/f:DI 221 [ D.45136 ])
        (mem/f:DI (reg/f:DI 220 [ D.45129 ]) [0 *_223+0 S8 A64])) Topology.cc:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 220 [ D.45129 ])
        (nil)))
(insn 763 762 764 86 (set (reg:DI 5 di)
        (reg/f:DI 221 [ D.45136 ])) Topology.cc:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 221 [ D.45136 ])
        (nil)))
(call_insn 764 763 765 86 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge7GetConfEv") [flags 0x41]  <function_decl 0x103612500 GetConf>) [0 GetConf S1 A8])
            (const_int 0 [0]))) Topology.cc:438 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 765 764 766 86 (set (reg/f:DI 222 [ D.45139 ])
        (reg:DI 0 ax)) Topology.cc:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 766 765 767 86 (set (reg:DI 5 di)
        (reg/f:DI 222 [ D.45139 ])) Topology.cc:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 222 [ D.45139 ])
        (nil)))
(call_insn 767 766 768 86 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite8EdgeConf11GetEdgeTypeEv") [flags 0x41]  <function_decl 0x10361c500 GetEdgeType>) [0 GetEdgeType S1 A8])
            (const_int 0 [0]))) Topology.cc:438 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 768 767 769 86 (set (reg:SI 223 [ D.45140 ])
        (reg:SI 0 ax)) Topology.cc:438 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 769 768 770 86 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 223 [ D.45140 ])
            (const_int 0 [0]))) Topology.cc:437 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 223 [ D.45140 ])
        (nil)))
(jump_insn 770 769 771 86 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 790)
            (pc))) Topology.cc:437 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 790)
;;  succ:       87 (FALLTHRU)
;;              89
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 87, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 86, next block 88, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       86 (FALLTHRU)
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 224 225 226 227 345
(note 771 770 772 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 772 771 773 87 (parallel [
            (set (reg:DI 345)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:439 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 773 772 774 87 (set (reg:DI 5 di)
        (reg:DI 345)) Topology.cc:439 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 345)
        (nil)))
(call_insn 774 773 775 87 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:439 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 775 774 776 87 (set (reg/f:DI 224 [ D.45129 ])
        (reg:DI 0 ax)) Topology.cc:439 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 776 775 777 87 (set (reg/f:DI 225 [ D.45136 ])
        (mem/f:DI (reg/f:DI 224 [ D.45129 ]) [0 *_229+0 S8 A64])) Topology.cc:439 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 224 [ D.45129 ])
        (nil)))
(insn 777 776 778 87 (set (reg:DI 5 di)
        (reg/f:DI 225 [ D.45136 ])) Topology.cc:439 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 225 [ D.45136 ])
        (nil)))
(call_insn 778 777 779 87 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge7GetConfEv") [flags 0x41]  <function_decl 0x103612500 GetConf>) [0 GetConf S1 A8])
            (const_int 0 [0]))) Topology.cc:439 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 779 778 780 87 (set (reg/f:DI 226 [ D.45139 ])
        (reg:DI 0 ax)) Topology.cc:439 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 780 779 781 87 (set (reg:DI 5 di)
        (reg/f:DI 226 [ D.45139 ])) Topology.cc:439 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 226 [ D.45139 ])
        (nil)))
(call_insn 781 780 782 87 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite14RouterEdgeConf17GetRouterEdgeTypeEv") [flags 0x41]  <function_decl 0x10362b700 GetRouterEdgeType>) [0 GetRouterEdgeType S1 A8])
            (const_int 0 [0]))) Topology.cc:439 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 782 781 783 87 (set (reg:SI 227 [ D.45145 ])
        (reg:SI 0 ax)) Topology.cc:439 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 783 782 784 87 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 227 [ D.45145 ])
            (const_int 2 [0x2]))) Topology.cc:438 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 227 [ D.45145 ])
        (nil)))
(jump_insn 784 783 785 87 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 790)
            (pc))) Topology.cc:438 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 790)
;;  succ:       88 (FALLTHRU)
;;              89
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 88, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 87, next block 89, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       85
;;              87 (FALLTHRU)
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 785 784 786 88 191 "" [1 uses])
(note 786 785 787 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 787 786 1047 88 (set (reg:QI 87 [ D.45126 ])
        (const_int 1 [0x1])) Topology.cc:437 93 {*movqi_internal}
     (nil))
(jump_insn 1047 787 1048 88 (set (pc)
        (label_ref 793)) Topology.cc:437 636 {jump}
     (nil)
 -> 793)
;;  succ:       90 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 1048 1047 790)
;; basic block 89, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 88, next block 90, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       86
;;              87
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 790 1048 791 89 192 "" [2 uses])
(note 791 790 792 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 792 791 793 89 (set (reg:QI 87 [ D.45126 ])
        (const_int 0 [0])) Topology.cc:437 93 {*movqi_internal}
     (nil))
;;  succ:       90 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 90, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 89, next block 91, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       89 (FALLTHRU)
;;              88 [100.0%] 
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 17 [flags]
(code_label 793 792 794 90 193 "" [1 uses])
(note 794 793 795 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 795 794 796 90 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 87 [ D.45126 ])
            (const_int 0 [0]))) Topology.cc:436 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 87 [ D.45126 ])
        (nil)))
(jump_insn 796 795 797 90 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 976)
            (pc))) Topology.cc:436 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 976)
;;  succ:       91 (FALLTHRU)
;;              110
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 91, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 90, next block 92, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       90 (FALLTHRU)
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 228 229 230 346
(note 797 796 798 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 798 797 799 91 (set (reg:DI 346)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 Src+0 S8 A64])) Topology.cc:442 89 {*movdi_internal}
     (nil))
(insn 799 798 800 91 (set (reg:DI 5 di)
        (reg:DI 346)) Topology.cc:442 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 346)
        (nil)))
(call_insn 800 799 801 91 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:442 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 801 800 802 91 (set (reg/f:DI 228 [ D.45134 ])
        (reg:DI 0 ax)) Topology.cc:442 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 802 801 803 91 (set (reg:DI 5 di)
        (reg/f:DI 228 [ D.45134 ])) Topology.cc:442 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 228 [ D.45134 ])
        (nil)))
(call_insn 803 802 804 91 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite8NodeConf11GetNodeTypeEv") [flags 0x41]  <function_decl 0x1035f8a00 GetNodeType>) [0 GetNodeType S1 A8])
            (const_int 0 [0]))) Topology.cc:442 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 804 803 805 91 (set (reg:SI 229 [ D.45135 ])
        (reg:SI 0 ax)) Topology.cc:442 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 805 804 806 91 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 229 [ D.45135 ])
            (const_int 2 [0x2]))) Topology.cc:442 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 229 [ D.45135 ])
        (nil)))
(insn 806 805 807 91 (set (reg:QI 230 [ D.45126 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) Topology.cc:442 592 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 807 806 808 91 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 230 [ D.45126 ])
            (const_int 0 [0]))) Topology.cc:442 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 230 [ D.45126 ])
        (nil)))
(jump_insn 808 807 809 91 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 893)
            (pc))) Topology.cc:442 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 893)
;;  succ:       92 (FALLTHRU)
;;              101
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 92, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 91, next block 93, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       91 (FALLTHRU)
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 231 232 347
(note 809 808 810 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 810 809 811 92 (set (reg:DI 347)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 Src+0 S8 A64])) Topology.cc:444 89 {*movdi_internal}
     (nil))
(insn 811 810 812 92 (set (reg:DI 5 di)
        (reg:DI 347)) Topology.cc:444 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 347)
        (nil)))
(call_insn 812 811 813 92 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:444 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 813 812 814 92 (set (reg/f:DI 231 [ D.45134 ])
        (reg:DI 0 ax)) Topology.cc:444 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 814 813 815 92 (set (reg:DI 5 di)
        (reg/f:DI 231 [ D.45134 ])) Topology.cc:444 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 231 [ D.45134 ])
        (nil)))
(call_insn 815 814 816 92 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite14RouterNodeConf13GetRouterTypeEv") [flags 0x41]  <function_decl 0x103609100 GetRouterType>) [0 GetRouterType S1 A8])
            (const_int 0 [0]))) Topology.cc:444 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 816 815 817 92 (set (reg:SI 232 [ D.45137 ])
        (reg:SI 0 ax)) Topology.cc:444 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 817 816 818 92 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 232 [ D.45137 ])
            (const_int 3 [0x3]))) Topology.cc:445 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 232 [ D.45137 ])
        (nil)))
(jump_insn 818 817 819 92 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 829)
            (pc))) Topology.cc:445 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 829)
;;  succ:       93 (FALLTHRU)
;;              94
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 93, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 92, next block 94, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       92 (FALLTHRU)
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 233 234 348
(note 819 818 820 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 820 819 821 93 (set (reg:DI 348)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 Dst+0 S8 A64])) Topology.cc:445 89 {*movdi_internal}
     (nil))
(insn 821 820 822 93 (set (reg:DI 5 di)
        (reg:DI 348)) Topology.cc:445 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 348)
        (nil)))
(call_insn 822 821 823 93 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:445 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 823 822 824 93 (set (reg/f:DI 233 [ D.45134 ])
        (reg:DI 0 ax)) Topology.cc:445 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 824 823 825 93 (set (reg:DI 5 di)
        (reg/f:DI 233 [ D.45134 ])) Topology.cc:445 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 233 [ D.45134 ])
        (nil)))
(call_insn 825 824 826 93 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite14RouterNodeConf13GetRouterTypeEv") [flags 0x41]  <function_decl 0x103609100 GetRouterType>) [0 GetRouterType S1 A8])
            (const_int 0 [0]))) Topology.cc:445 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 826 825 827 93 (set (reg:SI 234 [ D.45137 ])
        (reg:SI 0 ax)) Topology.cc:445 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 827 826 828 93 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 234 [ D.45137 ])
            (const_int 2 [0x2]))) Topology.cc:444 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 234 [ D.45137 ])
        (nil)))
(jump_insn 828 827 829 93 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 850)
            (pc))) Topology.cc:444 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 850)
;;  succ:       96
;;              94 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 94, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 93, next block 95, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       92
;;              93 (FALLTHRU)
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 235 236 349
(code_label 829 828 830 94 196 "" [1 uses])
(note 830 829 831 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 831 830 832 94 (set (reg:DI 349)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 Src+0 S8 A64])) Topology.cc:446 89 {*movdi_internal}
     (nil))
(insn 832 831 833 94 (set (reg:DI 5 di)
        (reg:DI 349)) Topology.cc:446 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 349)
        (nil)))
(call_insn 833 832 834 94 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:446 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 834 833 835 94 (set (reg/f:DI 235 [ D.45134 ])
        (reg:DI 0 ax)) Topology.cc:446 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 835 834 836 94 (set (reg:DI 5 di)
        (reg/f:DI 235 [ D.45134 ])) Topology.cc:446 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 235 [ D.45134 ])
        (nil)))
(call_insn 836 835 837 94 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite14RouterNodeConf13GetRouterTypeEv") [flags 0x41]  <function_decl 0x103609100 GetRouterType>) [0 GetRouterType S1 A8])
            (const_int 0 [0]))) Topology.cc:446 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 837 836 838 94 (set (reg:SI 236 [ D.45137 ])
        (reg:SI 0 ax)) Topology.cc:446 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 838 837 839 94 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 236 [ D.45137 ])
            (const_int 2 [0x2]))) Topology.cc:445 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 236 [ D.45137 ])
        (nil)))
(jump_insn 839 838 840 94 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 855)
            (pc))) Topology.cc:445 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 855)
;;  succ:       95 (FALLTHRU)
;;              97
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 95, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 94, next block 96, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       94 (FALLTHRU)
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 237 238 350
(note 840 839 841 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 841 840 842 95 (set (reg:DI 350)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 Dst+0 S8 A64])) Topology.cc:447 89 {*movdi_internal}
     (nil))
(insn 842 841 843 95 (set (reg:DI 5 di)
        (reg:DI 350)) Topology.cc:447 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 350)
        (nil)))
(call_insn 843 842 844 95 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:447 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 844 843 845 95 (set (reg/f:DI 237 [ D.45134 ])
        (reg:DI 0 ax)) Topology.cc:447 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 845 844 846 95 (set (reg:DI 5 di)
        (reg/f:DI 237 [ D.45134 ])) Topology.cc:447 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 237 [ D.45134 ])
        (nil)))
(call_insn 846 845 847 95 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite14RouterNodeConf13GetRouterTypeEv") [flags 0x41]  <function_decl 0x103609100 GetRouterType>) [0 GetRouterType S1 A8])
            (const_int 0 [0]))) Topology.cc:447 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 847 846 848 95 (set (reg:SI 238 [ D.45137 ])
        (reg:SI 0 ax)) Topology.cc:447 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 848 847 849 95 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 238 [ D.45137 ])
            (const_int 3 [0x3]))) Topology.cc:446 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 238 [ D.45137 ])
        (nil)))
(jump_insn 849 848 850 95 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 855)
            (pc))) Topology.cc:446 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 855)
;;  succ:       96 (FALLTHRU)
;;              97
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 96, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 95, next block 97, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       93
;;              95 (FALLTHRU)
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 88
(code_label 850 849 851 96 197 "" [1 uses])
(note 851 850 852 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 852 851 1049 96 (set (reg:QI 88 [ D.45126 ])
        (const_int 1 [0x1])) Topology.cc:445 93 {*movqi_internal}
     (nil))
(jump_insn 1049 852 1050 96 (set (pc)
        (label_ref 858)) Topology.cc:445 636 {jump}
     (nil)
 -> 858)
;;  succ:       98 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88

(barrier 1050 1049 855)
;; basic block 97, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 96, next block 98, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       94
;;              95
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 88
(code_label 855 1050 856 97 198 "" [2 uses])
(note 856 855 857 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 857 856 858 97 (set (reg:QI 88 [ D.45126 ])
        (const_int 0 [0])) Topology.cc:445 93 {*movqi_internal}
     (nil))
;;  succ:       98 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88

;; basic block 98, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 97, next block 99, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       97 (FALLTHRU)
;;              96 [100.0%] 
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 17 [flags]
(code_label 858 857 859 98 199 "" [1 uses])
(note 859 858 860 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 860 859 861 98 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 88 [ D.45126 ])
            (const_int 0 [0]))) Topology.cc:444 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 88 [ D.45126 ])
        (nil)))
(jump_insn 861 860 862 98 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 876)
            (pc))) Topology.cc:444 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 876)
;;  succ:       99 (FALLTHRU)
;;              100
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 99, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 98, next block 100, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       98 (FALLTHRU)
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 239 240 241 351
(note 862 861 863 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 863 862 864 99 (parallel [
            (set (reg:DI 351)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:449 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 864 863 865 99 (set (reg:DI 5 di)
        (reg:DI 351)) Topology.cc:449 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 351)
        (nil)))
(call_insn 865 864 866 99 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:449 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 866 865 867 99 (set (reg/f:DI 239 [ D.45129 ])
        (reg:DI 0 ax)) Topology.cc:449 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 867 866 868 99 (set (reg/f:DI 240 [ D.45136 ])
        (mem/f:DI (reg/f:DI 239 [ D.45129 ]) [0 *_262+0 S8 A64])) Topology.cc:449 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 239 [ D.45129 ])
        (nil)))
(insn 868 867 869 99 (set (reg:DI 5 di)
        (reg/f:DI 240 [ D.45136 ])) Topology.cc:449 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 240 [ D.45136 ])
        (nil)))
(call_insn 869 868 870 99 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge7GetConfEv") [flags 0x41]  <function_decl 0x103612500 GetConf>) [0 GetConf S1 A8])
            (const_int 0 [0]))) Topology.cc:449 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 870 869 871 99 (set (reg/f:DI 241 [ D.45139 ])
        (reg:DI 0 ax)) Topology.cc:449 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 871 870 872 99 (set (reg:SI 4 si)
        (const_int 3 [0x3])) Topology.cc:449 90 {*movsi_internal}
     (nil))
(insn 872 871 873 99 (set (reg:DI 5 di)
        (reg/f:DI 241 [ D.45139 ])) Topology.cc:449 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 241 [ D.45139 ])
        (nil)))
(call_insn 873 872 1051 99 (call (mem:QI (symbol_ref/i:DI ("_ZN5brite14RouterEdgeConf17SetRouterEdgeTypeENS0_14RouterEdgeTypeE") [flags 0x41]  <function_decl 0x10362ba00 SetRouterEdgeType>) [0 SetRouterEdgeType S1 A8])
        (const_int 0 [0])) Topology.cc:449 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(jump_insn 1051 873 1052 99 (set (pc)
        (label_ref 976)) 636 {jump}
     (nil)
 -> 976)
;;  succ:       110 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1052 1051 876)
;; basic block 100, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 99, next block 101, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       98
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 242 243 244 352
(code_label 876 1052 877 100 200 "" [1 uses])
(note 877 876 878 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 878 877 879 100 (parallel [
            (set (reg:DI 352)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:453 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 879 878 880 100 (set (reg:DI 5 di)
        (reg:DI 352)) Topology.cc:453 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 352)
        (nil)))
(call_insn 880 879 881 100 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:453 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 881 880 882 100 (set (reg/f:DI 242 [ D.45129 ])
        (reg:DI 0 ax)) Topology.cc:453 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 882 881 883 100 (set (reg/f:DI 243 [ D.45136 ])
        (mem/f:DI (reg/f:DI 242 [ D.45129 ]) [0 *_266+0 S8 A64])) Topology.cc:453 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 242 [ D.45129 ])
        (nil)))
(insn 883 882 884 100 (set (reg:DI 5 di)
        (reg/f:DI 243 [ D.45136 ])) Topology.cc:453 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 243 [ D.45136 ])
        (nil)))
(call_insn 884 883 885 100 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge7GetConfEv") [flags 0x41]  <function_decl 0x103612500 GetConf>) [0 GetConf S1 A8])
            (const_int 0 [0]))) Topology.cc:453 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 885 884 886 100 (set (reg/f:DI 244 [ D.45139 ])
        (reg:DI 0 ax)) Topology.cc:453 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 886 885 887 100 (set (reg:SI 4 si)
        (const_int 4 [0x4])) Topology.cc:453 90 {*movsi_internal}
     (nil))
(insn 887 886 888 100 (set (reg:DI 5 di)
        (reg/f:DI 244 [ D.45139 ])) Topology.cc:453 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 244 [ D.45139 ])
        (nil)))
(call_insn 888 887 1053 100 (call (mem:QI (symbol_ref/i:DI ("_ZN5brite14RouterEdgeConf17SetRouterEdgeTypeENS0_14RouterEdgeTypeE") [flags 0x41]  <function_decl 0x10362ba00 SetRouterEdgeType>) [0 SetRouterEdgeType S1 A8])
        (const_int 0 [0])) Topology.cc:453 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(jump_insn 1053 888 1054 100 (set (pc)
        (label_ref 976)) 636 {jump}
     (nil)
 -> 976)
;;  succ:       110 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1054 1053 893)
;; basic block 101, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 100, next block 102, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       91
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 245 246 353
(code_label 893 1054 894 101 195 "" [1 uses])
(note 894 893 895 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 895 894 896 101 (set (reg:DI 353)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 Src+0 S8 A64])) Topology.cc:459 89 {*movdi_internal}
     (nil))
(insn 896 895 897 101 (set (reg:DI 5 di)
        (reg:DI 353)) Topology.cc:459 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 353)
        (nil)))
(call_insn 897 896 898 101 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:459 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 898 897 899 101 (set (reg/f:DI 245 [ D.45134 ])
        (reg:DI 0 ax)) Topology.cc:459 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 899 898 900 101 (set (reg:DI 5 di)
        (reg/f:DI 245 [ D.45134 ])) Topology.cc:459 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 245 [ D.45134 ])
        (nil)))
(call_insn 900 899 901 101 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite10ASNodeConf9GetASTypeEv") [flags 0x41]  <function_decl 0x103609b00 GetASType>) [0 GetASType S1 A8])
            (const_int 0 [0]))) Topology.cc:459 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 901 900 902 101 (set (reg:SI 246 [ D.45138 ])
        (reg:SI 0 ax)) Topology.cc:459 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 902 901 903 101 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 246 [ D.45138 ])
            (const_int 2 [0x2]))) Topology.cc:460 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 246 [ D.45138 ])
        (nil)))
(jump_insn 903 902 904 101 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 914)
            (pc))) Topology.cc:460 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 914)
;;  succ:       102 (FALLTHRU)
;;              103
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 102, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 101, next block 103, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       101 (FALLTHRU)
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 247 248 354
(note 904 903 905 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 905 904 906 102 (set (reg:DI 354)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 Dst+0 S8 A64])) Topology.cc:460 89 {*movdi_internal}
     (nil))
(insn 906 905 907 102 (set (reg:DI 5 di)
        (reg:DI 354)) Topology.cc:460 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 354)
        (nil)))
(call_insn 907 906 908 102 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:460 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 908 907 909 102 (set (reg/f:DI 247 [ D.45134 ])
        (reg:DI 0 ax)) Topology.cc:460 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 909 908 910 102 (set (reg:DI 5 di)
        (reg/f:DI 247 [ D.45134 ])) Topology.cc:460 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 247 [ D.45134 ])
        (nil)))
(call_insn 910 909 911 102 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite10ASNodeConf9GetASTypeEv") [flags 0x41]  <function_decl 0x103609b00 GetASType>) [0 GetASType S1 A8])
            (const_int 0 [0]))) Topology.cc:460 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 911 910 912 102 (set (reg:SI 248 [ D.45138 ])
        (reg:SI 0 ax)) Topology.cc:460 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 912 911 913 102 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 248 [ D.45138 ])
            (const_int 3 [0x3]))) Topology.cc:459 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 248 [ D.45138 ])
        (nil)))
(jump_insn 913 912 914 102 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 935)
            (pc))) Topology.cc:459 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 935)
;;  succ:       105
;;              103 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 103, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 102, next block 104, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       101
;;              102 (FALLTHRU)
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 249 250 355
(code_label 914 913 915 103 203 "" [1 uses])
(note 915 914 916 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 916 915 917 103 (set (reg:DI 355)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 Src+0 S8 A64])) Topology.cc:461 89 {*movdi_internal}
     (nil))
(insn 917 916 918 103 (set (reg:DI 5 di)
        (reg:DI 355)) Topology.cc:461 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 355)
        (nil)))
(call_insn 918 917 919 103 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:461 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 919 918 920 103 (set (reg/f:DI 249 [ D.45134 ])
        (reg:DI 0 ax)) Topology.cc:461 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 920 919 921 103 (set (reg:DI 5 di)
        (reg/f:DI 249 [ D.45134 ])) Topology.cc:461 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 249 [ D.45134 ])
        (nil)))
(call_insn 921 920 922 103 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite10ASNodeConf9GetASTypeEv") [flags 0x41]  <function_decl 0x103609b00 GetASType>) [0 GetASType S1 A8])
            (const_int 0 [0]))) Topology.cc:461 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 922 921 923 103 (set (reg:SI 250 [ D.45138 ])
        (reg:SI 0 ax)) Topology.cc:461 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 923 922 924 103 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 250 [ D.45138 ])
            (const_int 3 [0x3]))) Topology.cc:460 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 250 [ D.45138 ])
        (nil)))
(jump_insn 924 923 925 103 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 940)
            (pc))) Topology.cc:460 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 940)
;;  succ:       104 (FALLTHRU)
;;              106
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 104, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 103, next block 105, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       103 (FALLTHRU)
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 251 252 356
(note 925 924 926 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 926 925 927 104 (set (reg:DI 356)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 Dst+0 S8 A64])) Topology.cc:462 89 {*movdi_internal}
     (nil))
(insn 927 926 928 104 (set (reg:DI 5 di)
        (reg:DI 356)) Topology.cc:462 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 356)
        (nil)))
(call_insn 928 927 929 104 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite9BriteNode11GetNodeInfoEv") [flags 0x41]  <function_decl 0x1035e6800 GetNodeInfo>) [0 GetNodeInfo S1 A8])
            (const_int 0 [0]))) Topology.cc:462 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 929 928 930 104 (set (reg/f:DI 251 [ D.45134 ])
        (reg:DI 0 ax)) Topology.cc:462 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 930 929 931 104 (set (reg:DI 5 di)
        (reg/f:DI 251 [ D.45134 ])) Topology.cc:462 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 251 [ D.45134 ])
        (nil)))
(call_insn 931 930 932 104 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite10ASNodeConf9GetASTypeEv") [flags 0x41]  <function_decl 0x103609b00 GetASType>) [0 GetASType S1 A8])
            (const_int 0 [0]))) Topology.cc:462 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 932 931 933 104 (set (reg:SI 252 [ D.45138 ])
        (reg:SI 0 ax)) Topology.cc:462 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 933 932 934 104 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 252 [ D.45138 ])
            (const_int 2 [0x2]))) Topology.cc:461 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 252 [ D.45138 ])
        (nil)))
(jump_insn 934 933 935 104 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 940)
            (pc))) Topology.cc:461 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 940)
;;  succ:       105 (FALLTHRU)
;;              106
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 105, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 104, next block 106, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       102
;;              104 (FALLTHRU)
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 89
(code_label 935 934 936 105 204 "" [1 uses])
(note 936 935 937 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 937 936 1055 105 (set (reg:QI 89 [ D.45126 ])
        (const_int 1 [0x1])) Topology.cc:460 93 {*movqi_internal}
     (nil))
(jump_insn 1055 937 1056 105 (set (pc)
        (label_ref 943)) Topology.cc:460 636 {jump}
     (nil)
 -> 943)
;;  succ:       107 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89

(barrier 1056 1055 940)
;; basic block 106, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 105, next block 107, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       103
;;              104
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 89
(code_label 940 1056 941 106 205 "" [2 uses])
(note 941 940 942 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 942 941 943 106 (set (reg:QI 89 [ D.45126 ])
        (const_int 0 [0])) Topology.cc:460 93 {*movqi_internal}
     (nil))
;;  succ:       107 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89

;; basic block 107, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 106, next block 108, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       106 (FALLTHRU)
;;              105 [100.0%] 
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 17 [flags]
(code_label 943 942 944 107 206 "" [1 uses])
(note 944 943 945 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 945 944 946 107 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 89 [ D.45126 ])
            (const_int 0 [0]))) Topology.cc:459 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 89 [ D.45126 ])
        (nil)))
(jump_insn 946 945 947 107 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 961)
            (pc))) Topology.cc:459 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 961)
;;  succ:       108 (FALLTHRU)
;;              109
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 108, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 107, next block 109, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       107 (FALLTHRU)
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 253 254 255 357
(note 947 946 948 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 948 947 949 108 (parallel [
            (set (reg:DI 357)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:464 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 949 948 950 108 (set (reg:DI 5 di)
        (reg:DI 357)) Topology.cc:464 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 357)
        (nil)))
(call_insn 950 949 951 108 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:464 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 951 950 952 108 (set (reg/f:DI 253 [ D.45129 ])
        (reg:DI 0 ax)) Topology.cc:464 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 952 951 953 108 (set (reg/f:DI 254 [ D.45136 ])
        (mem/f:DI (reg/f:DI 253 [ D.45129 ]) [0 *_289+0 S8 A64])) Topology.cc:464 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 253 [ D.45129 ])
        (nil)))
(insn 953 952 954 108 (set (reg:DI 5 di)
        (reg/f:DI 254 [ D.45136 ])) Topology.cc:464 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 254 [ D.45136 ])
        (nil)))
(call_insn 954 953 955 108 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge7GetConfEv") [flags 0x41]  <function_decl 0x103612500 GetConf>) [0 GetConf S1 A8])
            (const_int 0 [0]))) Topology.cc:464 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 955 954 956 108 (set (reg/f:DI 255 [ D.45139 ])
        (reg:DI 0 ax)) Topology.cc:464 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 956 955 957 108 (set (reg:SI 4 si)
        (const_int 2 [0x2])) Topology.cc:464 90 {*movsi_internal}
     (nil))
(insn 957 956 958 108 (set (reg:DI 5 di)
        (reg/f:DI 255 [ D.45139 ])) Topology.cc:464 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 255 [ D.45139 ])
        (nil)))
(call_insn 958 957 1057 108 (call (mem:QI (symbol_ref/i:DI ("_ZN5brite10ASEdgeConf13SetASEdgeTypeENS0_10ASEdgeTypeE") [flags 0x41]  <function_decl 0x10361ce00 SetASEdgeType>) [0 SetASEdgeType S1 A8])
        (const_int 0 [0])) Topology.cc:464 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(jump_insn 1057 958 1058 108 (set (pc)
        (label_ref 976)) 636 {jump}
     (nil)
 -> 976)
;;  succ:       110 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1058 1057 961)
;; basic block 109, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 108, next block 110, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       107
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 256 257 258 358
(code_label 961 1058 962 109 207 "" [1 uses])
(note 962 961 963 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 963 962 964 109 (parallel [
            (set (reg:DI 358)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:468 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 964 963 965 109 (set (reg:DI 5 di)
        (reg:DI 358)) Topology.cc:468 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 358)
        (nil)))
(call_insn 965 964 966 109 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv") [flags 0x1]  <function_decl 0x103d5d000 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) Topology.cc:468 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 966 965 967 109 (set (reg/f:DI 256 [ D.45129 ])
        (reg:DI 0 ax)) Topology.cc:468 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 967 966 968 109 (set (reg/f:DI 257 [ D.45136 ])
        (mem/f:DI (reg/f:DI 256 [ D.45129 ]) [0 *_293+0 S8 A64])) Topology.cc:468 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 256 [ D.45129 ])
        (nil)))
(insn 968 967 969 109 (set (reg:DI 5 di)
        (reg/f:DI 257 [ D.45136 ])) Topology.cc:468 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 257 [ D.45136 ])
        (nil)))
(call_insn 969 968 970 109 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5brite4Edge7GetConfEv") [flags 0x41]  <function_decl 0x103612500 GetConf>) [0 GetConf S1 A8])
            (const_int 0 [0]))) Topology.cc:468 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 970 969 971 109 (set (reg/f:DI 258 [ D.45139 ])
        (reg:DI 0 ax)) Topology.cc:468 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 971 970 972 109 (set (reg:SI 4 si)
        (const_int 3 [0x3])) Topology.cc:468 90 {*movsi_internal}
     (nil))
(insn 972 971 973 109 (set (reg:DI 5 di)
        (reg/f:DI 258 [ D.45139 ])) Topology.cc:468 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 258 [ D.45139 ])
        (nil)))
(call_insn 973 972 976 109 (call (mem:QI (symbol_ref/i:DI ("_ZN5brite10ASEdgeConf13SetASEdgeTypeENS0_10ASEdgeTypeE") [flags 0x41]  <function_decl 0x10361ce00 SetASEdgeType>) [0 SetASEdgeType S1 A8])
        (const_int 0 [0])) Topology.cc:468 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       110 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 110, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 109, next block 111, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       90
;;              109 (FALLTHRU)
;;              100 [100.0%] 
;;              99 [100.0%] 
;;              108 [100.0%] 
;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 359
(code_label 976 973 977 110 194 "" [4 uses])
(note 977 976 978 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 978 977 979 110 (parallel [
            (set (reg:DI 359)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:431 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 979 978 980 110 (set (reg:SI 4 si)
        (const_int 0 [0])) Topology.cc:431 90 {*movsi_internal}
     (nil))
(insn 980 979 981 110 (set (reg:DI 5 di)
        (reg:DI 359)) Topology.cc:431 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 359)
        (nil)))
(call_insn 981 980 983 110 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt14_List_iteratorIPN5brite4EdgeEEppEi") [flags 0x1]  <function_decl 0x103d5d300 operator++>) [0 operator++ S1 A8])
            (const_int 0 [0]))) Topology.cc:431 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       111 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 111, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 110, next block 112, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       110 (FALLTHRU,DFS_BACK)
;;              83 [100.0%] 
;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 203 204 205 360 361 362 363 364
(code_label 983 981 984 111 189 "" [1 uses])
(note 984 983 985 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 985 984 986 111 (set (reg/f:DI 360)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -152 [0xffffffffffffff68])) [0 this+0 S8 A64])) Topology.cc:431 89 {*movdi_internal}
     (nil))
(insn 986 985 987 111 (set (reg/f:DI 203 [ D.45127 ])
        (mem/f/j:DI (reg/f:DI 360) [0 this_12(D)->g+0 S8 A64])) Topology.cc:431 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 360)
        (nil)))
(insn 987 986 988 111 (parallel [
            (set (reg/f:DI 204 [ D.45128 ])
                (plus:DI (reg/f:DI 203 [ D.45127 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:431 221 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 203 [ D.45127 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 988 987 989 111 (set (reg:DI 5 di)
        (reg/f:DI 204 [ D.45128 ])) Topology.cc:431 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 204 [ D.45128 ])
        (nil)))
(call_insn 989 988 990 111 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt4listIPN5brite4EdgeESaIS2_EE3endEv") [flags 0x1]  <function_decl 0x1036f0400 end>) [0 end S1 A8])
            (const_int 0 [0]))) Topology.cc:431 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 990 989 991 111 (set (reg:DI 361)
        (reg:DI 0 ax)) Topology.cc:431 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 991 990 992 111 (set (reg:DI 362)
        (reg:DI 361)) Topology.cc:431 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 361)
        (nil)))
(insn 992 991 993 111 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 D.41877+0 S8 A64])
        (reg:DI 362)) Topology.cc:431 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 362)
        (nil)))
(insn 993 992 994 111 (parallel [
            (set (reg:DI 363)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:431 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 994 993 995 111 (parallel [
            (set (reg:DI 364)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) Topology.cc:431 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 995 994 996 111 (set (reg:DI 4 si)
        (reg:DI 363)) Topology.cc:431 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 363)
        (nil)))
(insn 996 995 997 111 (set (reg:DI 5 di)
        (reg:DI 364)) Topology.cc:431 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 364)
        (nil)))
(call_insn 997 996 998 111 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt14_List_iteratorIPN5brite4EdgeEEneERKS3_") [flags 0x1]  <function_decl 0x103d5d700 operator!=>) [0 operator!= S1 A8])
            (const_int 0 [0]))) Topology.cc:431 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 998 997 1000 111 (set (reg:QI 205 [ D.45126 ])
        (reg:QI 0 ax)) Topology.cc:431 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 1000 998 1001 111 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 205 [ D.45126 ])
            (const_int 0 [0]))) Topology.cc:431 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 205 [ D.45126 ])
        (nil)))
(jump_insn 1001 1000 1002 111 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 999)
            (pc))) Topology.cc:431 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 999)
;;  succ:       84
;;              112 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 112, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 111, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       111 (FALLTHRU)
;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1002 1001 0 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = std::list<brite::Edge*>; _Alloc = std::allocator<std::list<brite::Edge*> >; std::vector<_Tp, _Alloc>::reference = std::list<brite::Edge*>&; std::vector<_Tp, _Alloc>::size_type = long unsigned int] (_ZNSt6vectorISt4listIPN5brite4EdgeESaIS3_EESaIS5_EEixEm, funcdef_no=1976, decl_uid=32434, symbol_order=575)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r86,l0) best AREG, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a2(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a3(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a4(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a5(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8

   Insn 19(l0): point = 0
   Insn 18(l0): point = 2
   Insn 14(l0): point = 4
   Insn 11(l0): point = 6
   Insn 10(l0): point = 8
   Insn 9(l0): point = 10
   Insn 8(l0): point = 12
   Insn 7(l0): point = 14
   Insn 3(l0): point = 16
   Insn 2(l0): point = 18
 a0(r86): [3..4]
 a1(r85): [5..6]
 a2(r84): [7..8]
 a3(r83): [7..12]
 a4(r88): [9..10]
 a5(r87): [13..14]
Compressing live ranges: from 21 to 10 - 47%
Ranges after the compression:
 a0(r86): [0..1]
 a1(r85): [2..3]
 a2(r84): [4..5]
 a3(r83): [4..7]
 a4(r88): [6..7]
 a5(r87): [8..9]
  regions=1, blocks=3, points=10
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    3:r83  l0     0    2:r84  l0     1    1:r85  l0     0    0:r86  l0     0
    5:r87  l0     0    4:r88  l0     1
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = std::list<brite::Edge*>; _Alloc = std::allocator<std::list<brite::Edge*> >; std::vector<_Tp, _Alloc>::reference = std::list<brite::Edge*>&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 17[flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={2d} r20={1d,6u,1e} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 50{28d,21u,1e} in 10{10 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 17 [flags] 83 84 85 86 87 88
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:779 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:779 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:780 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 83 [ D.45149 ])
        (mem/f/j:DI (reg/f:DI 87) [0 this_1(D)->D.32758._M_impl._M_start+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:780 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87)
        (nil)))
(insn 9 8 10 2 (set (reg:DI 88)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:780 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 84 [ D.45150 ])
                (ashift:DI (reg:DI 88)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:780 497 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 88)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
                    (const_int 4 [0x4]))
                (nil)))))
(insn 11 10 14 2 (parallel [
            (set (reg/f:DI 85 [ D.45151 ])
                (plus:DI (reg/f:DI 83 [ D.45149 ])
                    (reg:DI 84 [ D.45150 ])))
            (clobber (reg:CC 17 flags))
        ]) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:780 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 84 [ D.45150 ])
        (expr_list:REG_DEAD (reg/f:DI 83 [ D.45149 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 14 11 18 2 (set (reg:DI 86 [ <retval> ])
        (reg/f:DI 85 [ D.45151 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:780 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85 [ D.45151 ])
        (nil)))
(insn 18 14 19 2 (set (reg/i:DI 0 ax)
        (reg:DI 86 [ <retval> ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:780 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86 [ <retval> ])
        (nil)))
(insn 19 18 0 2 (use (reg/i:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:780 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = brite::Color] (_ZNSaIN5brite5ColorEEC1Ev, funcdef_no=2006, decl_uid=40964, symbol_order=605)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best DIREG, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 8(l0): point = 0
   Insn 7(l0): point = 2
   Insn 6(l0): point = 4
   Insn 2(l0): point = 6
 a0(r83): [3..4]
Compressing live ranges: from 9 to 2 - 22%
Ranges after the compression:
 a0(r83): [0..1]
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1
Disposition:
    0:r83  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = brite::Color]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} 
;;    total ref usage 102{89d,13u,0e} in 4{3 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:113 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:113 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 83)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:113 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(call_insn 8 7 0 2 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx13new_allocatorIN5brite5ColorEEC2Ev") [flags 0x1]  <function_decl 0x103c9dc00 __base_ctor >) [0 __base_ctor  S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:113 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = brite::Color] (_ZNSaIN5brite5ColorEED2Ev, funcdef_no=2008, decl_uid=40971, symbol_order=607)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best DIREG, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 8(l0): point = 0
   Insn 7(l0): point = 2
   Insn 6(l0): point = 4
   Insn 2(l0): point = 6
 a0(r83): [3..4]
Compressing live ranges: from 9 to 2 - 22%
Ranges after the compression:
 a0(r83): [0..1]
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1
Disposition:
    0:r83  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = brite::Color]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} 
;;    total ref usage 102{89d,13u,0e} in 4{3 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:121 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 83)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(call_insn 8 7 0 2 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx13new_allocatorIN5brite5ColorEED2Ev") [flags 0x1]  <function_decl 0x103c9de00 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:121 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = brite::Color] (_ZNSaIN5brite5ColorEED1Ev, funcdef_no=2009, decl_uid=40968, symbol_order=608)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best DIREG, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 8(l0): point = 0
   Insn 7(l0): point = 2
   Insn 6(l0): point = 4
   Insn 2(l0): point = 6
 a0(r83): [3..4]
Compressing live ranges: from 9 to 2 - 22%
Ranges after the compression:
 a0(r83): [0..1]
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1
Disposition:
    0:r83  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = brite::Color]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} 
;;    total ref usage 102{89d,13u,0e} in 4{3 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:121 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 83)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(call_insn 8 7 0 2 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx13new_allocatorIN5brite5ColorEED2Ev") [flags 0x1]  <function_decl 0x103c9de00 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:121 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const value_type&, const allocator_type&) [with _Tp = brite::Color; _Alloc = std::allocator<brite::Color>; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = brite::Color; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<brite::Color>] (_ZNSt6vectorIN5brite5ColorESaIS1_EEC1EmRKS1_RKS2_, funcdef_no=2012, decl_uid=41534, symbol_order=611)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 5 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 33.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r88,l0) best DREG, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r87,l0) best SIREG, allocno GENERAL_REGS
    r86: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r86,l0) best DREG, allocno GENERAL_REGS
    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best DIREG, allocno GENERAL_REGS
    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r83,l0) best DIREG, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a2(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a5(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a6(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a7(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a8(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 33(l0): point = 1
   Insn 32(l0): point = 3
   Insn 31(l0): point = 5
   Insn 30(l0): point = 7
   Insn 29(l0): point = 9
   Insn 28(l0): point = 11
   Insn 38(l0): point = 13
   Insn 42(l0): point = 16
   Insn 22(l0): point = 19
   Insn 21(l0): point = 21
   Insn 20(l0): point = 23
   Insn 19(l0): point = 25
   Insn 18(l0): point = 27
   Insn 17(l0): point = 29
   Insn 16(l0): point = 31
   Insn 15(l0): point = 33
   Insn 14(l0): point = 35
   Insn 13(l0): point = 37
   Insn 12(l0): point = 39
   Insn 11(l0): point = 41
   Insn 10(l0): point = 43
   Insn 9(l0): point = 45
   Insn 5(l0): point = 47
   Insn 4(l0): point = 49
   Insn 3(l0): point = 51
   Insn 2(l0): point = 53
 a0(r85): [4..5]
 a1(r91): [6..13]
 a2(r84): [10..11]
 a3(r90): [22..27]
 a4(r89): [24..29]
 a5(r88): [26..31]
 a6(r83): [36..45]
 a7(r87): [38..41]
 a8(r86): [40..43]
Compressing live ranges: from 56 to 8 - 14%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r91): [2..3]
 a2(r84): [2..3]
 a3(r90): [4..5]
 a4(r89): [4..5]
 a5(r88): [4..5]
 a6(r83): [6..7]
 a7(r87): [6..7]
 a8(r86): [6..7]
  regions=1, blocks=6, points=8
    allocnos=9 (big 0), copies=0, conflicts=0, ranges=9
Disposition:
    6:r83  l0     0    2:r84  l0     0    0:r85  l0     0    8:r86  l0     1
    7:r87  l0     2    5:r88  l0     1    4:r89  l0     2    3:r90  l0     0
    1:r91  l0     3
+++Costs: overall -9, reg -9, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const value_type&, const allocator_type&) [with _Tp = brite::Color; _Alloc = std::allocator<brite::Color>; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = brite::Color; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<brite::Color>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={6d,1u} r1={8d,3u} r2={5d,1u} r4={7d,3u} r5={9d,5u} r6={1d,5u} r7={1d,9u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,4u} r17={4d} r18={4d} r19={4d} r20={1d,16u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 366{310d,56u,0e} in 26{22 regular + 4 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 86 87 88 89 90
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:303 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:303 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __value+0 S8 A64])
        (reg:DI 1 dx [ __value ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:303 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __value ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __a+0 S8 A64])
        (reg:DI 2 cx [ __a ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:303 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ __a ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:DI 83 [ D.45153 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:305 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __a+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:305 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 87)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:305 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 1 dx)
        (reg:DI 86)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:305 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg:DI 87)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:305 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ D.45153 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:305 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45153 ])
        (nil)))
(call_insn 15 14 16 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIN5brite5ColorESaIS1_EEC2EmRKS2_") [flags 0x1]  <function_decl 0x103cbf800 __base_ctor >) [0 __base_ctor  S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:305 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 16 15 17 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __value+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:306 89 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 89)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:306 89 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:306 89 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:DI 1 dx)
        (reg:DI 88)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:306 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(insn 20 19 21 2 (set (reg:DI 4 si)
        (reg:DI 89)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:306 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (reg:DI 90)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:306 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(call_insn 22 21 40 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIN5brite5ColorESaIS1_EE18_M_fill_initializeEmRKS1_") [flags 0x1]  <function_decl 0x103cda600 _M_fill_initialize>) [0 _M_fill_initialize S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:306 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       4 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 40 22 42 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(jump_insn 42 40 43 3 (set (pc)
        (label_ref 41)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:306 636 {jump}
     (nil)
 -> 41)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 43 42 37)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 4 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 84 85 91
(code_label/s 37 43 39 4 220 "" [1 uses])
(note 39 37 38 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 38 39 28 4 (set (reg:DI 91)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 28 38 29 4 (set (reg/f:DI 84 [ D.45153 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:305 89 {*movdi_internal}
     (nil))
(insn 29 28 30 4 (set (reg:DI 5 di)
        (reg/f:DI 84 [ D.45153 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:305 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84 [ D.45153 ])
        (nil)))
(call_insn 30 29 31 4 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIN5brite5ColorESaIS1_EED2Ev") [flags 0x1]  <function_decl 0x103cc2000 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:305 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int -2 [0xfffffffffffffffe])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 31 30 32 4 (set (reg/f:DI 85 [ D.45152 ])
        (reg:DI 91)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(insn 32 31 33 4 (set (reg:DI 5 di)
        (reg/f:DI 85 [ D.45152 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85 [ D.45152 ])
        (nil)))
(call_insn 33 32 34 4 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x143165200 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 34 33 41)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 41 34 36 5 221 "" [1 uses])
(note 36 41 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::vector<_Tp, _Alloc>::~vector() [with _Tp = brite::Color; _Alloc = std::allocator<brite::Color>] (_ZNSt6vectorIN5brite5ColorESaIS1_EED1Ev, funcdef_no=2015, decl_uid=41554, symbol_order=614)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 5 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 33.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r87,l0) best DIREG, allocno GENERAL_REGS
    r86: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r86,l0) best DIREG, allocno GENERAL_REGS
    r85: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r85,l0) best SIREG, allocno GENERAL_REGS
    r84: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r84,l0) best AD_REGS, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r83,l0) best DIREG, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a3(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a4(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a5(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a6(r84,l0) costs: AREG:-1 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a7(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a8(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a9(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 33(l0): point = 1
   Insn 32(l0): point = 3
   Insn 31(l0): point = 5
   Insn 30(l0): point = 7
   Insn 29(l0): point = 9
   Insn 28(l0): point = 11
   Insn 38(l0): point = 13
   Insn 41(l0): point = 16
   Insn 21(l0): point = 18
   Insn 20(l0): point = 20
   Insn 19(l0): point = 22
   Insn 17(l0): point = 25
   Insn 16(l0): point = 27
   Insn 15(l0): point = 29
   Insn 14(l0): point = 31
   Insn 13(l0): point = 33
   Insn 12(l0): point = 35
   Insn 11(l0): point = 37
   Insn 10(l0): point = 39
   Insn 9(l0): point = 41
   Insn 8(l0): point = 43
   Insn 7(l0): point = 45
   Insn 6(l0): point = 47
   Insn 2(l0): point = 49
 a0(r89): [4..5]
 a1(r92): [6..13]
 a2(r88): [10..11]
 a3(r87): [21..22]
 a4(r86): [28..33]
 a5(r85): [30..37]
 a6(r84): [32..41]
 a7(r91): [34..35]
 a8(r90): [38..39]
 a9(r83): [46..47]
Compressing live ranges: from 52 to 14 - 26%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r92): [2..3]
 a2(r88): [2..3]
 a3(r87): [4..5]
 a4(r86): [6..7]
 a5(r85): [6..9]
 a6(r84): [6..11]
 a7(r91): [8..9]
 a8(r90): [10..11]
 a9(r83): [12..13]
  regions=1, blocks=6, points=14
    allocnos=10 (big 0), copies=0, conflicts=0, ranges=10
Disposition:
    9:r83  l0     0    6:r84  l0     1    5:r85  l0     2    4:r86  l0     0
    3:r87  l0     0    2:r88  l0     0    0:r89  l0     0    8:r90  l0     0
    7:r91  l0     0    1:r92  l0     3
+++Costs: overall -8, reg -8, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::vector<_Tp, _Alloc>::~vector() [with _Tp = brite::Color; _Alloc = std::allocator<brite::Color>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={7d,2u} r1={8d,1u} r2={6d} r4={7d,1u} r5={11d,6u} r6={1d,5u} r7={1d,10u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1d,4u} r17={5d} r18={5d} r19={5d} r20={1d,11u} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={6d} r38={6d} r39={5d} r40={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 428{378d,50u,0e} in 24{19 regular + 5 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85 86 90 91
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:423 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 83 [ D.45155 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:425 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ D.45155 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:425 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45155 ])
        (nil)))
(call_insn 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIN5brite5ColorESaIS1_EE19_M_get_Tp_allocatorEv") [flags 0x1]  <function_decl 0x103caf500 _M_get_Tp_allocator>) [0 _M_get_Tp_allocator S1 A8])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:425 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 84 [ D.45156 ])
        (reg:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:425 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:425 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 85 [ D.45157 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 90)
                (const_int 8 [0x8])) [0 this_1(D)->D.41560._M_impl._M_finish+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:425 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:425 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 86 [ D.45157 ])
        (mem/f/j:DI (reg/f:DI 91) [0 this_1(D)->D.41560._M_impl._M_start+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:425 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 1 dx)
        (reg/f:DI 84 [ D.45156 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:424 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84 [ D.45156 ])
        (nil)))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (reg/f:DI 85 [ D.45157 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:424 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85 [ D.45157 ])
        (nil)))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg/f:DI 86 [ D.45157 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:424 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 86 [ D.45157 ])
        (nil)))
(call_insn 17 16 18 2 (call (mem:QI (symbol_ref/i:DI ("_ZSt8_DestroyIPN5brite5ColorES1_EvT_S3_RSaIT0_E") [flags 0x1]  <function_decl 0x103e37f00 _Destroy>) [0 _Destroy S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:424 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       4 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 87
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 3 (set (reg/f:DI 87 [ D.45155 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:425 89 {*movdi_internal}
     (nil))
(insn 20 19 21 3 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.45155 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:425 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.45155 ])
        (nil)))
(call_insn 21 20 41 3 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIN5brite5ColorESaIS1_EED2Ev") [flags 0x1]  <function_decl 0x103cc2000 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:425 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 41 21 42 3 (set (pc)
        (label_ref 40)) 636 {jump}
     (nil)
 -> 40)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 42 41 37)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 4 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 88 89 92
(code_label/s 37 42 39 4 225 "" [1 uses])
(note 39 37 38 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 38 39 28 4 (set (reg:DI 92)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 28 38 29 4 (set (reg/f:DI 88 [ D.45155 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:425 89 {*movdi_internal}
     (nil))
(insn 29 28 30 4 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.45155 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:425 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.45155 ])
        (nil)))
(call_insn 30 29 31 4 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIN5brite5ColorESaIS1_EED2Ev") [flags 0x1]  <function_decl 0x103cc2000 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:425 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int -3 [0xfffffffffffffffd])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 31 30 32 4 (set (reg/f:DI 89 [ D.45154 ])
        (reg:DI 92)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(insn 32 31 33 4 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.45154 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.45154 ])
        (nil)))
(call_insn 33 32 34 4 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x143165200 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 34 33 40)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 40 34 36 5 226 "" [1 uses])
(note 36 40 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = int] (_ZNSaIiEC1Ev, funcdef_no=2018, decl_uid=32917, symbol_order=617)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best DIREG, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 8(l0): point = 0
   Insn 7(l0): point = 2
   Insn 6(l0): point = 4
   Insn 2(l0): point = 6
 a0(r83): [3..4]
Compressing live ranges: from 9 to 2 - 22%
Ranges after the compression:
 a0(r83): [0..1]
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1
Disposition:
    0:r83  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} 
;;    total ref usage 102{89d,13u,0e} in 4{3 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:113 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:113 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 83)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:113 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(call_insn 8 7 0 2 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx13new_allocatorIiEC2Ev") [flags 0x1]  <function_decl 0x1037ff000 __base_ctor >) [0 __base_ctor  S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:113 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = int] (_ZNSaIiED2Ev, funcdef_no=2020, decl_uid=32924, symbol_order=619)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best DIREG, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 8(l0): point = 0
   Insn 7(l0): point = 2
   Insn 6(l0): point = 4
   Insn 2(l0): point = 6
 a0(r83): [3..4]
Compressing live ranges: from 9 to 2 - 22%
Ranges after the compression:
 a0(r83): [0..1]
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1
Disposition:
    0:r83  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} 
;;    total ref usage 102{89d,13u,0e} in 4{3 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:121 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 83)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(call_insn 8 7 0 2 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx13new_allocatorIiED2Ev") [flags 0x1]  <function_decl 0x1037ff200 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:121 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = int] (_ZNSaIiED1Ev, funcdef_no=2021, decl_uid=32921, symbol_order=620)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best DIREG, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 8(l0): point = 0
   Insn 7(l0): point = 2
   Insn 6(l0): point = 4
   Insn 2(l0): point = 6
 a0(r83): [3..4]
Compressing live ranges: from 9 to 2 - 22%
Ranges after the compression:
 a0(r83): [0..1]
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1
Disposition:
    0:r83  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} 
;;    total ref usage 102{89d,13u,0e} in 4{3 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:121 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 83)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(call_insn 8 7 0 2 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx13new_allocatorIiED2Ev") [flags 0x1]  <function_decl 0x1037ff200 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:121 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const value_type&, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<int>] (_ZNSt6vectorIiSaIiEEC1EmRKiRKS0_, funcdef_no=2024, decl_uid=35371, symbol_order=623)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 5 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 33.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r88,l0) best DREG, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r87,l0) best SIREG, allocno GENERAL_REGS
    r86: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r86,l0) best DREG, allocno GENERAL_REGS
    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best DIREG, allocno GENERAL_REGS
    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r83,l0) best DIREG, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a2(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a5(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a6(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a7(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a8(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 33(l0): point = 1
   Insn 32(l0): point = 3
   Insn 31(l0): point = 5
   Insn 30(l0): point = 7
   Insn 29(l0): point = 9
   Insn 28(l0): point = 11
   Insn 38(l0): point = 13
   Insn 42(l0): point = 16
   Insn 22(l0): point = 19
   Insn 21(l0): point = 21
   Insn 20(l0): point = 23
   Insn 19(l0): point = 25
   Insn 18(l0): point = 27
   Insn 17(l0): point = 29
   Insn 16(l0): point = 31
   Insn 15(l0): point = 33
   Insn 14(l0): point = 35
   Insn 13(l0): point = 37
   Insn 12(l0): point = 39
   Insn 11(l0): point = 41
   Insn 10(l0): point = 43
   Insn 9(l0): point = 45
   Insn 5(l0): point = 47
   Insn 4(l0): point = 49
   Insn 3(l0): point = 51
   Insn 2(l0): point = 53
 a0(r85): [4..5]
 a1(r91): [6..13]
 a2(r84): [10..11]
 a3(r90): [22..27]
 a4(r89): [24..29]
 a5(r88): [26..31]
 a6(r83): [36..45]
 a7(r87): [38..41]
 a8(r86): [40..43]
Compressing live ranges: from 56 to 8 - 14%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r91): [2..3]
 a2(r84): [2..3]
 a3(r90): [4..5]
 a4(r89): [4..5]
 a5(r88): [4..5]
 a6(r83): [6..7]
 a7(r87): [6..7]
 a8(r86): [6..7]
  regions=1, blocks=6, points=8
    allocnos=9 (big 0), copies=0, conflicts=0, ranges=9
Disposition:
    6:r83  l0     0    2:r84  l0     0    0:r85  l0     0    8:r86  l0     1
    7:r87  l0     2    5:r88  l0     1    4:r89  l0     2    3:r90  l0     0
    1:r91  l0     3
+++Costs: overall -9, reg -9, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const value_type&, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={6d,1u} r1={8d,3u} r2={5d,1u} r4={7d,3u} r5={9d,5u} r6={1d,5u} r7={1d,9u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,4u} r17={4d} r18={4d} r19={4d} r20={1d,16u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 366{310d,56u,0e} in 26{22 regular + 4 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 86 87 88 89 90
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:303 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:303 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __value+0 S8 A64])
        (reg:DI 1 dx [ __value ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:303 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __value ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __a+0 S8 A64])
        (reg:DI 2 cx [ __a ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:303 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ __a ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:DI 83 [ D.45159 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:305 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __a+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:305 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 87)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:305 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 1 dx)
        (reg:DI 86)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:305 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg:DI 87)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:305 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ D.45159 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:305 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45159 ])
        (nil)))
(call_insn 15 14 16 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_") [flags 0x1]  <function_decl 0x103941f00 __base_ctor >) [0 __base_ctor  S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:305 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 16 15 17 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __value+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:306 89 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 89)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:306 89 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:306 89 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:DI 1 dx)
        (reg:DI 88)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:306 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(insn 20 19 21 2 (set (reg:DI 4 si)
        (reg:DI 89)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:306 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (reg:DI 90)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:306 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(call_insn 22 21 40 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi") [flags 0x1]  <function_decl 0x10395fd00 _M_fill_initialize>) [0 _M_fill_initialize S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:306 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       4 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 40 22 42 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(jump_insn 42 40 43 3 (set (pc)
        (label_ref 41)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:306 636 {jump}
     (nil)
 -> 41)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 43 42 37)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 4 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 84 85 91
(code_label/s 37 43 39 4 234 "" [1 uses])
(note 39 37 38 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 38 39 28 4 (set (reg:DI 91)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 28 38 29 4 (set (reg/f:DI 84 [ D.45159 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:305 89 {*movdi_internal}
     (nil))
(insn 29 28 30 4 (set (reg:DI 5 di)
        (reg/f:DI 84 [ D.45159 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:305 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84 [ D.45159 ])
        (nil)))
(call_insn 30 29 31 4 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIiSaIiEED2Ev") [flags 0x1]  <function_decl 0x103948700 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:305 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int -2 [0xfffffffffffffffe])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 31 30 32 4 (set (reg/f:DI 85 [ D.45158 ])
        (reg:DI 91)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(insn 32 31 33 4 (set (reg:DI 5 di)
        (reg/f:DI 85 [ D.45158 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85 [ D.45158 ])
        (nil)))
(call_insn 33 32 34 4 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x143165200 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 34 33 41)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 41 34 36 5 235 "" [1 uses])
(note 36 41 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::vector<_Tp, _Alloc>::~vector() [with _Tp = int; _Alloc = std::allocator<int>] (_ZNSt6vectorIiSaIiEED1Ev, funcdef_no=2027, decl_uid=35391, symbol_order=626)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 5 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 33.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r87,l0) best DIREG, allocno GENERAL_REGS
    r86: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r86,l0) best DIREG, allocno GENERAL_REGS
    r85: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r85,l0) best SIREG, allocno GENERAL_REGS
    r84: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r84,l0) best AD_REGS, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r83,l0) best DIREG, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a3(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a4(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a5(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a6(r84,l0) costs: AREG:-1 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a7(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a8(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a9(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 33(l0): point = 1
   Insn 32(l0): point = 3
   Insn 31(l0): point = 5
   Insn 30(l0): point = 7
   Insn 29(l0): point = 9
   Insn 28(l0): point = 11
   Insn 38(l0): point = 13
   Insn 41(l0): point = 16
   Insn 21(l0): point = 18
   Insn 20(l0): point = 20
   Insn 19(l0): point = 22
   Insn 17(l0): point = 25
   Insn 16(l0): point = 27
   Insn 15(l0): point = 29
   Insn 14(l0): point = 31
   Insn 13(l0): point = 33
   Insn 12(l0): point = 35
   Insn 11(l0): point = 37
   Insn 10(l0): point = 39
   Insn 9(l0): point = 41
   Insn 8(l0): point = 43
   Insn 7(l0): point = 45
   Insn 6(l0): point = 47
   Insn 2(l0): point = 49
 a0(r89): [4..5]
 a1(r92): [6..13]
 a2(r88): [10..11]
 a3(r87): [21..22]
 a4(r86): [28..33]
 a5(r85): [30..37]
 a6(r84): [32..41]
 a7(r91): [34..35]
 a8(r90): [38..39]
 a9(r83): [46..47]
Compressing live ranges: from 52 to 14 - 26%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r92): [2..3]
 a2(r88): [2..3]
 a3(r87): [4..5]
 a4(r86): [6..7]
 a5(r85): [6..9]
 a6(r84): [6..11]
 a7(r91): [8..9]
 a8(r90): [10..11]
 a9(r83): [12..13]
  regions=1, blocks=6, points=14
    allocnos=10 (big 0), copies=0, conflicts=0, ranges=10
Disposition:
    9:r83  l0     0    6:r84  l0     1    5:r85  l0     2    4:r86  l0     0
    3:r87  l0     0    2:r88  l0     0    0:r89  l0     0    8:r90  l0     0
    7:r91  l0     0    1:r92  l0     3
+++Costs: overall -8, reg -8, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::vector<_Tp, _Alloc>::~vector() [with _Tp = int; _Alloc = std::allocator<int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={7d,2u} r1={8d,1u} r2={6d} r4={7d,1u} r5={11d,6u} r6={1d,5u} r7={1d,10u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1d,4u} r17={5d} r18={5d} r19={5d} r20={1d,11u} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={6d} r38={6d} r39={5d} r40={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 428{378d,50u,0e} in 24{19 regular + 5 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85 86 90 91
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:423 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 83 [ D.45161 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:425 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ D.45161 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:425 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45161 ])
        (nil)))
(call_insn 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv") [flags 0x1]  <function_decl 0x103926c00 _M_get_Tp_allocator>) [0 _M_get_Tp_allocator S1 A8])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:425 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 84 [ D.45162 ])
        (reg:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:425 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:425 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 85 [ D.45163 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 90)
                (const_int 8 [0x8])) [0 this_1(D)->D.35397._M_impl._M_finish+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:425 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:425 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 86 [ D.45163 ])
        (mem/f/j:DI (reg/f:DI 91) [0 this_1(D)->D.35397._M_impl._M_start+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:425 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 1 dx)
        (reg/f:DI 84 [ D.45162 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:424 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84 [ D.45162 ])
        (nil)))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (reg/f:DI 85 [ D.45163 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:424 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85 [ D.45163 ])
        (nil)))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg/f:DI 86 [ D.45163 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:424 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 86 [ D.45163 ])
        (nil)))
(call_insn 17 16 18 2 (call (mem:QI (symbol_ref/i:DI ("_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E") [flags 0x1]  <function_decl 0x103e4bd00 _Destroy>) [0 _Destroy S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:424 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       4 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 87
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 3 (set (reg/f:DI 87 [ D.45161 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:425 89 {*movdi_internal}
     (nil))
(insn 20 19 21 3 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.45161 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:425 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.45161 ])
        (nil)))
(call_insn 21 20 41 3 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIiSaIiEED2Ev") [flags 0x1]  <function_decl 0x103948700 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:425 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 41 21 42 3 (set (pc)
        (label_ref 40)) 636 {jump}
     (nil)
 -> 40)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 42 41 37)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 4 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 88 89 92
(code_label/s 37 42 39 4 239 "" [1 uses])
(note 39 37 38 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 38 39 28 4 (set (reg:DI 92)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 28 38 29 4 (set (reg/f:DI 88 [ D.45161 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:425 89 {*movdi_internal}
     (nil))
(insn 29 28 30 4 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.45161 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:425 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.45161 ])
        (nil)))
(call_insn 30 29 31 4 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIiSaIiEED2Ev") [flags 0x1]  <function_decl 0x103948700 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:425 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int -3 [0xfffffffffffffffd])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 31 30 32 4 (set (reg/f:DI 89 [ D.45160 ])
        (reg:DI 92)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(insn 32 31 33 4 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.45160 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.45160 ])
        (nil)))
(call_insn 33 32 34 4 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x143165200 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 34 33 40)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 40 34 36 5 240 "" [1 uses])
(note 36 40 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = brite::Color; _Alloc = std::allocator<brite::Color>; std::vector<_Tp, _Alloc>::reference = brite::Color&; std::vector<_Tp, _Alloc>::size_type = long unsigned int] (_ZNSt6vectorIN5brite5ColorESaIS1_EEixEm, funcdef_no=2028, decl_uid=41236, symbol_order=627)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r86,l0) best AREG, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a2(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a3(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a4(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a5(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8

   Insn 19(l0): point = 0
   Insn 18(l0): point = 2
   Insn 14(l0): point = 4
   Insn 11(l0): point = 6
   Insn 10(l0): point = 8
   Insn 9(l0): point = 10
   Insn 8(l0): point = 12
   Insn 7(l0): point = 14
   Insn 3(l0): point = 16
   Insn 2(l0): point = 18
 a0(r86): [3..4]
 a1(r85): [5..6]
 a2(r84): [7..8]
 a3(r83): [7..12]
 a4(r88): [9..10]
 a5(r87): [13..14]
Compressing live ranges: from 21 to 10 - 47%
Ranges after the compression:
 a0(r86): [0..1]
 a1(r85): [2..3]
 a2(r84): [4..5]
 a3(r83): [4..7]
 a4(r88): [6..7]
 a5(r87): [8..9]
  regions=1, blocks=3, points=10
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    3:r83  l0     0    2:r84  l0     1    1:r85  l0     0    0:r86  l0     0
    5:r87  l0     0    4:r88  l0     1
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = brite::Color; _Alloc = std::allocator<brite::Color>; std::vector<_Tp, _Alloc>::reference = brite::Color&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 17[flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={2d} r20={1d,6u,1e} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 50{28d,21u,1e} in 10{10 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 17 [flags] 83 84 85 86 87 88
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:779 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:779 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:780 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 83 [ D.45164 ])
        (mem/f/j:DI (reg/f:DI 87) [0 this_1(D)->D.41560._M_impl._M_start+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:780 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87)
        (nil)))
(insn 9 8 10 2 (set (reg:DI 88)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:780 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 84 [ D.45165 ])
                (ashift:DI (reg:DI 88)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:780 497 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 88)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
                    (const_int 2 [0x2]))
                (nil)))))
(insn 11 10 14 2 (parallel [
            (set (reg/f:DI 85 [ D.45166 ])
                (plus:DI (reg/f:DI 83 [ D.45164 ])
                    (reg:DI 84 [ D.45165 ])))
            (clobber (reg:CC 17 flags))
        ]) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:780 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 84 [ D.45165 ])
        (expr_list:REG_DEAD (reg/f:DI 83 [ D.45164 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 14 11 18 2 (set (reg:DI 86 [ <retval> ])
        (reg/f:DI 85 [ D.45166 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:780 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85 [ D.45166 ])
        (nil)))
(insn 18 14 19 2 (set (reg/i:DI 0 ax)
        (reg:DI 86 [ <retval> ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:780 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86 [ <retval> ])
        (nil)))
(insn 19 18 0 2 (use (reg/i:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:780 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::_List_iterator<_Tp>::_List_iterator() [with _Tp = brite::Edge*] (_ZNSt14_List_iteratorIPN5brite4EdgeEEC1Ev, funcdef_no=2051, decl_uid=41771, symbol_order=650)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8

   Insn 7(l0): point = 0
   Insn 6(l0): point = 2
   Insn 2(l0): point = 4
 a0(r83): [1..2]
Compressing live ranges: from 7 to 2 - 28%
Ranges after the compression:
 a0(r83): [0..1]
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1
Disposition:
    0:r83  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::_List_iterator<_Tp>::_List_iterator() [with _Tp = brite::Edge*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r83={1d,1u} 
;;    total ref usage 31{20d,11u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:136 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:137 89 {*movdi_internal}
     (nil))
(insn 7 6 0 2 (set (mem/f/j:DI (reg/f:DI 83) [0 this_1(D)->_M_node+0 S8 A64])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:137 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83)
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::list<_Tp, _Alloc>::iterator std::list<_Tp, _Alloc>::begin() [with _Tp = brite::Edge*; _Alloc = std::allocator<brite::Edge*>; std::list<_Tp, _Alloc>::iterator = std::_List_iterator<brite::Edge*>] (_ZNSt4listIPN5brite4EdgeESaIS2_EE5beginEv, funcdef_no=2052, decl_uid=31008, symbol_order=651)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best DIREG, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r83,l0) best SIREG, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a3(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a4(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8

   Insn 20(l0): point = 0
   Insn 19(l0): point = 2
   Insn 15(l0): point = 4
   Insn 12(l0): point = 6
   Insn 11(l0): point = 8
   Insn 10(l0): point = 10
   Insn 9(l0): point = 12
   Insn 8(l0): point = 14
   Insn 7(l0): point = 16
   Insn 6(l0): point = 18
   Insn 2(l0): point = 20
 a0(r85): [3..4]
 a1(r84): [5..6]
 a2(r87): [11..14]
 a3(r83): [13..16]
 a4(r86): [17..18]
Compressing live ranges: from 23 to 8 - 34%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r84): [2..3]
 a2(r87): [4..5]
 a3(r83): [4..5]
 a4(r86): [6..7]
  regions=1, blocks=3, points=8
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    3:r83  l0     1    1:r84  l0     0    0:r85  l0     0    4:r86  l0     0
    2:r87  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::list<_Tp, _Alloc>::iterator std::list<_Tp, _Alloc>::begin() [with _Tp = brite::Edge*; _Alloc = std::allocator<brite::Edge*>; std::list<_Tp, _Alloc>::iterator = std::_List_iterator<brite::Edge*>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r4={3d,1u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={2d} r18={1d} r19={1d} r20={1d,6u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} 
;;    total ref usage 118{96d,22u,0e} in 11{10 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85 86 87
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:771 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:772 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 83 [ D.45167 ])
        (mem/f/j:DI (reg/f:DI 86) [0 this_1(D)->D.31263._M_impl._M_node._M_next+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:772 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 86)
        (nil)))
(insn 8 7 9 2 (parallel [
            (set (reg:DI 87)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:772 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg/f:DI 83 [ D.45167 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:772 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45167 ])
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 87)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:772 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(call_insn 11 10 12 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt14_List_iteratorIPN5brite4EdgeEEC1EPNSt8__detail15_List_node_baseE") [flags 0x1]  <function_decl 0x103d5d800 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:772 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 12 11 15 2 (set (reg:DI 84 [ D.44186 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 D.42562+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:772 89 {*movdi_internal}
     (nil))
(insn 15 12 19 2 (set (reg:DI 85 [ <retval> ])
        (reg:DI 84 [ D.44186 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:772 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84 [ D.44186 ])
        (nil)))
(insn 19 15 20 2 (set (reg/i:DI 0 ax)
        (reg:DI 85 [ <retval> ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:772 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85 [ <retval> ])
        (nil)))
(insn 20 19 0 2 (use (reg/i:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:772 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::list<_Tp, _Alloc>::iterator std::list<_Tp, _Alloc>::end() [with _Tp = brite::Edge*; _Alloc = std::allocator<brite::Edge*>; std::list<_Tp, _Alloc>::iterator = std::_List_iterator<brite::Edge*>] (_ZNSt4listIPN5brite4EdgeESaIS2_EE3endEv, funcdef_no=2053, decl_uid=31012, symbol_order=652)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r86: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r86,l0) best DIREG, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r83,l0) best SIREG, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a2(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a3(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 19(l0): point = 0
   Insn 18(l0): point = 2
   Insn 14(l0): point = 4
   Insn 11(l0): point = 6
   Insn 10(l0): point = 8
   Insn 9(l0): point = 10
   Insn 8(l0): point = 12
   Insn 7(l0): point = 14
   Insn 6(l0): point = 16
   Insn 2(l0): point = 18
 a0(r85): [3..4]
 a1(r84): [5..6]
 a2(r86): [11..14]
 a3(r83): [13..16]
Compressing live ranges: from 21 to 6 - 28%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r84): [2..3]
 a2(r86): [4..5]
 a3(r83): [4..5]
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    3:r83  l0     1    1:r84  l0     0    0:r85  l0     0    2:r86  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::list<_Tp, _Alloc>::iterator std::list<_Tp, _Alloc>::end() [with _Tp = brite::Edge*; _Alloc = std::allocator<brite::Edge*>; std::list<_Tp, _Alloc>::iterator = std::_List_iterator<brite::Edge*>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r4={3d,1u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={2d} r18={1d} r19={1d} r20={1d,6u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} 
;;    total ref usage 116{95d,21u,0e} in 10{9 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85 86
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:789 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 83 [ D.45168 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:790 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (parallel [
            (set (reg:DI 86)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:790 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 8 7 9 2 (set (reg:DI 4 si)
        (reg/f:DI 83 [ D.45168 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:790 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45168 ])
        (nil)))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 86)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:790 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt14_List_iteratorIPN5brite4EdgeEEC1EPNSt8__detail15_List_node_baseE") [flags 0x1]  <function_decl 0x103d5d800 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:790 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 11 10 14 2 (set (reg:DI 84 [ D.44241 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 D.42564+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:790 89 {*movdi_internal}
     (nil))
(insn 14 11 18 2 (set (reg:DI 85 [ <retval> ])
        (reg:DI 84 [ D.44241 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:790 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84 [ D.44241 ])
        (nil)))
(insn 18 14 19 2 (set (reg/i:DI 0 ax)
        (reg:DI 85 [ <retval> ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:790 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85 [ <retval> ])
        (nil)))
(insn 19 18 0 2 (use (reg/i:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:790 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function bool std::_List_iterator<_Tp>::operator!=(const _Self&) const [with _Tp = brite::Edge*; std::_List_iterator<_Tp>::_Self = std::_List_iterator<brite::Edge*>] (_ZNKSt14_List_iteratorIPN5brite4EdgeEEneERKS3_, funcdef_no=2054, decl_uid=41761, symbol_order=653)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r86,l0) best AREG, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:308 INT_SSE_REGS:308 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:416 INT_SSE_REGS:416 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a2(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a3(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a4(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a5(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8

   Insn 20(l0): point = 0
   Insn 19(l0): point = 2
   Insn 15(l0): point = 4
   Insn 12(l0): point = 6
   Insn 11(l0): point = 8
   Insn 10(l0): point = 10
   Insn 9(l0): point = 12
   Insn 8(l0): point = 14
   Insn 7(l0): point = 16
   Insn 3(l0): point = 18
   Insn 2(l0): point = 20
 a0(r86): [3..4]
 a1(r85): [5..6]
 a2(r84): [9..10]
 a3(r83): [9..14]
 a4(r88): [11..12]
 a5(r87): [15..16]
Compressing live ranges: from 23 to 10 - 43%
Ranges after the compression:
 a0(r86): [0..1]
 a1(r85): [2..3]
 a2(r84): [4..5]
 a3(r83): [4..7]
 a4(r88): [6..7]
 a5(r87): [8..9]
  regions=1, blocks=3, points=10
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    3:r83  l0     1    2:r84  l0     0    1:r85  l0     0    0:r86  l0     0
    5:r87  l0     0    4:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


bool std::_List_iterator<_Tp>::operator!=(const _Self&) const [with _Tp = brite::Edge*; std::_List_iterator<_Tp>::_Self = std::_List_iterator<brite::Edge*>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 17[flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={1d,1u} r20={1d,6u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 49{27d,22u,0e} in 11{11 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 17 [flags] 83 84 85 86 87 88
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:191 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __x+0 S8 A64])
        (reg:DI 4 si [ __x ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:191 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __x ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:192 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 83 [ D.45169 ])
        (mem/f/j:DI (reg/f:DI 87) [0 this_1(D)->_M_node+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:192 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87)
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __x+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:192 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 84 [ D.45169 ])
        (mem/f/j:DI (reg/f:DI 88) [0 __x_3(D)->_M_node+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:192 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88)
        (nil)))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 83 [ D.45169 ])
            (reg/f:DI 84 [ D.45169 ]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:192 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 84 [ D.45169 ])
        (expr_list:REG_DEAD (reg/f:DI 83 [ D.45169 ])
            (nil))))
(insn 12 11 15 2 (set (reg:QI 85 [ D.45170 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:192 592 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 15 12 19 2 (set (reg:QI 86 [ <retval> ])
        (reg:QI 85 [ D.45170 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:192 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 85 [ D.45170 ])
        (nil)))
(insn 19 15 20 2 (set (reg/i:QI 0 ax)
        (reg:QI 86 [ <retval> ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:192 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 86 [ <retval> ])
        (nil)))
(insn 20 19 0 2 (use (reg/i:QI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:192 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::_List_iterator<_Tp>::_Self std::_List_iterator<_Tp>::operator++(int) [with _Tp = brite::Edge*; std::_List_iterator<_Tp>::_Self = std::_List_iterator<brite::Edge*>] (_ZNSt14_List_iteratorIPN5brite4EdgeEEppEi, funcdef_no=2055, decl_uid=41750, symbol_order=654)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r86,l0) best AREG, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a2(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a3(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a4(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a5(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a6(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a7(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8

   Insn 23(l0): point = 0
   Insn 22(l0): point = 2
   Insn 18(l0): point = 4
   Insn 15(l0): point = 6
   Insn 14(l0): point = 8
   Insn 13(l0): point = 10
   Insn 12(l0): point = 12
   Insn 11(l0): point = 14
   Insn 10(l0): point = 16
   Insn 9(l0): point = 18
   Insn 8(l0): point = 20
   Insn 7(l0): point = 22
   Insn 3(l0): point = 24
   Insn 2(l0): point = 26
 a0(r86): [3..4]
 a1(r85): [5..6]
 a2(r90): [9..10]
 a3(r84): [9..12]
 a4(r83): [13..14]
 a5(r89): [15..16]
 a6(r88): [19..20]
 a7(r87): [21..22]
Compressing live ranges: from 29 to 14 - 48%
Ranges after the compression:
 a0(r86): [0..1]
 a1(r85): [2..3]
 a2(r90): [4..5]
 a3(r84): [4..5]
 a4(r83): [6..7]
 a5(r89): [8..9]
 a6(r88): [10..11]
 a7(r87): [12..13]
  regions=1, blocks=3, points=14
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8
Disposition:
    4:r83  l0     0    3:r84  l0     1    1:r85  l0     0    0:r86  l0     0
    7:r87  l0     0    6:r88  l0     0    5:r89  l0     0    2:r90  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::_List_iterator<_Tp>::_Self std::_List_iterator<_Tp>::operator++(int) [with _Tp = brite::Edge*; std::_List_iterator<_Tp>::_Self = std::_List_iterator<brite::Edge*>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,9u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 54{28d,26u,0e} in 14{14 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 83 84 85 86 87 88 89 90
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:164 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 D.41752+0 S4 A32])
        (reg:SI 4 si [ D.41752 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:164 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ D.41752 ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:166 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 88)
        (mem:DI (reg/f:DI 87) [0 MEM[(const struct _List_iterator &)this_1(D)]+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:166 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87)
        (nil)))
(insn 9 8 10 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __tmp+0 S8 A64])
        (reg:DI 88)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:166 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:167 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 83 [ D.45171 ])
        (mem/f/j:DI (reg/f:DI 89) [0 this_1(D)->_M_node+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:167 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 84 [ D.45171 ])
        (mem/f/j:DI (reg/f:DI 83 [ D.45171 ]) [0 _2->_M_next+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:167 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45171 ])
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:167 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (mem/f/j:DI (reg/f:DI 90) [0 this_1(D)->_M_node+0 S8 A64])
        (reg/f:DI 84 [ D.45171 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:167 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (expr_list:REG_DEAD (reg/f:DI 84 [ D.45171 ])
            (nil))))
(insn 15 14 18 2 (set (reg:DI 85 [ D.44238 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __tmp+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:168 89 {*movdi_internal}
     (nil))
(insn 18 15 22 2 (set (reg:DI 86 [ <retval> ])
        (reg:DI 85 [ D.44238 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:168 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85 [ D.44238 ])
        (nil)))
(insn 22 18 23 2 (set (reg/i:DI 0 ax)
        (reg:DI 86 [ <retval> ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:169 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86 [ <retval> ])
        (nil)))
(insn 23 22 0 2 (use (reg/i:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:169 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _Tp& std::_List_iterator<_Tp>::operator*() const [with _Tp = brite::Edge*; std::_List_iterator<_Tp>::reference = brite::Edge*&] (_ZNKSt14_List_iteratorIPN5brite4EdgeEEdeEv, funcdef_no=2056, decl_uid=41744, symbol_order=655)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a2(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a3(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8

   Insn 16(l0): point = 0
   Insn 15(l0): point = 2
   Insn 11(l0): point = 4
   Insn 8(l0): point = 6
   Insn 7(l0): point = 8
   Insn 6(l0): point = 10
   Insn 2(l0): point = 12
 a0(r85): [3..4]
 a1(r84): [5..6]
 a2(r83): [7..8]
 a3(r86): [9..10]
Compressing live ranges: from 15 to 8 - 53%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r84): [2..3]
 a2(r83): [4..5]
 a3(r86): [6..7]
  regions=1, blocks=3, points=8
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    2:r83  l0     0    1:r84  l0     0    0:r85  l0     0    3:r86  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_Tp& std::_List_iterator<_Tp>::operator*() const [with _Tp = brite::Edge*; std::_List_iterator<_Tp>::reference = brite::Edge*&]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 17[flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={1d} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} 
;;    total ref usage 41{25d,16u,0e} in 7{7 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 17 [flags] 83 84 85 86
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:149 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:150 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 83 [ D.45172 ])
        (mem/f/j:DI (reg/f:DI 86) [0 this_1(D)->_M_node+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:150 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 86)
        (nil)))
(insn 8 7 11 2 (parallel [
            (set (reg/f:DI 84 [ D.45173 ])
                (plus:DI (reg/f:DI 83 [ D.45172 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:150 221 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45172 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 11 8 15 2 (set (reg:DI 85 [ <retval> ])
        (reg/f:DI 84 [ D.45173 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:150 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84 [ D.45173 ])
        (nil)))
(insn 15 11 16 2 (set (reg/i:DI 0 ax)
        (reg:DI 85 [ <retval> ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:150 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85 [ <retval> ])
        (nil)))
(insn 16 15 0 2 (use (reg/i:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:150 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = brite::Color] (_ZN9__gnu_cxx13new_allocatorIN5brite5ColorEEC2Ev, funcdef_no=2086, decl_uid=40903, symbol_order=685)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 2(l0): point = 0
Compressing live ranges: from 3 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = brite::Color]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,3u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 28{19d,9u,0e} in 1{1 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:79 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = brite::Color] (_ZN9__gnu_cxx13new_allocatorIN5brite5ColorEED2Ev, funcdef_no=2089, decl_uid=40908, symbol_order=688)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 2(l0): point = 0
Compressing live ranges: from 3 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = brite::Color]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,3u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 28{19d,9u,0e} in 1{1 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:86 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::_Vector_base<brite::Color, std::allocator<brite::Color> >::_Vector_impl::~_Vector_impl() (_ZNSt12_Vector_baseIN5brite5ColorESaIS1_EE12_Vector_implD1Ev, funcdef_no=2094, decl_uid=42424, symbol_order=692)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best DIREG, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 8(l0): point = 0
   Insn 7(l0): point = 2
   Insn 6(l0): point = 4
   Insn 2(l0): point = 6
 a0(r83): [3..4]
Compressing live ranges: from 9 to 2 - 22%
Ranges after the compression:
 a0(r83): [0..1]
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1
Disposition:
    0:r83  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::_Vector_base<brite::Color, std::allocator<brite::Color> >::_Vector_impl::~_Vector_impl()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} 
;;    total ref usage 102{89d,13u,0e} in 4{3 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:79 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:79 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 83)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:79 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(call_insn 8 7 0 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSaIN5brite5ColorEED2Ev") [flags 0x1]  <function_decl 0x103caac00 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:79 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = brite::Color; _Alloc = std::allocator<brite::Color>; std::size_t = long unsigned int; std::_Vector_base<_Tp, _Alloc>::allocator_type = std::allocator<brite::Color>] (_ZNSt12_Vector_baseIN5brite5ColorESaIS1_EEC2EmRKS2_, funcdef_no=2095, decl_uid=41091, symbol_order=694)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 5 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 28.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best SIREG, allocno GENERAL_REGS
    r86: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r86,l0) best SIREG, allocno GENERAL_REGS
    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best DIREG, allocno GENERAL_REGS
    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r83,l0) best DIREG, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a2(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a5(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a6(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 28(l0): point = 1
   Insn 27(l0): point = 3
   Insn 26(l0): point = 5
   Insn 25(l0): point = 7
   Insn 24(l0): point = 9
   Insn 23(l0): point = 11
   Insn 33(l0): point = 13
   Insn 37(l0): point = 16
   Insn 17(l0): point = 19
   Insn 16(l0): point = 21
   Insn 15(l0): point = 23
   Insn 14(l0): point = 25
   Insn 13(l0): point = 27
   Insn 12(l0): point = 29
   Insn 11(l0): point = 31
   Insn 10(l0): point = 33
   Insn 9(l0): point = 35
   Insn 8(l0): point = 37
   Insn 4(l0): point = 39
   Insn 3(l0): point = 41
   Insn 2(l0): point = 43
 a0(r85): [4..5]
 a1(r89): [6..13]
 a2(r84): [10..11]
 a3(r88): [22..25]
 a4(r87): [24..27]
 a5(r83): [32..37]
 a6(r86): [34..35]
Compressing live ranges: from 46 to 8 - 17%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r89): [2..3]
 a2(r84): [2..3]
 a3(r88): [4..5]
 a4(r87): [4..5]
 a5(r83): [6..7]
 a6(r86): [6..7]
  regions=1, blocks=6, points=8
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    5:r83  l0     0    2:r84  l0     0    0:r85  l0     0    6:r86  l0     1
    4:r87  l0     1    3:r88  l0     0    1:r89  l0     3
+++Costs: overall -7, reg -7, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = brite::Color; _Alloc = std::allocator<brite::Color>; std::size_t = long unsigned int; std::_Vector_base<_Tp, _Alloc>::allocator_type = std::allocator<brite::Color>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={6d,1u} r1={6d,1u} r2={5d} r4={7d,3u} r5={9d,5u} r6={1d,5u} r7={1d,9u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,4u} r17={4d} r18={4d} r19={4d} r20={1d,13u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 354{306d,48u,0e} in 21{17 regular + 4 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 86 87 88
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:134 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:134 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __a+0 S8 A64])
        (reg:DI 1 dx [ __a ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:134 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __a ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 83 [ D.45175 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:135 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __a+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:135 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 86)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:135 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ D.45175 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:135 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45175 ])
        (nil)))
(call_insn 12 11 13 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIN5brite5ColorESaIS1_EE12_Vector_implC1ERKS2_") [flags 0x1]  <function_decl 0x103cbf000 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:135 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 13 12 14 2 (set (reg:DI 87)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:136 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:136 89 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (reg:DI 87)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:136 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg:DI 88)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:136 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 17 16 35 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIN5brite5ColorESaIS1_EE17_M_create_storageEm") [flags 0x1]  <function_decl 0x103cbf600 _M_create_storage>) [0 _M_create_storage S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:136 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 1 [0x1])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       4 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 35 17 37 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(jump_insn 37 35 38 3 (set (pc)
        (label_ref 36)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:136 636 {jump}
     (nil)
 -> 36)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 38 37 32)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 4 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 84 85 89
(code_label/s 32 38 34 4 261 "" [1 uses])
(note 34 32 33 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 33 34 23 4 (set (reg:DI 89)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 23 33 24 4 (set (reg/f:DI 84 [ D.45175 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:135 89 {*movdi_internal}
     (nil))
(insn 24 23 25 4 (set (reg:DI 5 di)
        (reg/f:DI 84 [ D.45175 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:135 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84 [ D.45175 ])
        (nil)))
(call_insn 25 24 26 4 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIN5brite5ColorESaIS1_EE12_Vector_implD1Ev") [flags 0x1]  <function_decl 0x103e37a00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:135 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 26 25 27 4 (set (reg/f:DI 85 [ D.45174 ])
        (reg:DI 89)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 27 26 28 4 (set (reg:DI 5 di)
        (reg/f:DI 85 [ D.45174 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85 [ D.45174 ])
        (nil)))
(call_insn 28 27 29 4 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x143165200 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 29 28 36)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 36 29 31 5 262 "" [1 uses])
(note 31 36 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = brite::Color; _Alloc = std::allocator<brite::Color>] (_ZNSt12_Vector_baseIN5brite5ColorESaIS1_EED2Ev, funcdef_no=2098, decl_uid=41114, symbol_order=697)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 5 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 35.
verify found no changes in insn with uid = 38.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r99: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r99,l0) best AREG, allocno GENERAL_REGS
    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r98,l0) best DIREG, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r93,l0) best DIREG, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r89,l0) best DREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a2(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a3(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a4(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a5(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a6(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a7(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a8(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a9(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a10(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a11(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a12(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a13(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a14(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a15(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a16(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8

   Insn 38(l0): point = 1
   Insn 37(l0): point = 3
   Insn 36(l0): point = 5
   Insn 35(l0): point = 7
   Insn 34(l0): point = 9
   Insn 33(l0): point = 11
   Insn 43(l0): point = 13
   Insn 46(l0): point = 16
   Insn 26(l0): point = 18
   Insn 25(l0): point = 20
   Insn 24(l0): point = 22
   Insn 22(l0): point = 25
   Insn 21(l0): point = 27
   Insn 20(l0): point = 29
   Insn 19(l0): point = 31
   Insn 18(l0): point = 33
   Insn 17(l0): point = 35
   Insn 16(l0): point = 37
   Insn 15(l0): point = 39
   Insn 14(l0): point = 41
   Insn 13(l0): point = 43
   Insn 12(l0): point = 45
   Insn 11(l0): point = 47
   Insn 10(l0): point = 49
   Insn 9(l0): point = 51
   Insn 8(l0): point = 53
   Insn 7(l0): point = 55
   Insn 6(l0): point = 57
   Insn 2(l0): point = 59
 a0(r93): [4..5]
 a1(r99): [6..13]
 a2(r92): [10..11]
 a3(r91): [21..22]
 a4(r98): [28..33]
 a5(r90): [30..35]
 a6(r89): [32..39]
 a7(r97): [36..37]
 a8(r88): [40..41]
 a9(r96): [42..43]
 a10(r87): [44..45]
 a11(r86): [46..47]
 a12(r84): [46..53]
 a13(r85): [48..49]
 a14(r95): [50..51]
 a15(r83): [54..55]
 a16(r94): [56..57]
Compressing live ranges: from 62 to 26 - 41%
Ranges after the compression:
 a0(r93): [0..1]
 a1(r99): [2..3]
 a2(r92): [2..3]
 a3(r91): [4..5]
 a4(r98): [6..7]
 a5(r90): [6..7]
 a6(r89): [6..9]
 a7(r97): [8..9]
 a8(r88): [10..11]
 a9(r96): [12..13]
 a10(r87): [14..15]
 a11(r86): [16..17]
 a12(r84): [16..21]
 a13(r85): [18..19]
 a14(r95): [20..21]
 a15(r83): [22..23]
 a16(r94): [24..25]
  regions=1, blocks=6, points=26
    allocnos=17 (big 0), copies=0, conflicts=0, ranges=17
Disposition:
   15:r83  l0     0   12:r84  l0     1   13:r85  l0     0   11:r86  l0     0
   10:r87  l0     0    8:r88  l0     0    6:r89  l0     1    5:r90  l0     2
    3:r91  l0     0    2:r92  l0     0    0:r93  l0     0   16:r94  l0     0
   14:r95  l0     0    9:r96  l0     0    7:r97  l0     0    4:r98  l0     0
    1:r99  l0     3
+++Costs: overall -7, reg -7, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = brite::Color; _Alloc = std::allocator<brite::Color>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={6d,1u} r1={7d,1u} r2={5d} r4={6d,1u} r5={9d,5u} r6={1d,5u} r7={1d,9u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,4u} r17={6d} r18={4d} r19={4d} r20={1d,12u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u,1e} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} 
;;    total ref usage 374{318d,55u,1e} in 29{25 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85 86 87 88 89 90 94 95 96 97 98
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:159 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 83 [ D.45177 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 94)
                (const_int 16 [0x10])) [0 this_1(D)->_M_impl._M_end_of_storage+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94)
        (nil)))
(insn 8 7 9 2 (set (reg:DI 84 [ D.45178 ])
        (reg/f:DI 83 [ D.45177 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45177 ])
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 85 [ D.45177 ])
        (mem/f/j:DI (reg/f:DI 95) [0 this_1(D)->_M_impl._M_start+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 86 [ D.45178 ])
        (reg/f:DI 85 [ D.45177 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85 [ D.45177 ])
        (nil)))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 87 [ D.45178 ])
                (minus:DI (reg:DI 84 [ D.45178 ])
                    (reg:DI 86 [ D.45178 ])))
            (clobber (reg:CC 17 flags))
        ]) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 264 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 86 [ D.45178 ])
        (expr_list:REG_DEAD (reg:DI 84 [ D.45178 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 96)
                (ashiftrt:DI (reg:DI 87 [ D.45178 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 532 {*ashrdi3_1}
     (expr_list:REG_DEAD (reg:DI 87 [ D.45178 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (div:DI (reg:DI 87 [ D.45178 ])
                    (const_int 4 [0x4]))
                (nil)))))
(insn 14 13 15 2 (set (reg:DI 88 [ D.45178 ])
        (reg:DI 96)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil)))
(insn 15 14 16 2 (set (reg:DI 89 [ D.45179 ])
        (reg:DI 88 [ D.45178 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ D.45178 ])
        (nil)))
(insn 16 15 17 2 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 89 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg/f:DI 90 [ D.45177 ])
        (mem/f/j:DI (reg/f:DI 97) [0 this_1(D)->_M_impl._M_start+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97)
        (nil)))
(insn 18 17 19 2 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:160 89 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:DI 1 dx)
        (reg:DI 89 [ D.45179 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89 [ D.45179 ])
        (nil)))
(insn 20 19 21 2 (set (reg:DI 4 si)
        (reg/f:DI 90 [ D.45177 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.45177 ])
        (nil)))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (reg:DI 98)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98)
        (nil)))
(call_insn 22 21 23 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIN5brite5ColorESaIS1_EE13_M_deallocateEPS1_m") [flags 0x1]  <function_decl 0x103cbf500 _M_deallocate>) [0 _M_deallocate S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:160 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       4 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 91
(note 23 22 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 3 (set (reg/f:DI 91 [ D.45180 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 89 {*movdi_internal}
     (nil))
(insn 25 24 26 3 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.45180 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.45180 ])
        (nil)))
(call_insn 26 25 46 3 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIN5brite5ColorESaIS1_EE12_Vector_implD1Ev") [flags 0x1]  <function_decl 0x103e37a00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 46 26 47 3 (set (pc)
        (label_ref 45)) 636 {jump}
     (nil)
 -> 45)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 47 46 42)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 4 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 92 93 99
(code_label/s 42 47 44 4 266 "" [1 uses])
(note 44 42 43 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 43 44 33 4 (set (reg:DI 99)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 33 43 34 4 (set (reg/f:DI 92 [ D.45180 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 89 {*movdi_internal}
     (nil))
(insn 34 33 35 4 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.45180 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.45180 ])
        (nil)))
(call_insn 35 34 36 4 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIN5brite5ColorESaIS1_EE12_Vector_implD1Ev") [flags 0x1]  <function_decl 0x103e37a00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 36 35 37 4 (set (reg/f:DI 93 [ D.45176 ])
        (reg:DI 99)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99)
        (nil)))
(insn 37 36 38 4 (set (reg:DI 5 di)
        (reg/f:DI 93 [ D.45176 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.45176 ])
        (nil)))
(call_insn 38 37 39 4 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x143165200 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 39 38 45)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 45 39 41 5 267 "" [1 uses])
(note 41 45 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::vector<_Tp, _Alloc>::_M_fill_initialize(std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = brite::Color; _Alloc = std::allocator<brite::Color>; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = brite::Color] (_ZNSt6vectorIN5brite5ColorESaIS1_EE18_M_fill_initializeEmRKS1_, funcdef_no=2100, decl_uid=41367, symbol_order=699)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r88,l0) best DREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r85,l0) best DIREG, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r83,l0) best DIREG, allocno GENERAL_REGS

  a0(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a1(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a2(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a3(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a5(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a6(r84,l0) costs: AREG:0 DREG:0 CREG:-1 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a7(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a8(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 24(l0): point = 0
   Insn 23(l0): point = 2
   Insn 22(l0): point = 4
   Insn 21(l0): point = 6
   Insn 20(l0): point = 8
   Insn 19(l0): point = 10
   Insn 18(l0): point = 12
   Insn 17(l0): point = 14
   Insn 16(l0): point = 16
   Insn 15(l0): point = 18
   Insn 14(l0): point = 20
   Insn 13(l0): point = 22
   Insn 12(l0): point = 24
   Insn 11(l0): point = 26
   Insn 10(l0): point = 28
   Insn 9(l0): point = 30
   Insn 8(l0): point = 32
   Insn 4(l0): point = 34
   Insn 3(l0): point = 36
   Insn 2(l0): point = 38
 a0(r91): [1..2]
 a1(r86): [1..4]
 a2(r90): [5..6]
 a3(r85): [11..22]
 a4(r89): [13..18]
 a5(r88): [15..20]
 a6(r84): [17..26]
 a7(r87): [23..24]
 a8(r83): [31..32]
Compressing live ranges: from 41 to 10 - 24%
Ranges after the compression:
 a0(r91): [0..1]
 a1(r86): [0..1]
 a2(r90): [2..3]
 a3(r85): [4..5]
 a4(r89): [4..5]
 a5(r88): [4..5]
 a6(r84): [4..7]
 a7(r87): [6..7]
 a8(r83): [8..9]
  regions=1, blocks=3, points=10
    allocnos=9 (big 0), copies=0, conflicts=0, ranges=9
Disposition:
    8:r83  l0     0    6:r84  l0     2    3:r85  l0     0    1:r86  l0     1
    7:r87  l0     0    5:r88  l0     1    4:r89  l0     4    2:r90  l0     0
    0:r91  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::vector<_Tp, _Alloc>::_M_fill_initialize(std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = brite::Color; _Alloc = std::allocator<brite::Color>; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = brite::Color]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={3d,1u} r1={4d,2u} r2={4d,1u} r4={4d,2u} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,11u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 205{169d,36u,0e} in 20{18 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85 86 87 88 89 90 91
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1298 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1298 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __value+0 S8 A64])
        (reg:DI 1 dx [ __value ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1298 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __value ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 83 [ D.45181 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1301 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ D.45181 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1301 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45181 ])
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIN5brite5ColorESaIS1_EE19_M_get_Tp_allocatorEv") [flags 0x1]  <function_decl 0x103caf500 _M_get_Tp_allocator>) [0 _M_get_Tp_allocator S1 A8])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1301 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 84 [ D.45182 ])
        (reg:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1301 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1301 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 85 [ D.45183 ])
        (mem/f/j:DI (reg/f:DI 87) [0 this_1(D)->D.41560._M_impl._M_start+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1301 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __value+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1300 89 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 89)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1300 89 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:DI 2 cx)
        (reg/f:DI 84 [ D.45182 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1300 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84 [ D.45182 ])
        (nil)))
(insn 17 16 18 2 (set (reg:DI 1 dx)
        (reg:DI 88)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1300 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(insn 18 17 19 2 (set (reg:DI 4 si)
        (reg:DI 89)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1300 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg/f:DI 85 [ D.45183 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1300 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85 [ D.45183 ])
        (nil)))
(call_insn 20 19 21 2 (call (mem:QI (symbol_ref/i:DI ("_ZSt24__uninitialized_fill_n_aIPN5brite5ColorEmS1_S1_EvT_T0_RKT1_RSaIT2_E") [flags 0x1]  <function_decl 0x103e94400 __uninitialized_fill_n_a>) [0 __uninitialized_fill_n_a S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1300 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 21 20 22 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1302 89 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (reg/f:DI 86 [ D.45183 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 90)
                (const_int 16 [0x10])) [0 this_1(D)->D.41560._M_impl._M_end_of_storage+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1302 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (nil)))
(insn 23 22 24 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1302 89 {*movdi_internal}
     (nil))
(insn 24 23 0 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 91)
                (const_int 8 [0x8])) [0 this_1(D)->D.41560._M_impl._M_finish+0 S8 A64])
        (reg/f:DI 86 [ D.45183 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1302 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (expr_list:REG_DEAD (reg/f:DI 86 [ D.45183 ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = brite::Color; _Alloc = std::allocator<brite::Color>; std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<brite::Color>] (_ZNSt12_Vector_baseIN5brite5ColorESaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=2101, decl_uid=41030, symbol_order=700)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 9(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r84): [3..4]
 a1(r83): [5..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r83  l0     0    0:r84  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = brite::Color; _Alloc = std::allocator<brite::Color>; std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<brite::Color>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r83={1d,1u} r84={1d,1u} 
;;    total ref usage 36{22d,14u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 83 84
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:113 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg/f:DI 83 [ D.45184 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:114 89 {*movdi_internal}
     (nil))
(insn 9 6 13 2 (set (reg:DI 84 [ <retval> ])
        (reg/f:DI 83 [ D.45184 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:114 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45184 ])
        (nil)))
(insn 13 9 14 2 (set (reg/i:DI 0 ax)
        (reg:DI 84 [ <retval> ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:114 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84 [ <retval> ])
        (nil)))
(insn 14 13 0 2 (use (reg/i:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:114 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = brite::Color*; _Tp = brite::Color] (_ZSt8_DestroyIPN5brite5ColorES1_EvT_S3_RSaIT0_E, funcdef_no=2102, decl_uid=42443, symbol_order=701)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best SIREG, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 12(l0): point = 0
   Insn 11(l0): point = 2
   Insn 10(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 4(l0): point = 10
   Insn 3(l0): point = 12
   Insn 2(l0): point = 14
 a0(r84): [3..6]
 a1(r83): [5..8]
Compressing live ranges: from 17 to 2 - 11%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [0..1]
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r83  l0     1    0:r84  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = brite::Color*; _Tp = brite::Color]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d,1u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,7u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} r84={1d,1u} 
;;    total ref usage 111{91d,20u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:148 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __last+0 S8 A64])
        (reg:DI 4 si [ __last ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:148 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 D.42446+0 S8 A64])
        (reg:DI 1 dx [ D.42446 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:148 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ D.42446 ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __last+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:151 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __first+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:151 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 83)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:151 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 84)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:151 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(call_insn 12 11 0 2 (call (mem:QI (symbol_ref/i:DI ("_ZSt8_DestroyIPN5brite5ColorEEvT_S3_") [flags 0x1]  <function_decl 0x103e94600 _Destroy>) [0 _Destroy S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:151 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = int] (_ZN9__gnu_cxx13new_allocatorIiEC2Ev, funcdef_no=2104, decl_uid=32856, symbol_order=703)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 2(l0): point = 0
Compressing live ranges: from 3 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,3u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 28{19d,9u,0e} in 1{1 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:79 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = int] (_ZN9__gnu_cxx13new_allocatorIiED2Ev, funcdef_no=2107, decl_uid=32861, symbol_order=706)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 2(l0): point = 0
Compressing live ranges: from 3 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,3u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 28{19d,9u,0e} in 1{1 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:86 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() (_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD1Ev, funcdef_no=2112, decl_uid=42490, symbol_order=710)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best DIREG, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 8(l0): point = 0
   Insn 7(l0): point = 2
   Insn 6(l0): point = 4
   Insn 2(l0): point = 6
 a0(r83): [3..4]
Compressing live ranges: from 9 to 2 - 22%
Ranges after the compression:
 a0(r83): [0..1]
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1
Disposition:
    0:r83  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} 
;;    total ref usage 102{89d,13u,0e} in 4{3 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:79 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:79 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 83)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:79 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(call_insn 8 7 0 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSaIiED2Ev") [flags 0x1]  <function_decl 0x10380a000 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:79 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::size_t = long unsigned int; std::_Vector_base<_Tp, _Alloc>::allocator_type = std::allocator<int>] (_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_, funcdef_no=2113, decl_uid=34928, symbol_order=712)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 5 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 28.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best SIREG, allocno GENERAL_REGS
    r86: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r86,l0) best SIREG, allocno GENERAL_REGS
    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best DIREG, allocno GENERAL_REGS
    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r83,l0) best DIREG, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a2(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a5(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a6(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 28(l0): point = 1
   Insn 27(l0): point = 3
   Insn 26(l0): point = 5
   Insn 25(l0): point = 7
   Insn 24(l0): point = 9
   Insn 23(l0): point = 11
   Insn 33(l0): point = 13
   Insn 37(l0): point = 16
   Insn 17(l0): point = 19
   Insn 16(l0): point = 21
   Insn 15(l0): point = 23
   Insn 14(l0): point = 25
   Insn 13(l0): point = 27
   Insn 12(l0): point = 29
   Insn 11(l0): point = 31
   Insn 10(l0): point = 33
   Insn 9(l0): point = 35
   Insn 8(l0): point = 37
   Insn 4(l0): point = 39
   Insn 3(l0): point = 41
   Insn 2(l0): point = 43
 a0(r85): [4..5]
 a1(r89): [6..13]
 a2(r84): [10..11]
 a3(r88): [22..25]
 a4(r87): [24..27]
 a5(r83): [32..37]
 a6(r86): [34..35]
Compressing live ranges: from 46 to 8 - 17%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r89): [2..3]
 a2(r84): [2..3]
 a3(r88): [4..5]
 a4(r87): [4..5]
 a5(r83): [6..7]
 a6(r86): [6..7]
  regions=1, blocks=6, points=8
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    5:r83  l0     0    2:r84  l0     0    0:r85  l0     0    6:r86  l0     1
    4:r87  l0     1    3:r88  l0     0    1:r89  l0     3
+++Costs: overall -7, reg -7, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::size_t = long unsigned int; std::_Vector_base<_Tp, _Alloc>::allocator_type = std::allocator<int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={6d,1u} r1={6d,1u} r2={5d} r4={7d,3u} r5={9d,5u} r6={1d,5u} r7={1d,9u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,4u} r17={4d} r18={4d} r19={4d} r20={1d,13u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 354{306d,48u,0e} in 21{17 regular + 4 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 86 87 88
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:134 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:134 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __a+0 S8 A64])
        (reg:DI 1 dx [ __a ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:134 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __a ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 83 [ D.45186 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:135 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __a+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:135 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 86)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:135 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ D.45186 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:135 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45186 ])
        (nil)))
(call_insn 12 11 13 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC1ERKS0_") [flags 0x1]  <function_decl 0x103941700 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:135 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 13 12 14 2 (set (reg:DI 87)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:136 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:136 89 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (reg:DI 87)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:136 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg:DI 88)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:136 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 17 16 35 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm") [flags 0x1]  <function_decl 0x103941d00 _M_create_storage>) [0 _M_create_storage S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:136 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 1 [0x1])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       4 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 35 17 37 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(jump_insn 37 35 38 3 (set (pc)
        (label_ref 36)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:136 636 {jump}
     (nil)
 -> 36)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 38 37 32)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 4 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 84 85 89
(code_label/s 32 38 34 4 279 "" [1 uses])
(note 34 32 33 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 33 34 23 4 (set (reg:DI 89)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 23 33 24 4 (set (reg/f:DI 84 [ D.45186 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:135 89 {*movdi_internal}
     (nil))
(insn 24 23 25 4 (set (reg:DI 5 di)
        (reg/f:DI 84 [ D.45186 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:135 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84 [ D.45186 ])
        (nil)))
(call_insn 25 24 26 4 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD1Ev") [flags 0x1]  <function_decl 0x103e4b800 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:135 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 26 25 27 4 (set (reg/f:DI 85 [ D.45185 ])
        (reg:DI 89)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 27 26 28 4 (set (reg:DI 5 di)
        (reg/f:DI 85 [ D.45185 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85 [ D.45185 ])
        (nil)))
(call_insn 28 27 29 4 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x143165200 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 29 28 36)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 36 29 31 5 280 "" [1 uses])
(note 31 36 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = int; _Alloc = std::allocator<int>] (_ZNSt12_Vector_baseIiSaIiEED2Ev, funcdef_no=2116, decl_uid=34951, symbol_order=715)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 5 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 35.
verify found no changes in insn with uid = 38.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r99: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r99,l0) best AREG, allocno GENERAL_REGS
    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r98,l0) best DIREG, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r93,l0) best DIREG, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r89,l0) best DREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a2(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a3(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a4(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a5(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a6(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a7(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a8(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a9(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a10(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a11(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a12(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a13(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a14(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a15(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a16(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8

   Insn 38(l0): point = 1
   Insn 37(l0): point = 3
   Insn 36(l0): point = 5
   Insn 35(l0): point = 7
   Insn 34(l0): point = 9
   Insn 33(l0): point = 11
   Insn 43(l0): point = 13
   Insn 46(l0): point = 16
   Insn 26(l0): point = 18
   Insn 25(l0): point = 20
   Insn 24(l0): point = 22
   Insn 22(l0): point = 25
   Insn 21(l0): point = 27
   Insn 20(l0): point = 29
   Insn 19(l0): point = 31
   Insn 18(l0): point = 33
   Insn 17(l0): point = 35
   Insn 16(l0): point = 37
   Insn 15(l0): point = 39
   Insn 14(l0): point = 41
   Insn 13(l0): point = 43
   Insn 12(l0): point = 45
   Insn 11(l0): point = 47
   Insn 10(l0): point = 49
   Insn 9(l0): point = 51
   Insn 8(l0): point = 53
   Insn 7(l0): point = 55
   Insn 6(l0): point = 57
   Insn 2(l0): point = 59
 a0(r93): [4..5]
 a1(r99): [6..13]
 a2(r92): [10..11]
 a3(r91): [21..22]
 a4(r98): [28..33]
 a5(r90): [30..35]
 a6(r89): [32..39]
 a7(r97): [36..37]
 a8(r88): [40..41]
 a9(r96): [42..43]
 a10(r87): [44..45]
 a11(r86): [46..47]
 a12(r84): [46..53]
 a13(r85): [48..49]
 a14(r95): [50..51]
 a15(r83): [54..55]
 a16(r94): [56..57]
Compressing live ranges: from 62 to 26 - 41%
Ranges after the compression:
 a0(r93): [0..1]
 a1(r99): [2..3]
 a2(r92): [2..3]
 a3(r91): [4..5]
 a4(r98): [6..7]
 a5(r90): [6..7]
 a6(r89): [6..9]
 a7(r97): [8..9]
 a8(r88): [10..11]
 a9(r96): [12..13]
 a10(r87): [14..15]
 a11(r86): [16..17]
 a12(r84): [16..21]
 a13(r85): [18..19]
 a14(r95): [20..21]
 a15(r83): [22..23]
 a16(r94): [24..25]
  regions=1, blocks=6, points=26
    allocnos=17 (big 0), copies=0, conflicts=0, ranges=17
Disposition:
   15:r83  l0     0   12:r84  l0     1   13:r85  l0     0   11:r86  l0     0
   10:r87  l0     0    8:r88  l0     0    6:r89  l0     1    5:r90  l0     2
    3:r91  l0     0    2:r92  l0     0    0:r93  l0     0   16:r94  l0     0
   14:r95  l0     0    9:r96  l0     0    7:r97  l0     0    4:r98  l0     0
    1:r99  l0     3
+++Costs: overall -7, reg -7, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = int; _Alloc = std::allocator<int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={6d,1u} r1={7d,1u} r2={5d} r4={6d,1u} r5={9d,5u} r6={1d,5u} r7={1d,9u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,4u} r17={6d} r18={4d} r19={4d} r20={1d,12u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u,1e} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} 
;;    total ref usage 374{318d,55u,1e} in 29{25 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85 86 87 88 89 90 94 95 96 97 98
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:159 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 83 [ D.45188 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 94)
                (const_int 16 [0x10])) [0 this_1(D)->_M_impl._M_end_of_storage+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94)
        (nil)))
(insn 8 7 9 2 (set (reg:DI 84 [ D.45189 ])
        (reg/f:DI 83 [ D.45188 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45188 ])
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 85 [ D.45188 ])
        (mem/f/j:DI (reg/f:DI 95) [0 this_1(D)->_M_impl._M_start+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 86 [ D.45189 ])
        (reg/f:DI 85 [ D.45188 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85 [ D.45188 ])
        (nil)))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 87 [ D.45189 ])
                (minus:DI (reg:DI 84 [ D.45189 ])
                    (reg:DI 86 [ D.45189 ])))
            (clobber (reg:CC 17 flags))
        ]) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 264 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 86 [ D.45189 ])
        (expr_list:REG_DEAD (reg:DI 84 [ D.45189 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 96)
                (ashiftrt:DI (reg:DI 87 [ D.45189 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 532 {*ashrdi3_1}
     (expr_list:REG_DEAD (reg:DI 87 [ D.45189 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (div:DI (reg:DI 87 [ D.45189 ])
                    (const_int 4 [0x4]))
                (nil)))))
(insn 14 13 15 2 (set (reg:DI 88 [ D.45189 ])
        (reg:DI 96)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil)))
(insn 15 14 16 2 (set (reg:DI 89 [ D.45190 ])
        (reg:DI 88 [ D.45189 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ D.45189 ])
        (nil)))
(insn 16 15 17 2 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 89 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg/f:DI 90 [ D.45188 ])
        (mem/f/j:DI (reg/f:DI 97) [0 this_1(D)->_M_impl._M_start+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97)
        (nil)))
(insn 18 17 19 2 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:160 89 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:DI 1 dx)
        (reg:DI 89 [ D.45190 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89 [ D.45190 ])
        (nil)))
(insn 20 19 21 2 (set (reg:DI 4 si)
        (reg/f:DI 90 [ D.45188 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.45188 ])
        (nil)))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (reg:DI 98)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98)
        (nil)))
(call_insn 22 21 23 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim") [flags 0x1]  <function_decl 0x103941c00 _M_deallocate>) [0 _M_deallocate S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:160 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       4 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 91
(note 23 22 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 3 (set (reg/f:DI 91 [ D.45191 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 89 {*movdi_internal}
     (nil))
(insn 25 24 26 3 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.45191 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.45191 ])
        (nil)))
(call_insn 26 25 46 3 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD1Ev") [flags 0x1]  <function_decl 0x103e4b800 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 46 26 47 3 (set (pc)
        (label_ref 45)) 636 {jump}
     (nil)
 -> 45)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 47 46 42)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 4 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 92 93 99
(code_label/s 42 47 44 4 284 "" [1 uses])
(note 44 42 43 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 43 44 33 4 (set (reg:DI 99)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 33 43 34 4 (set (reg/f:DI 92 [ D.45191 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 89 {*movdi_internal}
     (nil))
(insn 34 33 35 4 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.45191 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.45191 ])
        (nil)))
(call_insn 35 34 36 4 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD1Ev") [flags 0x1]  <function_decl 0x103e4b800 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:161 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 36 35 37 4 (set (reg/f:DI 93 [ D.45187 ])
        (reg:DI 99)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99)
        (nil)))
(insn 37 36 38 4 (set (reg:DI 5 di)
        (reg/f:DI 93 [ D.45187 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.45187 ])
        (nil)))
(call_insn 38 37 39 4 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x143165200 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 39 38 45)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 45 39 41 5 285 "" [1 uses])
(note 41 45 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::vector<_Tp, _Alloc>::_M_fill_initialize(std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi, funcdef_no=2118, decl_uid=35204, symbol_order=717)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r88,l0) best DREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r85,l0) best DIREG, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r83,l0) best DIREG, allocno GENERAL_REGS

  a0(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a1(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a2(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a3(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a5(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a6(r84,l0) costs: AREG:0 DREG:0 CREG:-1 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a7(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a8(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 24(l0): point = 0
   Insn 23(l0): point = 2
   Insn 22(l0): point = 4
   Insn 21(l0): point = 6
   Insn 20(l0): point = 8
   Insn 19(l0): point = 10
   Insn 18(l0): point = 12
   Insn 17(l0): point = 14
   Insn 16(l0): point = 16
   Insn 15(l0): point = 18
   Insn 14(l0): point = 20
   Insn 13(l0): point = 22
   Insn 12(l0): point = 24
   Insn 11(l0): point = 26
   Insn 10(l0): point = 28
   Insn 9(l0): point = 30
   Insn 8(l0): point = 32
   Insn 4(l0): point = 34
   Insn 3(l0): point = 36
   Insn 2(l0): point = 38
 a0(r91): [1..2]
 a1(r86): [1..4]
 a2(r90): [5..6]
 a3(r85): [11..22]
 a4(r89): [13..18]
 a5(r88): [15..20]
 a6(r84): [17..26]
 a7(r87): [23..24]
 a8(r83): [31..32]
Compressing live ranges: from 41 to 10 - 24%
Ranges after the compression:
 a0(r91): [0..1]
 a1(r86): [0..1]
 a2(r90): [2..3]
 a3(r85): [4..5]
 a4(r89): [4..5]
 a5(r88): [4..5]
 a6(r84): [4..7]
 a7(r87): [6..7]
 a8(r83): [8..9]
  regions=1, blocks=3, points=10
    allocnos=9 (big 0), copies=0, conflicts=0, ranges=9
Disposition:
    8:r83  l0     0    6:r84  l0     2    3:r85  l0     0    1:r86  l0     1
    7:r87  l0     0    5:r88  l0     1    4:r89  l0     4    2:r90  l0     0
    0:r91  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::vector<_Tp, _Alloc>::_M_fill_initialize(std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={3d,1u} r1={4d,2u} r2={4d,1u} r4={4d,2u} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,11u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 205{169d,36u,0e} in 20{18 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85 86 87 88 89 90 91
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1298 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1298 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __value+0 S8 A64])
        (reg:DI 1 dx [ __value ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1298 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __value ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 83 [ D.45192 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1301 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ D.45192 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1301 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45192 ])
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv") [flags 0x1]  <function_decl 0x103926c00 _M_get_Tp_allocator>) [0 _M_get_Tp_allocator S1 A8])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1301 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 84 [ D.45193 ])
        (reg:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1301 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1301 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 85 [ D.45194 ])
        (mem/f/j:DI (reg/f:DI 87) [0 this_1(D)->D.35397._M_impl._M_start+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1301 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __value+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1300 89 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 89)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1300 89 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:DI 2 cx)
        (reg/f:DI 84 [ D.45193 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1300 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84 [ D.45193 ])
        (nil)))
(insn 17 16 18 2 (set (reg:DI 1 dx)
        (reg:DI 88)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1300 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(insn 18 17 19 2 (set (reg:DI 4 si)
        (reg:DI 89)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1300 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg/f:DI 85 [ D.45194 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1300 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85 [ D.45194 ])
        (nil)))
(call_insn 20 19 21 2 (call (mem:QI (symbol_ref/i:DI ("_ZSt24__uninitialized_fill_n_aIPimiiEvT_T0_RKT1_RSaIT2_E") [flags 0x1]  <function_decl 0x103e94700 __uninitialized_fill_n_a>) [0 __uninitialized_fill_n_a S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1300 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 21 20 22 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1302 89 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (reg/f:DI 86 [ D.45194 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 90)
                (const_int 16 [0x10])) [0 this_1(D)->D.35397._M_impl._M_end_of_storage+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1302 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (nil)))
(insn 23 22 24 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1302 89 {*movdi_internal}
     (nil))
(insn 24 23 0 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 91)
                (const_int 8 [0x8])) [0 this_1(D)->D.35397._M_impl._M_finish+0 S8 A64])
        (reg/f:DI 86 [ D.45194 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:1302 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (expr_list:REG_DEAD (reg/f:DI 86 [ D.45194 ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = int; _Alloc = std::allocator<int>; std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<int>] (_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv, funcdef_no=2119, decl_uid=34867, symbol_order=718)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 9(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r84): [3..4]
 a1(r83): [5..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r83  l0     0    0:r84  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = int; _Alloc = std::allocator<int>; std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r83={1d,1u} r84={1d,1u} 
;;    total ref usage 36{22d,14u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 83 84
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:113 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg/f:DI 83 [ D.45195 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:114 89 {*movdi_internal}
     (nil))
(insn 9 6 13 2 (set (reg:DI 84 [ <retval> ])
        (reg/f:DI 83 [ D.45195 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:114 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45195 ])
        (nil)))
(insn 13 9 14 2 (set (reg/i:DI 0 ax)
        (reg:DI 84 [ <retval> ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:114 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84 [ <retval> ])
        (nil)))
(insn 14 13 0 2 (use (reg/i:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:114 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = int*; _Tp = int] (_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E, funcdef_no=2120, decl_uid=42509, symbol_order=719)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best SIREG, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 12(l0): point = 0
   Insn 11(l0): point = 2
   Insn 10(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 4(l0): point = 10
   Insn 3(l0): point = 12
   Insn 2(l0): point = 14
 a0(r84): [3..6]
 a1(r83): [5..8]
Compressing live ranges: from 17 to 2 - 11%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [0..1]
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r83  l0     1    0:r84  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = int*; _Tp = int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d,1u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,7u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} r84={1d,1u} 
;;    total ref usage 111{91d,20u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:148 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __last+0 S8 A64])
        (reg:DI 4 si [ __last ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:148 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 D.42512+0 S8 A64])
        (reg:DI 1 dx [ D.42512 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:148 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ D.42512 ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __last+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:151 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __first+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:151 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 83)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:151 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 84)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:151 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(call_insn 12 11 0 2 (call (mem:QI (symbol_ref/i:DI ("_ZSt8_DestroyIPiEvT_S1_") [flags 0x1]  <function_decl 0x103e94900 _Destroy>) [0 _Destroy S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:151 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::_List_iterator<_Tp>::_List_iterator(std::__detail::_List_node_base*) [with _Tp = brite::Edge*] (_ZNSt14_List_iteratorIPN5brite4EdgeEEC1EPNSt8__detail15_List_node_baseE, funcdef_no=2153, decl_uid=41765, symbol_order=752)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8

   Insn 9(l0): point = 0
   Insn 8(l0): point = 2
   Insn 7(l0): point = 4
   Insn 3(l0): point = 6
   Insn 2(l0): point = 8
 a0(r83): [1..4]
 a1(r84): [1..2]
Compressing live ranges: from 11 to 2 - 18%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r84): [0..1]
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    0:r83  l0     0    1:r84  l0     1
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::_List_iterator<_Tp>::_List_iterator(std::__detail::_List_node_base*) [with _Tp = brite::Edge*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,6u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r83={1d,1u} r84={1d,1u} 
;;    total ref usage 36{21d,15u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83 84
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:140 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __x+0 S8 A64])
        (reg:DI 4 si [ __x ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:140 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __x ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:141 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __x+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:141 89 {*movdi_internal}
     (nil))
(insn 9 8 0 2 (set (mem/f/j:DI (reg/f:DI 83) [0 this_1(D)->_M_node+0 S8 A64])
        (reg/f:DI 84)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_list.h:141 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84)
        (expr_list:REG_DEAD (reg/f:DI 83)
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl(const _Tp_alloc_type&) [with _Tp = brite::Color; _Alloc = std::allocator<brite::Color>; std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<brite::Color>] (_ZNSt12_Vector_baseIN5brite5ColorESaIS1_EE12_Vector_implC1ERKS2_, funcdef_no=2200, decl_uid=41064, symbol_order=799)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r83,l0) best SIREG, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a1(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a2(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a3(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a4(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 17(l0): point = 0
   Insn 16(l0): point = 2
   Insn 15(l0): point = 4
   Insn 14(l0): point = 6
   Insn 13(l0): point = 8
   Insn 12(l0): point = 10
   Insn 11(l0): point = 12
   Insn 10(l0): point = 14
   Insn 9(l0): point = 16
   Insn 8(l0): point = 18
   Insn 7(l0): point = 20
   Insn 3(l0): point = 22
   Insn 2(l0): point = 24
 a0(r87): [1..2]
 a1(r86): [5..6]
 a2(r85): [9..10]
 a3(r84): [15..18]
 a4(r83): [17..20]
Compressing live ranges: from 27 to 8 - 29%
Ranges after the compression:
 a0(r87): [0..1]
 a1(r86): [2..3]
 a2(r85): [4..5]
 a3(r84): [6..7]
 a4(r83): [6..7]
  regions=1, blocks=3, points=8
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    4:r83  l0     1    3:r84  l0     0    2:r85  l0     0    1:r86  l0     0
    0:r87  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl(const _Tp_alloc_type&) [with _Tp = brite::Color; _Alloc = std::allocator<brite::Color>; std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<brite::Color>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,9u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} 
;;    total ref usage 118{94d,24u,0e} in 13{12 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85 86 87
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:90 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __a+0 S8 A64])
        (reg:DI 4 si [ __a ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:90 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __a ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __a+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:91 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:91 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg:DI 83)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:91 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 84)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:91 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(call_insn 11 10 12 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSaIN5brite5ColorEEC2ERKS1_") [flags 0x1]  <function_decl 0x103caa800 __base_ctor >) [0 __base_ctor  S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:91 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 12 11 13 2 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:91 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (mem/f/j:DI (reg/f:DI 85) [0 this_1(D)->_M_start+0 S8 A64])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:91 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85)
        (nil)))
(insn 14 13 15 2 (set (reg/f:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:91 89 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 86)
                (const_int 8 [0x8])) [0 this_1(D)->_M_finish+0 S8 A64])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:91 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 86)
        (nil)))
(insn 16 15 17 2 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:91 89 {*movdi_internal}
     (nil))
(insn 17 16 0 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 87)
                (const_int 16 [0x10])) [0 this_1(D)->_M_end_of_storage+0 S8 A64])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:91 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87)
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::_Vector_base<_Tp, _Alloc>::_M_create_storage(std::size_t) [with _Tp = brite::Color; _Alloc = std::allocator<brite::Color>; std::size_t = long unsigned int] (_ZNSt12_Vector_baseIN5brite5ColorESaIS1_EE17_M_create_storageEm, funcdef_no=2201, decl_uid=41084, symbol_order=800)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r88,l0) best SIREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r83,l0) best AREG, allocno GENERAL_REGS

  a0(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a2(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a3(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a4(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a5(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a6(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a7(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a8(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a9(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a10(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a11(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a12(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 25(l0): point = 0
   Insn 24(l0): point = 2
   Insn 23(l0): point = 4
   Insn 22(l0): point = 6
   Insn 21(l0): point = 8
   Insn 20(l0): point = 10
   Insn 19(l0): point = 12
   Insn 18(l0): point = 14
   Insn 17(l0): point = 16
   Insn 16(l0): point = 18
   Insn 15(l0): point = 20
   Insn 14(l0): point = 22
   Insn 13(l0): point = 24
   Insn 12(l0): point = 26
   Insn 11(l0): point = 28
   Insn 10(l0): point = 30
   Insn 9(l0): point = 32
   Insn 8(l0): point = 34
   Insn 7(l0): point = 36
   Insn 3(l0): point = 38
   Insn 2(l0): point = 40
 a0(r95): [1..2]
 a1(r87): [1..4]
 a2(r86): [5..6]
 a3(r85): [5..10]
 a4(r94): [7..8]
 a5(r93): [11..12]
 a6(r92): [15..16]
 a7(r84): [15..18]
 a8(r91): [19..20]
 a9(r90): [23..24]
 a10(r83): [23..26]
 a11(r89): [31..34]
 a12(r88): [33..36]
Compressing live ranges: from 43 to 16 - 37%
Ranges after the compression:
 a0(r95): [0..1]
 a1(r87): [0..1]
 a2(r86): [2..3]
 a3(r85): [2..5]
 a4(r94): [4..5]
 a5(r93): [6..7]
 a6(r92): [8..9]
 a7(r84): [8..9]
 a8(r91): [10..11]
 a9(r90): [12..13]
 a10(r83): [12..13]
 a11(r89): [14..15]
 a12(r88): [14..15]
  regions=1, blocks=3, points=16
    allocnos=13 (big 0), copies=0, conflicts=0, ranges=13
Disposition:
   10:r83  l0     1    7:r84  l0     1    3:r85  l0     0    2:r86  l0     1
    1:r87  l0     1   12:r88  l0     1   11:r89  l0     0    9:r90  l0     0
    8:r91  l0     0    6:r92  l0     0    5:r93  l0     0    4:r94  l0     1
    0:r95  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::_Vector_base<_Tp, _Alloc>::_M_create_storage(std::size_t) [with _Tp = brite::Color; _Alloc = std::allocator<brite::Color>; std::size_t = long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={3d} r18={1d} r19={1d} r20={1d,12u,1e} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 141{104d,36u,1e} in 21{20 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85 86 87 88 89 90 91 92 93 94 95
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:183 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:183 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 88)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:185 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:185 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg:DI 88)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 89)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIN5brite5ColorESaIS1_EE11_M_allocateEm") [flags 0x1]  <function_decl 0x103cbf400 _M_allocate>) [0 _M_allocate S1 A8])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:185 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 12 11 13 2 (set (reg/f:DI 83 [ D.45196 ])
        (reg:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:185 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (mem/f/j:DI (reg/f:DI 90) [0 this_1(D)->_M_impl._M_start+0 S8 A64])
        (reg/f:DI 83 [ D.45196 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (expr_list:REG_DEAD (reg/f:DI 83 [ D.45196 ])
            (nil))))
(insn 15 14 16 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:186 89 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 84 [ D.45196 ])
        (mem/f/j:DI (reg/f:DI 91) [0 this_1(D)->_M_impl._M_start+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:186 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:186 89 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 92)
                (const_int 8 [0x8])) [0 this_1(D)->_M_impl._M_finish+0 S8 A64])
        (reg/f:DI 84 [ D.45196 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:186 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92)
        (expr_list:REG_DEAD (reg/f:DI 84 [ D.45196 ])
            (nil))))
(insn 19 18 20 2 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:187 89 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (reg/f:DI 85 [ D.45196 ])
        (mem/f/j:DI (reg/f:DI 93) [0 this_1(D)->_M_impl._M_start+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:187 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (nil)))
(insn 21 20 22 2 (set (reg:DI 94)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:187 89 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg:DI 86 [ D.45197 ])
                (ashift:DI (reg:DI 94)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:187 497 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 94)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
                    (const_int 2 [0x2]))
                (nil)))))
(insn 23 22 24 2 (parallel [
            (set (reg/f:DI 87 [ D.45196 ])
                (plus:DI (reg/f:DI 85 [ D.45196 ])
                    (reg:DI 86 [ D.45197 ])))
            (clobber (reg:CC 17 flags))
        ]) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:187 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 86 [ D.45197 ])
        (expr_list:REG_DEAD (reg/f:DI 85 [ D.45196 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 24 23 25 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:187 89 {*movdi_internal}
     (nil))
(insn 25 24 0 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 95)
                (const_int 16 [0x10])) [0 this_1(D)->_M_impl._M_end_of_storage+0 S8 A64])
        (reg/f:DI 87 [ D.45196 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:187 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (expr_list:REG_DEAD (reg/f:DI 87 [ D.45196 ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = brite::Color; _Alloc = std::allocator<brite::Color>; std::_Vector_base<_Tp, _Alloc>::pointer = brite::Color*; std::size_t = long unsigned int] (_ZNSt12_Vector_baseIN5brite5ColorESaIS1_EE13_M_deallocateEPS1_m, funcdef_no=2202, decl_uid=41080, symbol_order=801)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 17.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r85: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r85,l0) best SIREG, allocno GENERAL_REGS
    r84: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r84,l0) best DREG, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best DIREG, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a1(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a2(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 17(l0): point = 1
   Insn 16(l0): point = 3
   Insn 15(l0): point = 5
   Insn 14(l0): point = 7
   Insn 13(l0): point = 9
   Insn 12(l0): point = 11
   Insn 11(l0): point = 13
   Insn 9(l0): point = 16
   Insn 8(l0): point = 18
   Insn 4(l0): point = 20
   Insn 3(l0): point = 22
   Insn 2(l0): point = 24
 a0(r83): [4..13]
 a1(r85): [6..9]
 a2(r84): [8..11]
Compressing live ranges: from 27 to 2 - 7%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r85): [0..1]
 a2(r84): [0..1]
  regions=1, blocks=5, points=2
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    0:r83  l0     0    2:r84  l0     1    1:r85  l0     2
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = brite::Color; _Alloc = std::allocator<brite::Color>; std::_Vector_base<_Tp, _Alloc>::pointer = brite::Color*; std::size_t = long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={2d} r1={3d,2u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,4u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u} r17={2d,1u} r18={1d} r19={1d} r20={1d,11u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} 
;;    total ref usage 127{94d,33u,0e} in 12{11 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:174 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])
        (reg:DI 4 si [ __p ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:174 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __p ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __n+0 S8 A64])
        (reg:DI 1 dx [ __n ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:174 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __n ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:177 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 20)
            (pc))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:177 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 20)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:DI 83 [ D.45198 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:178 89 {*movdi_internal}
     (nil))
(insn 12 11 13 3 (set (reg:DI 84)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:178 89 {*movdi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:178 89 {*movdi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:DI 1 dx)
        (reg:DI 84)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:178 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(insn 15 14 16 3 (set (reg:DI 4 si)
        (reg:DI 85)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:178 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85)
        (nil)))
(insn 16 15 17 3 (set (reg:DI 5 di)
        (reg/f:DI 83 [ D.45198 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:178 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45198 ])
        (nil)))
(call_insn 17 16 20 3 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx14__alloc_traitsISaIN5brite5ColorEEE10deallocateERS3_PS2_m") [flags 0x1]  <function_decl 0x103caaf00 deallocate>) [0 deallocate S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:178 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;;              2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 20 17 21 4 293 "" [1 uses])
(note 21 20 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::__uninitialized_fill_n_a(_ForwardIterator, _Size, const _Tp&, std::allocator<_Tp2>&) [with _ForwardIterator = brite::Color*; _Size = long unsigned int; _Tp = brite::Color; _Tp2 = brite::Color] (_ZSt24__uninitialized_fill_n_aIPN5brite5ColorEmS1_S1_EvT_T0_RKT1_RSaIT2_E, funcdef_no=2203, decl_uid=42747, symbol_order=802)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best DIREG, allocno GENERAL_REGS
    r84: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best SIREG, allocno GENERAL_REGS
    r83: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r83,l0) best DREG, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a2(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 15(l0): point = 0
   Insn 14(l0): point = 2
   Insn 13(l0): point = 4
   Insn 12(l0): point = 6
   Insn 11(l0): point = 8
   Insn 10(l0): point = 10
   Insn 9(l0): point = 12
   Insn 5(l0): point = 14
   Insn 4(l0): point = 16
   Insn 3(l0): point = 18
   Insn 2(l0): point = 20
 a0(r85): [3..8]
 a1(r84): [5..10]
 a2(r83): [7..12]
Compressing live ranges: from 23 to 2 - 8%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r84): [0..1]
 a2(r83): [0..1]
  regions=1, blocks=3, points=2
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    2:r83  l0     1    1:r84  l0     2    0:r85  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::__uninitialized_fill_n_a(_ForwardIterator, _Size, const _Tp&, std::allocator<_Tp2>&) [with _ForwardIterator = brite::Color*; _Size = long unsigned int; _Tp = brite::Color; _Tp2 = brite::Color]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={3d,2u} r2={2d,1u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,9u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} 
;;    total ref usage 118{93d,25u,0e} in 11{10 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:353 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:353 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __x+0 S8 A64])
        (reg:DI 1 dx [ __x ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:353 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __x ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 D.42751+0 S8 A64])
        (reg:DI 2 cx [ D.42751 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:353 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ D.42751 ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __x+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:355 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 84)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:355 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __first+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:355 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 1 dx)
        (reg:DI 83)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:355 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg:DI 84)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:355 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 85)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:355 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85)
        (nil)))
(call_insn 15 14 0 2 (call (mem:QI (symbol_ref/i:DI ("_ZSt20uninitialized_fill_nIPN5brite5ColorEmS1_EvT_T0_RKT1_") [flags 0x1]  <function_decl 0x103ef3c00 uninitialized_fill_n>) [0 uninitialized_fill_n S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:355 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = brite::Color*] (_ZSt8_DestroyIPN5brite5ColorEEvT_S3_, funcdef_no=2204, decl_uid=42759, symbol_order=803)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best SIREG, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 11(l0): point = 0
   Insn 10(l0): point = 2
   Insn 9(l0): point = 4
   Insn 8(l0): point = 6
   Insn 7(l0): point = 8
   Insn 3(l0): point = 10
   Insn 2(l0): point = 12
 a0(r84): [3..6]
 a1(r83): [5..8]
Compressing live ranges: from 15 to 2 - 13%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [0..1]
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r83  l0     1    0:r84  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = brite::Color*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,6u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} r84={1d,1u} 
;;    total ref usage 109{91d,18u,0e} in 7{6 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:122 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __last+0 S8 A64])
        (reg:DI 4 si [ __last ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:122 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __last+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:126 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __first+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:126 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg:DI 83)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:126 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 84)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:126 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(call_insn 11 10 0 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Destroy_auxILb1EE9__destroyIPN5brite5ColorEEEvT_S5_") [flags 0x1]  <function_decl 0x103ef3d00 __destroy>) [0 __destroy S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:126 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl(const _Tp_alloc_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<int>] (_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC1ERKS0_, funcdef_no=2207, decl_uid=34901, symbol_order=806)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r83,l0) best SIREG, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a1(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a2(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a3(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a4(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 17(l0): point = 0
   Insn 16(l0): point = 2
   Insn 15(l0): point = 4
   Insn 14(l0): point = 6
   Insn 13(l0): point = 8
   Insn 12(l0): point = 10
   Insn 11(l0): point = 12
   Insn 10(l0): point = 14
   Insn 9(l0): point = 16
   Insn 8(l0): point = 18
   Insn 7(l0): point = 20
   Insn 3(l0): point = 22
   Insn 2(l0): point = 24
 a0(r87): [1..2]
 a1(r86): [5..6]
 a2(r85): [9..10]
 a3(r84): [15..18]
 a4(r83): [17..20]
Compressing live ranges: from 27 to 8 - 29%
Ranges after the compression:
 a0(r87): [0..1]
 a1(r86): [2..3]
 a2(r85): [4..5]
 a3(r84): [6..7]
 a4(r83): [6..7]
  regions=1, blocks=3, points=8
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    4:r83  l0     1    3:r84  l0     0    2:r85  l0     0    1:r86  l0     0
    0:r87  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl(const _Tp_alloc_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,9u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} 
;;    total ref usage 118{94d,24u,0e} in 13{12 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85 86 87
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:90 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __a+0 S8 A64])
        (reg:DI 4 si [ __a ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:90 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __a ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __a+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:91 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:91 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg:DI 83)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:91 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 84)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:91 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(call_insn 11 10 12 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSaIiEC2ERKS_") [flags 0x1]  <function_decl 0x1037ffc00 __base_ctor >) [0 __base_ctor  S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:91 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 12 11 13 2 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:91 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (mem/f/j:DI (reg/f:DI 85) [0 this_1(D)->_M_start+0 S8 A64])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:91 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85)
        (nil)))
(insn 14 13 15 2 (set (reg/f:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:91 89 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 86)
                (const_int 8 [0x8])) [0 this_1(D)->_M_finish+0 S8 A64])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:91 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 86)
        (nil)))
(insn 16 15 17 2 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:91 89 {*movdi_internal}
     (nil))
(insn 17 16 0 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 87)
                (const_int 16 [0x10])) [0 this_1(D)->_M_end_of_storage+0 S8 A64])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:91 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87)
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::_Vector_base<_Tp, _Alloc>::_M_create_storage(std::size_t) [with _Tp = int; _Alloc = std::allocator<int>; std::size_t = long unsigned int] (_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm, funcdef_no=2208, decl_uid=34921, symbol_order=807)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r88,l0) best SIREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r83,l0) best AREG, allocno GENERAL_REGS

  a0(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a2(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a3(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a4(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a5(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a6(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a7(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a8(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a9(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a10(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a11(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a12(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 25(l0): point = 0
   Insn 24(l0): point = 2
   Insn 23(l0): point = 4
   Insn 22(l0): point = 6
   Insn 21(l0): point = 8
   Insn 20(l0): point = 10
   Insn 19(l0): point = 12
   Insn 18(l0): point = 14
   Insn 17(l0): point = 16
   Insn 16(l0): point = 18
   Insn 15(l0): point = 20
   Insn 14(l0): point = 22
   Insn 13(l0): point = 24
   Insn 12(l0): point = 26
   Insn 11(l0): point = 28
   Insn 10(l0): point = 30
   Insn 9(l0): point = 32
   Insn 8(l0): point = 34
   Insn 7(l0): point = 36
   Insn 3(l0): point = 38
   Insn 2(l0): point = 40
 a0(r95): [1..2]
 a1(r87): [1..4]
 a2(r86): [5..6]
 a3(r85): [5..10]
 a4(r94): [7..8]
 a5(r93): [11..12]
 a6(r92): [15..16]
 a7(r84): [15..18]
 a8(r91): [19..20]
 a9(r90): [23..24]
 a10(r83): [23..26]
 a11(r89): [31..34]
 a12(r88): [33..36]
Compressing live ranges: from 43 to 16 - 37%
Ranges after the compression:
 a0(r95): [0..1]
 a1(r87): [0..1]
 a2(r86): [2..3]
 a3(r85): [2..5]
 a4(r94): [4..5]
 a5(r93): [6..7]
 a6(r92): [8..9]
 a7(r84): [8..9]
 a8(r91): [10..11]
 a9(r90): [12..13]
 a10(r83): [12..13]
 a11(r89): [14..15]
 a12(r88): [14..15]
  regions=1, blocks=3, points=16
    allocnos=13 (big 0), copies=0, conflicts=0, ranges=13
Disposition:
   10:r83  l0     1    7:r84  l0     1    3:r85  l0     0    2:r86  l0     1
    1:r87  l0     1   12:r88  l0     1   11:r89  l0     0    9:r90  l0     0
    8:r91  l0     0    6:r92  l0     0    5:r93  l0     0    4:r94  l0     1
    0:r95  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::_Vector_base<_Tp, _Alloc>::_M_create_storage(std::size_t) [with _Tp = int; _Alloc = std::allocator<int>; std::size_t = long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={3d} r18={1d} r19={1d} r20={1d,12u,1e} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 141{104d,36u,1e} in 21{20 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85 86 87 88 89 90 91 92 93 94 95
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:183 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:183 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 88)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:185 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:185 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg:DI 88)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 89)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm") [flags 0x1]  <function_decl 0x103941b00 _M_allocate>) [0 _M_allocate S1 A8])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:185 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 12 11 13 2 (set (reg/f:DI 83 [ D.45199 ])
        (reg:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:185 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (mem/f/j:DI (reg/f:DI 90) [0 this_1(D)->_M_impl._M_start+0 S8 A64])
        (reg/f:DI 83 [ D.45199 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (expr_list:REG_DEAD (reg/f:DI 83 [ D.45199 ])
            (nil))))
(insn 15 14 16 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:186 89 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 84 [ D.45199 ])
        (mem/f/j:DI (reg/f:DI 91) [0 this_1(D)->_M_impl._M_start+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:186 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:186 89 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 92)
                (const_int 8 [0x8])) [0 this_1(D)->_M_impl._M_finish+0 S8 A64])
        (reg/f:DI 84 [ D.45199 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:186 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92)
        (expr_list:REG_DEAD (reg/f:DI 84 [ D.45199 ])
            (nil))))
(insn 19 18 20 2 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:187 89 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (reg/f:DI 85 [ D.45199 ])
        (mem/f/j:DI (reg/f:DI 93) [0 this_1(D)->_M_impl._M_start+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:187 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (nil)))
(insn 21 20 22 2 (set (reg:DI 94)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:187 89 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg:DI 86 [ D.45200 ])
                (ashift:DI (reg:DI 94)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:187 497 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 94)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
                    (const_int 2 [0x2]))
                (nil)))))
(insn 23 22 24 2 (parallel [
            (set (reg/f:DI 87 [ D.45199 ])
                (plus:DI (reg/f:DI 85 [ D.45199 ])
                    (reg:DI 86 [ D.45200 ])))
            (clobber (reg:CC 17 flags))
        ]) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:187 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 86 [ D.45200 ])
        (expr_list:REG_DEAD (reg/f:DI 85 [ D.45199 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 24 23 25 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:187 89 {*movdi_internal}
     (nil))
(insn 25 24 0 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 95)
                (const_int 16 [0x10])) [0 this_1(D)->_M_impl._M_end_of_storage+0 S8 A64])
        (reg/f:DI 87 [ D.45199 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:187 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (expr_list:REG_DEAD (reg/f:DI 87 [ D.45199 ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = int; _Alloc = std::allocator<int>; std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::size_t = long unsigned int] (_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim, funcdef_no=2209, decl_uid=34917, symbol_order=808)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 17.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r85: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r85,l0) best SIREG, allocno GENERAL_REGS
    r84: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r84,l0) best DREG, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best DIREG, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a1(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a2(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 17(l0): point = 1
   Insn 16(l0): point = 3
   Insn 15(l0): point = 5
   Insn 14(l0): point = 7
   Insn 13(l0): point = 9
   Insn 12(l0): point = 11
   Insn 11(l0): point = 13
   Insn 9(l0): point = 16
   Insn 8(l0): point = 18
   Insn 4(l0): point = 20
   Insn 3(l0): point = 22
   Insn 2(l0): point = 24
 a0(r83): [4..13]
 a1(r85): [6..9]
 a2(r84): [8..11]
Compressing live ranges: from 27 to 2 - 7%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r85): [0..1]
 a2(r84): [0..1]
  regions=1, blocks=5, points=2
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    0:r83  l0     0    2:r84  l0     1    1:r85  l0     2
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = int; _Alloc = std::allocator<int>; std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::size_t = long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={2d} r1={3d,2u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,4u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u} r17={2d,1u} r18={1d} r19={1d} r20={1d,11u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} 
;;    total ref usage 127{94d,33u,0e} in 12{11 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:174 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])
        (reg:DI 4 si [ __p ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:174 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __p ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __n+0 S8 A64])
        (reg:DI 1 dx [ __n ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:174 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __n ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:177 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 20)
            (pc))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:177 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 20)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:DI 83 [ D.45201 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:178 89 {*movdi_internal}
     (nil))
(insn 12 11 13 3 (set (reg:DI 84)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:178 89 {*movdi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:178 89 {*movdi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:DI 1 dx)
        (reg:DI 84)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:178 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(insn 15 14 16 3 (set (reg:DI 4 si)
        (reg:DI 85)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:178 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85)
        (nil)))
(insn 16 15 17 3 (set (reg:DI 5 di)
        (reg/f:DI 83 [ D.45201 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:178 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45201 ])
        (nil)))
(call_insn 17 16 20 3 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx14__alloc_traitsISaIiEE10deallocateERS1_Pim") [flags 0x1]  <function_decl 0x103926600 deallocate>) [0 deallocate S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:178 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;;              2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 20 17 21 4 299 "" [1 uses])
(note 21 20 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::__uninitialized_fill_n_a(_ForwardIterator, _Size, const _Tp&, std::allocator<_Tp2>&) [with _ForwardIterator = int*; _Size = long unsigned int; _Tp = int; _Tp2 = int] (_ZSt24__uninitialized_fill_n_aIPimiiEvT_T0_RKT1_RSaIT2_E, funcdef_no=2210, decl_uid=42793, symbol_order=809)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best DIREG, allocno GENERAL_REGS
    r84: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best SIREG, allocno GENERAL_REGS
    r83: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r83,l0) best DREG, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a2(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 15(l0): point = 0
   Insn 14(l0): point = 2
   Insn 13(l0): point = 4
   Insn 12(l0): point = 6
   Insn 11(l0): point = 8
   Insn 10(l0): point = 10
   Insn 9(l0): point = 12
   Insn 5(l0): point = 14
   Insn 4(l0): point = 16
   Insn 3(l0): point = 18
   Insn 2(l0): point = 20
 a0(r85): [3..8]
 a1(r84): [5..10]
 a2(r83): [7..12]
Compressing live ranges: from 23 to 2 - 8%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r84): [0..1]
 a2(r83): [0..1]
  regions=1, blocks=3, points=2
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    2:r83  l0     1    1:r84  l0     2    0:r85  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::__uninitialized_fill_n_a(_ForwardIterator, _Size, const _Tp&, std::allocator<_Tp2>&) [with _ForwardIterator = int*; _Size = long unsigned int; _Tp = int; _Tp2 = int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={3d,2u} r2={2d,1u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,9u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} 
;;    total ref usage 118{93d,25u,0e} in 11{10 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:353 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:353 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __x+0 S8 A64])
        (reg:DI 1 dx [ __x ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:353 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __x ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 D.42797+0 S8 A64])
        (reg:DI 2 cx [ D.42797 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:353 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ D.42797 ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __x+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:355 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 84)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:355 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __first+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:355 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 1 dx)
        (reg:DI 83)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:355 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg:DI 84)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:355 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 85)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:355 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85)
        (nil)))
(call_insn 15 14 0 2 (call (mem:QI (symbol_ref/i:DI ("_ZSt20uninitialized_fill_nIPimiEvT_T0_RKT1_") [flags 0x1]  <function_decl 0x103ef3e00 uninitialized_fill_n>) [0 uninitialized_fill_n S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:355 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = int*] (_ZSt8_DestroyIPiEvT_S1_, funcdef_no=2211, decl_uid=42805, symbol_order=810)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best SIREG, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 11(l0): point = 0
   Insn 10(l0): point = 2
   Insn 9(l0): point = 4
   Insn 8(l0): point = 6
   Insn 7(l0): point = 8
   Insn 3(l0): point = 10
   Insn 2(l0): point = 12
 a0(r84): [3..6]
 a1(r83): [5..8]
Compressing live ranges: from 15 to 2 - 13%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [0..1]
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r83  l0     1    0:r84  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,6u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} r84={1d,1u} 
;;    total ref usage 109{91d,18u,0e} in 7{6 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:122 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __last+0 S8 A64])
        (reg:DI 4 si [ __last ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:122 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __last+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:126 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __first+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:126 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg:DI 83)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:126 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 84)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:126 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(call_insn 11 10 0 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_") [flags 0x1]  <function_decl 0x103ef3f00 __destroy>) [0 __destroy S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:126 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = int] (_ZNSaIiEC2ERKS_, funcdef_no=2244, decl_uid=32914, symbol_order=843)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best SIREG, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 11(l0): point = 0
   Insn 10(l0): point = 2
   Insn 9(l0): point = 4
   Insn 8(l0): point = 6
   Insn 7(l0): point = 8
   Insn 3(l0): point = 10
   Insn 2(l0): point = 12
 a0(r84): [3..6]
 a1(r83): [5..8]
Compressing live ranges: from 15 to 2 - 13%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [0..1]
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r83  l0     1    0:r84  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,6u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} r84={1d,1u} 
;;    total ref usage 109{91d,18u,0e} in 7{6 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:115 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __a+0 S8 A64])
        (reg:DI 4 si [ __a ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:115 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __a ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __a+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:116 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:116 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg:DI 83)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:116 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 84)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:116 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(call_insn 11 10 0 2 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_") [flags 0x1]  <function_decl 0x1037fbe00 __base_ctor >) [0 __base_ctor  S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:116 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = brite::Color] (_ZNSaIN5brite5ColorEEC2ERKS1_, funcdef_no=2248, decl_uid=40961, symbol_order=847)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best SIREG, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 11(l0): point = 0
   Insn 10(l0): point = 2
   Insn 9(l0): point = 4
   Insn 8(l0): point = 6
   Insn 7(l0): point = 8
   Insn 3(l0): point = 10
   Insn 2(l0): point = 12
 a0(r84): [3..6]
 a1(r83): [5..8]
Compressing live ranges: from 15 to 2 - 13%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [0..1]
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r83  l0     1    0:r84  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = brite::Color]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,6u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} r84={1d,1u} 
;;    total ref usage 109{91d,18u,0e} in 7{6 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:115 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __a+0 S8 A64])
        (reg:DI 4 si [ __a ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:115 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __a ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __a+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:116 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:116 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg:DI 83)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:116 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 84)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:116 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(call_insn 11 10 0 2 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx13new_allocatorIN5brite5ColorEEC2ERKS3_") [flags 0x1]  <function_decl 0x103c9da00 __base_ctor >) [0 __base_ctor  S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/allocator.h:116 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = brite::Color; _Alloc = std::allocator<brite::Color>; std::_Vector_base<_Tp, _Alloc>::pointer = brite::Color*; std::size_t = long unsigned int] (_ZNSt12_Vector_baseIN5brite5ColorESaIS1_EE11_M_allocateEm, funcdef_no=2250, decl_uid=41077, symbol_order=849)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r86: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r86,l0) best SIREG, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best AREG, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:24 SSE_REGS:24 ALL_SSE_REGS:24 MMX_REGS:29 FP_TOP_SSE_REGS:408 FP_SECOND_SSE_REGS:408 FLOAT_SSE_REGS:408 FLOAT_INT_REGS:408 INT_SSE_REGS:25 FLOAT_INT_SSE_REGS:408 ALL_REGS:408 MEM:5
  a2(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a3(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 30(l0): point = 0
   Insn 29(l0): point = 2
   Insn 25(l0): point = 4
   Insn 20(l0): point = 7
   Insn 32(l0): point = 10
   Insn 15(l0): point = 12
   Insn 14(l0): point = 14
   Insn 13(l0): point = 16
   Insn 12(l0): point = 18
   Insn 11(l0): point = 20
   Insn 10(l0): point = 22
   Insn 8(l0): point = 25
   Insn 7(l0): point = 27
   Insn 3(l0): point = 29
   Insn 2(l0): point = 31
 a0(r85): [3..4]
 a1(r83): [10..12] [5..7]
 a2(r84): [17..22]
 a3(r86): [19..20]
Compressing live ranges: from 34 to 8 - 23%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r83): [2..5]
 a2(r84): [6..7]
 a3(r86): [6..7]
  regions=1, blocks=6, points=8
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    1:r83  l0     0    2:r84  l0     0    0:r85  l0     0    3:r86  l0     1
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = brite::Color; _Alloc = std::allocator<brite::Color>; std::_Vector_base<_Tp, _Alloc>::pointer = brite::Color*; std::size_t = long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,5u} r7={1d,6u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={2d,1u} r18={1d} r19={1d} r20={1d,10u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={2d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} 
;;    total ref usage 133{96d,37u,0e} in 15{14 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:167 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:167 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:170 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:170 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 18)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 86
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:DI 84 [ D.45203 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:170 89 {*movdi_internal}
     (nil))
(insn 11 10 12 3 (set (reg:DI 86)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:170 89 {*movdi_internal}
     (nil))
(insn 12 11 13 3 (set (reg:DI 4 si)
        (reg:DI 86)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:170 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(insn 13 12 14 3 (set (reg:DI 5 di)
        (reg/f:DI 84 [ D.45203 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:170 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84 [ D.45203 ])
        (nil)))
(call_insn 14 13 15 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx14__alloc_traitsISaIN5brite5ColorEEE8allocateERS3_m") [flags 0x1]  <function_decl 0x103caae00 allocate>) [0 allocate S1 A8])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:170 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 15 14 32 3 (set (reg/f:DI 83 [ D.45202 ])
        (reg:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:170 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(jump_insn 32 15 33 3 (set (pc)
        (label_ref 21)) 636 {jump}
     (nil)
 -> 21)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 33 32 18)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(code_label 18 33 19 4 306 "" [1 uses])
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg/f:DI 83 [ D.45202 ])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:170 89 {*movdi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  def 	 0 [ax] 85
(code_label 21 20 22 5 307 "" [1 uses])
(note 22 21 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 22 29 5 (set (reg:DI 85 [ <retval> ])
        (reg/f:DI 83 [ D.45202 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:170 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45202 ])
        (nil)))
(insn 29 25 30 5 (set (reg/i:DI 0 ax)
        (reg:DI 85 [ <retval> ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:171 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85 [ <retval> ])
        (nil)))
(insn 30 29 0 5 (use (reg/i:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:171 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static void __gnu_cxx::__alloc_traits<_Alloc>::deallocate(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, __gnu_cxx::__alloc_traits<_Alloc>::size_type) [with _Alloc = std::allocator<brite::Color>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = brite::Color*; __gnu_cxx::__alloc_traits<_Alloc>::size_type = long unsigned int] (_ZN9__gnu_cxx14__alloc_traitsISaIN5brite5ColorEEE10deallocateERS3_PS2_m, funcdef_no=2251, decl_uid=40983, symbol_order=850)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best DIREG, allocno GENERAL_REGS
    r84: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best SIREG, allocno GENERAL_REGS
    r83: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r83,l0) best DREG, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a2(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 12(l0): point = 4
   Insn 11(l0): point = 6
   Insn 10(l0): point = 8
   Insn 9(l0): point = 10
   Insn 8(l0): point = 12
   Insn 4(l0): point = 14
   Insn 3(l0): point = 16
   Insn 2(l0): point = 18
 a0(r85): [3..8]
 a1(r84): [5..10]
 a2(r83): [7..12]
Compressing live ranges: from 21 to 2 - 9%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r84): [0..1]
 a2(r83): [0..1]
  regions=1, blocks=3, points=2
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    2:r83  l0     1    1:r84  l0     2    0:r85  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static void __gnu_cxx::__alloc_traits<_Alloc>::deallocate(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, __gnu_cxx::__alloc_traits<_Alloc>::size_type) [with _Alloc = std::allocator<brite::Color>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = brite::Color*; __gnu_cxx::__alloc_traits<_Alloc>::size_type = long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={3d,2u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,8u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} 
;;    total ref usage 116{93d,23u,0e} in 10{9 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])
        (reg:DI 5 di [ __a ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:184 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __a ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])
        (reg:DI 4 si [ __p ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:184 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __p ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __n+0 S8 A64])
        (reg:DI 1 dx [ __n ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:184 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __n ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 83)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:185 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:185 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:185 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 1 dx)
        (reg:DI 83)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (reg:DI 84)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 85)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85)
        (nil)))
(call_insn 14 13 0 2 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx13new_allocatorIN5brite5ColorEE10deallocateEPS2_m") [flags 0x1]  <function_decl 0x103c9d300 deallocate>) [0 deallocate S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:185 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::uninitialized_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = brite::Color*; _Size = long unsigned int; _Tp = brite::Color] (_ZSt20uninitialized_fill_nIPN5brite5ColorEmS1_EvT_T0_RKT1_, funcdef_no=2252, decl_uid=42995, symbol_order=851)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best DIREG, allocno GENERAL_REGS
    r84: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best SIREG, allocno GENERAL_REGS
    r83: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r83,l0) best DREG, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a2(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 15(l0): point = 0
   Insn 14(l0): point = 2
   Insn 13(l0): point = 4
   Insn 12(l0): point = 6
   Insn 11(l0): point = 8
   Insn 10(l0): point = 10
   Insn 9(l0): point = 12
   Insn 8(l0): point = 14
   Insn 4(l0): point = 16
   Insn 3(l0): point = 18
   Insn 2(l0): point = 20
 a0(r85): [3..8]
 a1(r84): [5..10]
 a2(r83): [7..12]
Compressing live ranges: from 23 to 2 - 8%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r84): [0..1]
 a2(r83): [0..1]
  regions=1, blocks=3, points=2
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    2:r83  l0     1    1:r84  l0     2    0:r85  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::uninitialized_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = brite::Color*; _Size = long unsigned int; _Tp = brite::Color]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={3d,2u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,9u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} 
;;    total ref usage 117{93d,24u,0e} in 11{10 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __x+0 S8 A64])
        (reg:DI 1 dx [ __x ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __x ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -1 [0xffffffffffffffff])) [0 __assignable+0 S1 A8])
        (const_int 1 [0x1])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:238 93 {*movqi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __x+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:244 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 84)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:244 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __first+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:244 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 1 dx)
        (reg:DI 83)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:244 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg:DI 84)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:244 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 85)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:244 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85)
        (nil)))
(call_insn 15 14 0 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPN5brite5ColorEmS3_EEvT_T0_RKT1_") [flags 0x1]  <function_decl 0x103f1fc00 __uninit_fill_n>) [0 __uninit_fill_n S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:244 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static void std::_Destroy_aux<true>::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = brite::Color*] (_ZNSt12_Destroy_auxILb1EE9__destroyIPN5brite5ColorEEEvT_S5_, funcdef_no=2253, decl_uid=43009, symbol_order=852)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 3(l0): point = 0
   Insn 2(l0): point = 2
Compressing live ranges: from 5 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static void std::_Destroy_aux<true>::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = brite::Color*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 30{19d,11u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 D.43010+0 S8 A64])
        (reg:DI 5 di [ D.43010 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:112 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ D.43010 ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 D.43011+0 S8 A64])
        (reg:DI 4 si [ D.43011 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:112 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ D.43011 ])
        (nil)))
(note 4 3 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = int; _Alloc = std::allocator<int>; std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::size_t = long unsigned int] (_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm, funcdef_no=2254, decl_uid=34914, symbol_order=853)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r86: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r86,l0) best SIREG, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best AREG, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:24 SSE_REGS:24 ALL_SSE_REGS:24 MMX_REGS:29 FP_TOP_SSE_REGS:408 FP_SECOND_SSE_REGS:408 FLOAT_SSE_REGS:408 FLOAT_INT_REGS:408 INT_SSE_REGS:25 FLOAT_INT_SSE_REGS:408 ALL_REGS:408 MEM:5
  a2(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a3(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 30(l0): point = 0
   Insn 29(l0): point = 2
   Insn 25(l0): point = 4
   Insn 20(l0): point = 7
   Insn 32(l0): point = 10
   Insn 15(l0): point = 12
   Insn 14(l0): point = 14
   Insn 13(l0): point = 16
   Insn 12(l0): point = 18
   Insn 11(l0): point = 20
   Insn 10(l0): point = 22
   Insn 8(l0): point = 25
   Insn 7(l0): point = 27
   Insn 3(l0): point = 29
   Insn 2(l0): point = 31
 a0(r85): [3..4]
 a1(r83): [10..12] [5..7]
 a2(r84): [17..22]
 a3(r86): [19..20]
Compressing live ranges: from 34 to 8 - 23%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r83): [2..5]
 a2(r84): [6..7]
 a3(r86): [6..7]
  regions=1, blocks=6, points=8
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    1:r83  l0     0    2:r84  l0     0    0:r85  l0     0    3:r86  l0     1
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = int; _Alloc = std::allocator<int>; std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::size_t = long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,5u} r7={1d,6u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={2d,1u} r18={1d} r19={1d} r20={1d,10u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={2d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} 
;;    total ref usage 133{96d,37u,0e} in 15{14 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:167 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:167 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:170 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:170 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 18)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 86
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:DI 84 [ D.45205 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:170 89 {*movdi_internal}
     (nil))
(insn 11 10 12 3 (set (reg:DI 86)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:170 89 {*movdi_internal}
     (nil))
(insn 12 11 13 3 (set (reg:DI 4 si)
        (reg:DI 86)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:170 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(insn 13 12 14 3 (set (reg:DI 5 di)
        (reg/f:DI 84 [ D.45205 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:170 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84 [ D.45205 ])
        (nil)))
(call_insn 14 13 15 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx14__alloc_traitsISaIiEE8allocateERS1_m") [flags 0x1]  <function_decl 0x103926500 allocate>) [0 allocate S1 A8])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:170 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 15 14 32 3 (set (reg/f:DI 83 [ D.45204 ])
        (reg:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:170 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(jump_insn 32 15 33 3 (set (pc)
        (label_ref 21)) 636 {jump}
     (nil)
 -> 21)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 33 32 18)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(code_label 18 33 19 4 313 "" [1 uses])
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg/f:DI 83 [ D.45204 ])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:170 89 {*movdi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  def 	 0 [ax] 85
(code_label 21 20 22 5 314 "" [1 uses])
(note 22 21 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 22 29 5 (set (reg:DI 85 [ <retval> ])
        (reg/f:DI 83 [ D.45204 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:170 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45204 ])
        (nil)))
(insn 29 25 30 5 (set (reg/i:DI 0 ax)
        (reg:DI 85 [ <retval> ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:171 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85 [ <retval> ])
        (nil)))
(insn 30 29 0 5 (use (reg/i:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_vector.h:171 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static void __gnu_cxx::__alloc_traits<_Alloc>::deallocate(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, __gnu_cxx::__alloc_traits<_Alloc>::size_type) [with _Alloc = std::allocator<int>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = int*; __gnu_cxx::__alloc_traits<_Alloc>::size_type = long unsigned int] (_ZN9__gnu_cxx14__alloc_traitsISaIiEE10deallocateERS1_Pim, funcdef_no=2255, decl_uid=34826, symbol_order=854)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best DIREG, allocno GENERAL_REGS
    r84: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best SIREG, allocno GENERAL_REGS
    r83: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r83,l0) best DREG, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a2(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 12(l0): point = 4
   Insn 11(l0): point = 6
   Insn 10(l0): point = 8
   Insn 9(l0): point = 10
   Insn 8(l0): point = 12
   Insn 4(l0): point = 14
   Insn 3(l0): point = 16
   Insn 2(l0): point = 18
 a0(r85): [3..8]
 a1(r84): [5..10]
 a2(r83): [7..12]
Compressing live ranges: from 21 to 2 - 9%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r84): [0..1]
 a2(r83): [0..1]
  regions=1, blocks=3, points=2
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    2:r83  l0     1    1:r84  l0     2    0:r85  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static void __gnu_cxx::__alloc_traits<_Alloc>::deallocate(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, __gnu_cxx::__alloc_traits<_Alloc>::size_type) [with _Alloc = std::allocator<int>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = int*; __gnu_cxx::__alloc_traits<_Alloc>::size_type = long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={3d,2u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,8u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} 
;;    total ref usage 116{93d,23u,0e} in 10{9 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])
        (reg:DI 5 di [ __a ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:184 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __a ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])
        (reg:DI 4 si [ __p ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:184 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __p ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __n+0 S8 A64])
        (reg:DI 1 dx [ __n ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:184 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __n ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 83)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:185 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:185 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:185 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 1 dx)
        (reg:DI 83)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (reg:DI 84)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 85)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85)
        (nil)))
(call_insn 14 13 0 2 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim") [flags 0x1]  <function_decl 0x1037fb700 deallocate>) [0 deallocate S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:185 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::uninitialized_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = int*; _Size = long unsigned int; _Tp = int] (_ZSt20uninitialized_fill_nIPimiEvT_T0_RKT1_, funcdef_no=2256, decl_uid=43019, symbol_order=855)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best DIREG, allocno GENERAL_REGS
    r84: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best SIREG, allocno GENERAL_REGS
    r83: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r83,l0) best DREG, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a2(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 15(l0): point = 0
   Insn 14(l0): point = 2
   Insn 13(l0): point = 4
   Insn 12(l0): point = 6
   Insn 11(l0): point = 8
   Insn 10(l0): point = 10
   Insn 9(l0): point = 12
   Insn 8(l0): point = 14
   Insn 4(l0): point = 16
   Insn 3(l0): point = 18
   Insn 2(l0): point = 20
 a0(r85): [3..8]
 a1(r84): [5..10]
 a2(r83): [7..12]
Compressing live ranges: from 23 to 2 - 8%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r84): [0..1]
 a2(r83): [0..1]
  regions=1, blocks=3, points=2
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    2:r83  l0     1    1:r84  l0     2    0:r85  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::uninitialized_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = int*; _Size = long unsigned int; _Tp = int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={3d,2u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,9u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} 
;;    total ref usage 117{93d,24u,0e} in 11{10 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __x+0 S8 A64])
        (reg:DI 1 dx [ __x ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __x ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -1 [0xffffffffffffffff])) [0 __assignable+0 S1 A8])
        (const_int 1 [0x1])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:238 93 {*movqi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __x+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:244 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 84)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:244 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __first+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:244 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 1 dx)
        (reg:DI 83)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:244 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg:DI 84)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:244 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 85)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:244 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85)
        (nil)))
(call_insn 15 14 0 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEEvT_T0_RKT1_") [flags 0x1]  <function_decl 0x103f1fd00 __uninit_fill_n>) [0 __uninit_fill_n S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:244 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static void std::_Destroy_aux<true>::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = int*] (_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_, funcdef_no=2257, decl_uid=43033, symbol_order=856)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 3(l0): point = 0
   Insn 2(l0): point = 2
Compressing live ranges: from 5 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static void std::_Destroy_aux<true>::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 30{19d,11u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 D.43034+0 S8 A64])
        (reg:DI 5 di [ D.43034 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:112 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ D.43034 ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 D.43035+0 S8 A64])
        (reg:DI 4 si [ D.43035 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_construct.h:112 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ D.43035 ])
        (nil)))
(note 4 3 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function __gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = int] (_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_, funcdef_no=2272, decl_uid=32851, symbol_order=871)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 3(l0): point = 0
   Insn 2(l0): point = 2
Compressing live ranges: from 5 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


__gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 30{19d,11u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:81 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 D.32853+0 S8 A64])
        (reg:DI 4 si [ D.32853 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:81 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ D.32853 ])
        (nil)))
(note 4 3 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function __gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = brite::Color] (_ZN9__gnu_cxx13new_allocatorIN5brite5ColorEEC2ERKS3_, funcdef_no=2275, decl_uid=40898, symbol_order=874)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 3(l0): point = 0
   Insn 2(l0): point = 2
Compressing live ranges: from 5 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


__gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = brite::Color]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 30{19d,11u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:81 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 D.40900+0 S8 A64])
        (reg:DI 4 si [ D.40900 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:81 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ D.40900 ])
        (nil)))
(note 4 3 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static __gnu_cxx::__alloc_traits<_Alloc>::pointer __gnu_cxx::__alloc_traits<_Alloc>::allocate(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::size_type) [with _Alloc = std::allocator<brite::Color>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = brite::Color*; __gnu_cxx::__alloc_traits<_Alloc>::size_type = long unsigned int] (_ZN9__gnu_cxx14__alloc_traitsISaIN5brite5ColorEEE8allocateERS3_m, funcdef_no=2277, decl_uid=40980, symbol_order=876)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r86: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r86,l0) best DIREG, allocno GENERAL_REGS
    r85: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r85,l0) best SIREG, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best AREG, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a2(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a3(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 21(l0): point = 0
   Insn 20(l0): point = 2
   Insn 16(l0): point = 4
   Insn 13(l0): point = 6
   Insn 12(l0): point = 8
   Insn 11(l0): point = 10
   Insn 10(l0): point = 12
   Insn 9(l0): point = 14
   Insn 8(l0): point = 16
   Insn 7(l0): point = 18
   Insn 3(l0): point = 20
   Insn 2(l0): point = 22
 a0(r84): [3..4]
 a1(r83): [5..6]
 a2(r86): [11..16]
 a3(r85): [13..18]
Compressing live ranges: from 25 to 6 - 24%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
 a2(r86): [4..5]
 a3(r85): [4..5]
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    1:r83  l0     0    0:r84  l0     0    3:r85  l0     2    2:r86  l0     0
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static __gnu_cxx::__alloc_traits<_Alloc>::pointer __gnu_cxx::__alloc_traits<_Alloc>::allocate(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::size_type) [with _Alloc = std::allocator<brite::Color>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = brite::Color*; __gnu_cxx::__alloc_traits<_Alloc>::size_type = long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={3d,3u} r1={3d,1u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,6u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} 
;;    total ref usage 119{95d,24u,0e} in 12{11 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85 86
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])
        (reg:DI 5 di [ __a ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:181 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __a ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:181 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 85)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:182 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:182 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 1 dx)
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:182 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 85)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:182 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 86)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:182 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(call_insn 12 11 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx13new_allocatorIN5brite5ColorEE8allocateEmPKv") [flags 0x1]  <function_decl 0x103c9d200 allocate>) [0 allocate S1 A8])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:182 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 13 12 16 2 (set (reg/f:DI 83 [ D.45206 ])
        (reg:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:182 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 16 13 20 2 (set (reg:DI 84 [ <retval> ])
        (reg/f:DI 83 [ D.45206 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:182 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45206 ])
        (nil)))
(insn 20 16 21 2 (set (reg/i:DI 0 ax)
        (reg:DI 84 [ <retval> ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:182 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84 [ <retval> ])
        (nil)))
(insn 21 20 0 2 (use (reg/i:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:182 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = brite::Color; __gnu_cxx::new_allocator<_Tp>::pointer = brite::Color*; __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int] (_ZN9__gnu_cxx13new_allocatorIN5brite5ColorEE10deallocateEPS2_m, funcdef_no=2278, decl_uid=40874, symbol_order=877)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best DIREG, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 10(l0): point = 0
   Insn 9(l0): point = 2
   Insn 8(l0): point = 4
   Insn 4(l0): point = 6
   Insn 3(l0): point = 8
   Insn 2(l0): point = 10
 a0(r83): [3..4]
Compressing live ranges: from 13 to 2 - 15%
Ranges after the compression:
 a0(r83): [0..1]
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1
Disposition:
    0:r83  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = brite::Color; __gnu_cxx::new_allocator<_Tp>::pointer = brite::Color*; __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d,1u} r2={2d} r4={2d,1u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,6u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} 
;;    total ref usage 106{89d,17u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:109 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])
        (reg:DI 4 si [ __p ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:109 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __p ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 D.40877+0 S8 A64])
        (reg:DI 1 dx [ D.40877 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:109 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ D.40877 ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:110 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 83)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(call_insn 10 9 0 2 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x14316e000 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:110 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static void std::__uninitialized_fill_n<true>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = brite::Color*; _Size = long unsigned int; _Tp = brite::Color] (_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPN5brite5ColorEmS3_EEvT_T0_RKT1_, funcdef_no=2279, decl_uid=43141, symbol_order=878)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best DIREG, allocno GENERAL_REGS
    r84: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best SIREG, allocno GENERAL_REGS
    r83: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r83,l0) best DREG, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a2(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 12(l0): point = 4
   Insn 11(l0): point = 6
   Insn 10(l0): point = 8
   Insn 9(l0): point = 10
   Insn 8(l0): point = 12
   Insn 4(l0): point = 14
   Insn 3(l0): point = 16
   Insn 2(l0): point = 18
 a0(r85): [3..8]
 a1(r84): [5..10]
 a2(r83): [7..12]
Compressing live ranges: from 21 to 2 - 9%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r84): [0..1]
 a2(r83): [0..1]
  regions=1, blocks=3, points=2
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    2:r83  l0     1    1:r84  l0     2    0:r85  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static void std::__uninitialized_fill_n<true>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = brite::Color*; _Size = long unsigned int; _Tp = brite::Color]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={3d,2u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,8u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} 
;;    total ref usage 116{93d,23u,0e} in 10{9 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:217 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:217 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __x+0 S8 A64])
        (reg:DI 1 dx [ __x ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:217 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __x ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __x+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:219 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 84)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:219 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __first+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:219 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 1 dx)
        (reg:DI 83)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:219 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (reg:DI 84)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:219 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 85)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:219 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85)
        (nil)))
(call_insn 14 13 0 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt6fill_nIPN5brite5ColorEmS1_ET_S3_T0_RKT1_") [flags 0x1]  <function_decl 0x103f1ff00 fill_n>) [0 fill_n S1 A8])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:219 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static __gnu_cxx::__alloc_traits<_Alloc>::pointer __gnu_cxx::__alloc_traits<_Alloc>::allocate(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::size_type) [with _Alloc = std::allocator<int>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = int*; __gnu_cxx::__alloc_traits<_Alloc>::size_type = long unsigned int] (_ZN9__gnu_cxx14__alloc_traitsISaIiEE8allocateERS1_m, funcdef_no=2280, decl_uid=34823, symbol_order=879)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r86: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r86,l0) best DIREG, allocno GENERAL_REGS
    r85: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r85,l0) best SIREG, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best AREG, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a2(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a3(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 21(l0): point = 0
   Insn 20(l0): point = 2
   Insn 16(l0): point = 4
   Insn 13(l0): point = 6
   Insn 12(l0): point = 8
   Insn 11(l0): point = 10
   Insn 10(l0): point = 12
   Insn 9(l0): point = 14
   Insn 8(l0): point = 16
   Insn 7(l0): point = 18
   Insn 3(l0): point = 20
   Insn 2(l0): point = 22
 a0(r84): [3..4]
 a1(r83): [5..6]
 a2(r86): [11..16]
 a3(r85): [13..18]
Compressing live ranges: from 25 to 6 - 24%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
 a2(r86): [4..5]
 a3(r85): [4..5]
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    1:r83  l0     0    0:r84  l0     0    3:r85  l0     2    2:r86  l0     0
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static __gnu_cxx::__alloc_traits<_Alloc>::pointer __gnu_cxx::__alloc_traits<_Alloc>::allocate(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::size_type) [with _Alloc = std::allocator<int>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = int*; __gnu_cxx::__alloc_traits<_Alloc>::size_type = long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={3d,3u} r1={3d,1u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,6u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} 
;;    total ref usage 119{95d,24u,0e} in 12{11 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85 86
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])
        (reg:DI 5 di [ __a ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:181 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __a ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:181 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 85)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:182 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:182 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 1 dx)
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:182 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 85)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:182 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 86)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:182 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(call_insn 12 11 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv") [flags 0x1]  <function_decl 0x1037fb600 allocate>) [0 allocate S1 A8])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:182 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 13 12 16 2 (set (reg/f:DI 83 [ D.45207 ])
        (reg:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:182 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 16 13 20 2 (set (reg:DI 84 [ <retval> ])
        (reg/f:DI 83 [ D.45207 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:182 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45207 ])
        (nil)))
(insn 20 16 21 2 (set (reg/i:DI 0 ax)
        (reg:DI 84 [ <retval> ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:182 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84 [ <retval> ])
        (nil)))
(insn 21 20 0 2 (use (reg/i:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/alloc_traits.h:182 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = int; __gnu_cxx::new_allocator<_Tp>::pointer = int*; __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int] (_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim, funcdef_no=2281, decl_uid=32827, symbol_order=880)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best DIREG, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 10(l0): point = 0
   Insn 9(l0): point = 2
   Insn 8(l0): point = 4
   Insn 4(l0): point = 6
   Insn 3(l0): point = 8
   Insn 2(l0): point = 10
 a0(r83): [3..4]
Compressing live ranges: from 13 to 2 - 15%
Ranges after the compression:
 a0(r83): [0..1]
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1
Disposition:
    0:r83  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = int; __gnu_cxx::new_allocator<_Tp>::pointer = int*; __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d,1u} r2={2d} r4={2d,1u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,6u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} 
;;    total ref usage 106{89d,17u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:109 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])
        (reg:DI 4 si [ __p ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:109 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __p ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 D.32830+0 S8 A64])
        (reg:DI 1 dx [ D.32830 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:109 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ D.32830 ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:110 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 83)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(call_insn 10 9 0 2 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x14316e000 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:110 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static void std::__uninitialized_fill_n<true>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = int*; _Size = long unsigned int; _Tp = int] (_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEEvT_T0_RKT1_, funcdef_no=2282, decl_uid=43152, symbol_order=881)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best DIREG, allocno GENERAL_REGS
    r84: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best SIREG, allocno GENERAL_REGS
    r83: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r83,l0) best DREG, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a2(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 12(l0): point = 4
   Insn 11(l0): point = 6
   Insn 10(l0): point = 8
   Insn 9(l0): point = 10
   Insn 8(l0): point = 12
   Insn 4(l0): point = 14
   Insn 3(l0): point = 16
   Insn 2(l0): point = 18
 a0(r85): [3..8]
 a1(r84): [5..10]
 a2(r83): [7..12]
Compressing live ranges: from 21 to 2 - 9%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r84): [0..1]
 a2(r83): [0..1]
  regions=1, blocks=3, points=2
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    2:r83  l0     1    1:r84  l0     2    0:r85  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static void std::__uninitialized_fill_n<true>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = int*; _Size = long unsigned int; _Tp = int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={3d,2u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,8u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} 
;;    total ref usage 116{93d,23u,0e} in 10{9 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:217 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:217 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __x+0 S8 A64])
        (reg:DI 1 dx [ __x ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:217 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __x ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __x+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:219 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 84)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:219 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __first+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:219 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 1 dx)
        (reg:DI 83)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:219 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (reg:DI 84)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:219 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 85)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:219 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85)
        (nil)))
(call_insn 14 13 0 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt6fill_nIPimiET_S1_T0_RKT1_") [flags 0x1]  <function_decl 0x103f52000 fill_n>) [0 fill_n S1 A8])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_uninitialized.h:219 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = brite::Color; __gnu_cxx::new_allocator<_Tp>::pointer = brite::Color*; __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int] (_ZN9__gnu_cxx13new_allocatorIN5brite5ColorEE8allocateEmPKv, funcdef_no=2285, decl_uid=40870, symbol_order=884)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 24.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best AREG, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r86,l0) best AREG, allocno GENERAL_REGS
    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r85,l0) best DIREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r83,l0) best AREG, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a2(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a3(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a4(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:416 INT_SSE_REGS:416 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a5(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a6(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 33(l0): point = 0
   Insn 32(l0): point = 2
   Insn 28(l0): point = 4
   Insn 25(l0): point = 6
   Insn 24(l0): point = 8
   Insn 23(l0): point = 10
   Insn 22(l0): point = 12
   Insn 21(l0): point = 14
   Insn 17(l0): point = 17
   Insn 15(l0): point = 20
   Insn 14(l0): point = 22
   Insn 13(l0): point = 24
   Insn 12(l0): point = 26
   Insn 11(l0): point = 28
   Insn 10(l0): point = 30
   Insn 9(l0): point = 32
   Insn 8(l0): point = 34
   Insn 4(l0): point = 36
   Insn 3(l0): point = 38
   Insn 2(l0): point = 40
 a0(r87): [3..4]
 a1(r86): [5..6]
 a2(r85): [11..12]
 a3(r89): [13..14]
 a4(r84): [23..24]
 a5(r83): [27..28]
 a6(r88): [33..34]
Compressing live ranges: from 43 to 14 - 32%
Ranges after the compression:
 a0(r87): [0..1]
 a1(r86): [2..3]
 a2(r85): [4..5]
 a3(r89): [6..7]
 a4(r84): [8..9]
 a5(r83): [10..11]
 a6(r88): [12..13]
  regions=1, blocks=5, points=14
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    5:r83  l0     0    4:r84  l0     0    2:r85  l0     0    1:r86  l0     0
    0:r87  l0     0    6:r88  l0     0    3:r89  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = brite::Color; __gnu_cxx::new_allocator<_Tp>::pointer = brite::Color*; __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={5d,4u} r1={4d,1u} r2={4d} r4={4d,1u} r5={6d,3u} r6={1d,4u} r7={1d,7u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,3u} r17={6d,2u} r18={3d} r19={3d} r20={1d,10u,1e} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 279{236d,42u,1e} in 20{17 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 88
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:99 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:99 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 D.40873+0 S8 A64])
        (reg:DI 1 dx [ D.40873 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:99 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ D.40873 ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:101 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 88)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNK9__gnu_cxx13new_allocatorIN5brite5ColorEE8max_sizeEv") [flags 0x1]  <function_decl 0x103c9d400 max_size>) [0 max_size S1 A8])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:101 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 83 [ D.45208 ])
        (reg:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 83 [ D.45208 ])
            (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:101 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 83 [ D.45208 ])
        (nil)))
(insn 13 12 14 2 (set (reg:QI 84 [ D.45209 ])
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:101 592 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil)))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 84 [ D.45209 ])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:101 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 84 [ D.45209 ])
        (nil)))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:101 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 19)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 17 16 18 3 (call (mem:QI (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x101656d00 __throw_bad_alloc>) [0 __throw_bad_alloc S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:102 642 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 18 17 19)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 85 86 87 89
(code_label 19 18 20 4 330 "" [1 uses])
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg:DI 89)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:104 89 {*movdi_internal}
     (nil))
(insn 22 21 23 4 (parallel [
            (set (reg:DI 85 [ D.45208 ])
                (ashift:DI (reg:DI 89)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:104 497 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 89)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
                    (const_int 2 [0x2]))
                (nil)))))
(insn 23 22 24 4 (set (reg:DI 5 di)
        (reg:DI 85 [ D.45208 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:104 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85 [ D.45208 ])
        (nil)))
(call_insn 24 23 25 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x143165e00 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:104 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 25 24 28 4 (set (reg/f:DI 86 [ D.45210 ])
        (reg:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:104 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 28 25 32 4 (set (reg:DI 87 [ <retval> ])
        (reg/f:DI 86 [ D.45210 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:104 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 86 [ D.45210 ])
        (nil)))
(insn 32 28 33 4 (set (reg/i:DI 0 ax)
        (reg:DI 87 [ <retval> ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:105 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ <retval> ])
        (nil)))
(insn 33 32 0 4 (use (reg/i:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:105 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _OI std::fill_n(_OI, _Size, const _Tp&) [with _OI = brite::Color*; _Size = long unsigned int; _Tp = brite::Color] (_ZSt6fill_nIPN5brite5ColorEmS1_ET_S3_T0_RKT1_, funcdef_no=2286, decl_uid=43182, symbol_order=885)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 17.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best SIREG, allocno GENERAL_REGS
    r87: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best DREG, allocno GENERAL_REGS
    r86: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r86,l0) best DIREG, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r83,l0) best AREG, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a2(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a5(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 26(l0): point = 0
   Insn 25(l0): point = 2
   Insn 21(l0): point = 4
   Insn 18(l0): point = 6
   Insn 17(l0): point = 8
   Insn 16(l0): point = 10
   Insn 15(l0): point = 12
   Insn 14(l0): point = 14
   Insn 13(l0): point = 16
   Insn 12(l0): point = 18
   Insn 11(l0): point = 20
   Insn 10(l0): point = 22
   Insn 9(l0): point = 24
   Insn 8(l0): point = 26
   Insn 4(l0): point = 28
   Insn 3(l0): point = 30
   Insn 2(l0): point = 32
 a0(r85): [3..4]
 a1(r84): [5..6]
 a2(r83): [11..20]
 a3(r88): [13..16]
 a4(r87): [15..18]
 a5(r86): [25..26]
Compressing live ranges: from 35 to 8 - 22%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r84): [2..3]
 a2(r83): [4..5]
 a3(r88): [4..5]
 a4(r87): [4..5]
 a5(r86): [6..7]
  regions=1, blocks=3, points=8
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    2:r83  l0     2    1:r84  l0     0    0:r85  l0     0    5:r86  l0     0
    4:r87  l0     1    3:r88  l0     0
+++Costs: overall -6, reg -6, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_OI std::fill_n(_OI, _Size, const _Tp&) [with _OI = brite::Color*; _Size = long unsigned int; _Tp = brite::Color]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={4d,4u} r1={4d,2u} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,8u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 198{166d,32u,0e} in 17{15 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85 86 87 88
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:792 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:792 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __value+0 S8 A64])
        (reg:DI 1 dx [ __value ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:792 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __value ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __first+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:797 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 86)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:797 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt12__niter_baseIPN5brite5ColorEENSt11_Niter_baseIT_E13iterator_typeES4_") [flags 0x1]  <function_decl 0x103f52800 __niter_base>) [0 __niter_base S1 A8])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:797 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 83 [ D.45211 ])
        (reg:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:797 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __value+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:797 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 88)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:797 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 1 dx)
        (reg:DI 87)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:797 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (reg:DI 88)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:797 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ D.45211 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:797 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45211 ])
        (nil)))
(call_insn 17 16 18 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt10__fill_n_aIPN5brite5ColorEmS1_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT1_E7__valueET_E6__typeES8_T0_RKS6_") [flags 0x1]  <function_decl 0x103def000 __fill_n_a>) [0 __fill_n_a S1 A8])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:797 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 18 17 21 2 (set (reg/f:DI 84 [ D.45211 ])
        (reg:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:797 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 21 18 25 2 (set (reg:DI 85 [ <retval> ])
        (reg/f:DI 84 [ D.45211 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:797 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84 [ D.45211 ])
        (nil)))
(insn 25 21 26 2 (set (reg/i:DI 0 ax)
        (reg:DI 85 [ <retval> ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:798 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85 [ <retval> ])
        (nil)))
(insn 26 25 0 2 (use (reg/i:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:798 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = int; __gnu_cxx::new_allocator<_Tp>::pointer = int*; __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int] (_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv, funcdef_no=2287, decl_uid=32823, symbol_order=886)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 24.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best AREG, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r86,l0) best AREG, allocno GENERAL_REGS
    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r85,l0) best DIREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r83,l0) best AREG, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a2(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a3(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a4(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:416 INT_SSE_REGS:416 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a5(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a6(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 33(l0): point = 0
   Insn 32(l0): point = 2
   Insn 28(l0): point = 4
   Insn 25(l0): point = 6
   Insn 24(l0): point = 8
   Insn 23(l0): point = 10
   Insn 22(l0): point = 12
   Insn 21(l0): point = 14
   Insn 17(l0): point = 17
   Insn 15(l0): point = 20
   Insn 14(l0): point = 22
   Insn 13(l0): point = 24
   Insn 12(l0): point = 26
   Insn 11(l0): point = 28
   Insn 10(l0): point = 30
   Insn 9(l0): point = 32
   Insn 8(l0): point = 34
   Insn 4(l0): point = 36
   Insn 3(l0): point = 38
   Insn 2(l0): point = 40
 a0(r87): [3..4]
 a1(r86): [5..6]
 a2(r85): [11..12]
 a3(r89): [13..14]
 a4(r84): [23..24]
 a5(r83): [27..28]
 a6(r88): [33..34]
Compressing live ranges: from 43 to 14 - 32%
Ranges after the compression:
 a0(r87): [0..1]
 a1(r86): [2..3]
 a2(r85): [4..5]
 a3(r89): [6..7]
 a4(r84): [8..9]
 a5(r83): [10..11]
 a6(r88): [12..13]
  regions=1, blocks=5, points=14
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    5:r83  l0     0    4:r84  l0     0    2:r85  l0     0    1:r86  l0     0
    0:r87  l0     0    6:r88  l0     0    3:r89  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = int; __gnu_cxx::new_allocator<_Tp>::pointer = int*; __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={5d,4u} r1={4d,1u} r2={4d} r4={4d,1u} r5={6d,3u} r6={1d,4u} r7={1d,7u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,3u} r17={6d,2u} r18={3d} r19={3d} r20={1d,10u,1e} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 279{236d,42u,1e} in 20{17 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 88
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:99 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:99 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 D.32826+0 S8 A64])
        (reg:DI 1 dx [ D.32826 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:99 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ D.32826 ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:101 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 88)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv") [flags 0x1]  <function_decl 0x1037fb800 max_size>) [0 max_size S1 A8])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:101 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 83 [ D.45212 ])
        (reg:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 83 [ D.45212 ])
            (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:101 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 83 [ D.45212 ])
        (nil)))
(insn 13 12 14 2 (set (reg:QI 84 [ D.45213 ])
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:101 592 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil)))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 84 [ D.45213 ])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:101 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 84 [ D.45213 ])
        (nil)))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:101 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 19)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 17 16 18 3 (call (mem:QI (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x101656d00 __throw_bad_alloc>) [0 __throw_bad_alloc S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:102 642 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 18 17 19)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 85 86 87 89
(code_label 19 18 20 4 335 "" [1 uses])
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg:DI 89)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:104 89 {*movdi_internal}
     (nil))
(insn 22 21 23 4 (parallel [
            (set (reg:DI 85 [ D.45212 ])
                (ashift:DI (reg:DI 89)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:104 497 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 89)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
                    (const_int 2 [0x2]))
                (nil)))))
(insn 23 22 24 4 (set (reg:DI 5 di)
        (reg:DI 85 [ D.45212 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:104 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85 [ D.45212 ])
        (nil)))
(call_insn 24 23 25 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x143165e00 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:104 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 25 24 28 4 (set (reg/f:DI 86 [ D.45214 ])
        (reg:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:104 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 28 25 32 4 (set (reg:DI 87 [ <retval> ])
        (reg/f:DI 86 [ D.45214 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:104 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 86 [ D.45214 ])
        (nil)))
(insn 32 28 33 4 (set (reg/i:DI 0 ax)
        (reg:DI 87 [ <retval> ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:105 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ <retval> ])
        (nil)))
(insn 33 32 0 4 (use (reg/i:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:105 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _OI std::fill_n(_OI, _Size, const _Tp&) [with _OI = int*; _Size = long unsigned int; _Tp = int] (_ZSt6fill_nIPimiET_S1_T0_RKT1_, funcdef_no=2288, decl_uid=43189, symbol_order=887)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 17.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best SIREG, allocno GENERAL_REGS
    r87: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best DREG, allocno GENERAL_REGS
    r86: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r86,l0) best DIREG, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r83,l0) best AREG, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a2(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a5(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 26(l0): point = 0
   Insn 25(l0): point = 2
   Insn 21(l0): point = 4
   Insn 18(l0): point = 6
   Insn 17(l0): point = 8
   Insn 16(l0): point = 10
   Insn 15(l0): point = 12
   Insn 14(l0): point = 14
   Insn 13(l0): point = 16
   Insn 12(l0): point = 18
   Insn 11(l0): point = 20
   Insn 10(l0): point = 22
   Insn 9(l0): point = 24
   Insn 8(l0): point = 26
   Insn 4(l0): point = 28
   Insn 3(l0): point = 30
   Insn 2(l0): point = 32
 a0(r85): [3..4]
 a1(r84): [5..6]
 a2(r83): [11..20]
 a3(r88): [13..16]
 a4(r87): [15..18]
 a5(r86): [25..26]
Compressing live ranges: from 35 to 8 - 22%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r84): [2..3]
 a2(r83): [4..5]
 a3(r88): [4..5]
 a4(r87): [4..5]
 a5(r86): [6..7]
  regions=1, blocks=3, points=8
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    2:r83  l0     2    1:r84  l0     0    0:r85  l0     0    5:r86  l0     0
    4:r87  l0     1    3:r88  l0     0
+++Costs: overall -6, reg -6, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_OI std::fill_n(_OI, _Size, const _Tp&) [with _OI = int*; _Size = long unsigned int; _Tp = int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={4d,4u} r1={4d,2u} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,8u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 198{166d,32u,0e} in 17{15 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85 86 87 88
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:792 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:792 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __value+0 S8 A64])
        (reg:DI 1 dx [ __value ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:792 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __value ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __first+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:797 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 86)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:797 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_") [flags 0x1]  <function_decl 0x103f52a00 __niter_base>) [0 __niter_base S1 A8])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:797 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 83 [ D.45215 ])
        (reg:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:797 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __value+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:797 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 88)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:797 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 1 dx)
        (reg:DI 87)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:797 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (reg:DI 88)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:797 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ D.45215 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:797 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45215 ])
        (nil)))
(call_insn 17 16 18 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT1_E7__valueET_E6__typeES6_T0_RKS4_") [flags 0x1]  <function_decl 0x103f52b00 __fill_n_a>) [0 __fill_n_a S1 A8])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:797 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 18 17 21 2 (set (reg/f:DI 84 [ D.45215 ])
        (reg:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:797 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 21 18 25 2 (set (reg:DI 85 [ <retval> ])
        (reg/f:DI 84 [ D.45215 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:797 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84 [ D.45215 ])
        (nil)))
(insn 25 21 26 2 (set (reg/i:DI 0 ax)
        (reg:DI 85 [ <retval> ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:798 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85 [ <retval> ])
        (nil)))
(insn 26 25 0 2 (use (reg/i:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:798 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = brite::Color; __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int] (_ZNK9__gnu_cxx13new_allocatorIN5brite5ColorEE8max_sizeEv, funcdef_no=2290, decl_uid=40878, symbol_order=889)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 9(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r84): [3..4]
 a1(r83): [5..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r83  l0     0    0:r84  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = brite::Color; __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,3u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r83={1d,1u} r84={1d,1u} 
;;    total ref usage 35{22d,13u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 83 84
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:113 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg:DI 83 [ D.45216 ])
        (const_int 4611686018427387903 [0x3fffffffffffffff])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:114 89 {*movdi_internal}
     (nil))
(insn 9 6 13 2 (set (reg:DI 84 [ <retval> ])
        (reg:DI 83 [ D.45216 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:114 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83 [ D.45216 ])
        (nil)))
(insn 13 9 14 2 (set (reg/i:DI 0 ax)
        (reg:DI 84 [ <retval> ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:114 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84 [ <retval> ])
        (nil)))
(insn 14 13 0 2 (use (reg/i:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:114 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = brite::Color*; typename std::_Niter_base<_Iterator>::iterator_type = brite::Color*] (_ZSt12__niter_baseIPN5brite5ColorEENSt11_Niter_baseIT_E13iterator_typeES4_, funcdef_no=2291, decl_uid=43228, symbol_order=890)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r85,l0) best DIREG, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best AREG, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a2(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 17(l0): point = 0
   Insn 16(l0): point = 2
   Insn 12(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 2(l0): point = 14
 a0(r84): [3..4]
 a1(r83): [5..6]
 a2(r85): [11..12]
Compressing live ranges: from 17 to 6 - 35%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
 a2(r85): [4..5]
  regions=1, blocks=3, points=6
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r83  l0     0    0:r84  l0     0    2:r85  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = brite::Color*; typename std::_Niter_base<_Iterator>::iterator_type = brite::Color*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} 
;;    total ref usage 110{92d,18u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __it+0 S8 A64])
        (reg:DI 5 di [ __it ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:278 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __it ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __it+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:279 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 85)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:279 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85)
        (nil)))
(call_insn 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt10_Iter_baseIPN5brite5ColorELb0EE7_S_baseES2_") [flags 0x1]  <function_decl 0x103f52700 _S_base>) [0 _S_base S1 A8])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:279 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 12 2 (set (reg/f:DI 83 [ D.45217 ])
        (reg:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:279 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 9 16 2 (set (reg:DI 84 [ <retval> ])
        (reg/f:DI 83 [ D.45217 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:279 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45217 ])
        (nil)))
(insn 16 12 17 2 (set (reg/i:DI 0 ax)
        (reg:DI 84 [ <retval> ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:279 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84 [ <retval> ])
        (nil)))
(insn 17 16 0 2 (use (reg/i:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:279 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function typename __gnu_cxx::__enable_if<(! std::__is_scalar<_Tp>::__value), _OutputIterator>::__type std::__fill_n_a(_OutputIterator, _Size, const _Tp&) [with _OutputIterator = brite::Color*; _Size = long unsigned int; _Tp = brite::Color; typename __gnu_cxx::__enable_if<(! std::__is_scalar<_Tp>::__value), _OutputIterator>::__type = brite::Color*] (_ZSt10__fill_n_aIPN5brite5ColorEmS1_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT1_E7__valueET_E6__typeES8_T0_RKS6_, funcdef_no=2292, decl_uid=43281, symbol_order=891)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a3(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a5(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8

   Insn 33(l0): point = 0
   Insn 32(l0): point = 2
   Insn 28(l0): point = 4
   Insn 25(l0): point = 6
   Insn 18(l0): point = 9
   Insn 17(l0): point = 11
   Insn 16(l0): point = 13
   Insn 15(l0): point = 15
   Insn 14(l0): point = 17
   Insn 13(l0): point = 19
   Insn 23(l0): point = 22
   Insn 22(l0): point = 24
   Insn 35(l0): point = 27
   Insn 9(l0): point = 29
   Insn 8(l0): point = 31
   Insn 4(l0): point = 33
   Insn 3(l0): point = 35
   Insn 2(l0): point = 37
 a0(r85): [3..4]
 a1(r84): [5..6]
 a2(r88): [14..15]
 a3(r83): [14..17]
 a4(r87): [18..19]
 a5(r86): [30..31]
Compressing live ranges: from 40 to 10 - 25%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r84): [2..3]
 a2(r88): [4..5]
 a3(r83): [4..5]
 a4(r87): [6..7]
 a5(r86): [8..9]
  regions=1, blocks=6, points=10
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    3:r83  l0     1    1:r84  l0     0    0:r85  l0     0    5:r86  l0     0
    4:r87  l0     0    2:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


typename __gnu_cxx::__enable_if<(! std::__is_scalar<_Tp>::__value), _OutputIterator>::__type std::__fill_n_a(_OutputIterator, _Size, const _Tp&) [with _OutputIterator = brite::Color*; _Size = long unsigned int; _Tp = brite::Color; typename __gnu_cxx::__enable_if<(! std::__is_scalar<_Tp>::__value), _OutputIterator>::__type = brite::Color*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 17[flags]
;;  ref usage 	r0={2d,2u} r1={1d,1u} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,5u} r7={1d,5u} r16={1d,4u} r17={3d,1u} r20={1d,18u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 73{29d,44u,0e} in 18{18 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 86
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:746 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:746 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __value+0 S8 A64])
        (reg:DI 1 dx [ __value ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:746 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __value ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 86)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:748 89 {*movdi_internal}
     (nil))
(insn 9 8 35 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __niter+0 S8 A64])
        (reg:DI 86)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:748 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(jump_insn 35 9 36 2 (set (pc)
        (label_ref 19)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:748 636 {jump}
     (nil)
 -> 19)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 36 35 21)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 83 87 88
(code_label 21 36 12 3 345 "" [1 uses])
(note 12 21 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __value+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:750 89 {*movdi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:SI 83 [ D.45218 ])
        (mem:SI (reg/f:DI 87) [0 *__value_6(D)+0 S4 A32])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:750 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87)
        (nil)))
(insn 15 14 16 3 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __first+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:750 89 {*movdi_internal}
     (nil))
(insn 16 15 17 3 (set (mem:SI (reg/f:DI 88) [0 *__first_1+0 S4 A32])
        (reg:SI 83 [ D.45218 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:750 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88)
        (expr_list:REG_DEAD (reg:SI 83 [ D.45218 ])
            (nil))))
(insn 17 16 18 3 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 __niter+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 __niter+0 S8 A64])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:748 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 18 17 19 3 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -24 [0xffffffffffffffe8])) [0 __first+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 __first+0 S8 A64])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:748 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 19 18 20 4 344 "" [1 uses])
(note 20 19 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 20 23 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 __niter+0 S8 A64])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:748 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:748 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 21)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 84 85
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 28 5 (set (reg/f:DI 84 [ D.45219 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __first+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:751 89 {*movdi_internal}
     (nil))
(insn 28 25 32 5 (set (reg:DI 85 [ <retval> ])
        (reg/f:DI 84 [ D.45219 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:751 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84 [ D.45219 ])
        (nil)))
(insn 32 28 33 5 (set (reg/i:DI 0 ax)
        (reg:DI 85 [ <retval> ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:752 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85 [ <retval> ])
        (nil)))
(insn 33 32 0 5 (use (reg/i:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:752 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = int; __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int] (_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv, funcdef_no=2293, decl_uid=32831, symbol_order=892)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 9(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r84): [3..4]
 a1(r83): [5..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r83  l0     0    0:r84  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = int; __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,3u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r83={1d,1u} r84={1d,1u} 
;;    total ref usage 35{22d,13u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 83 84
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:113 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg:DI 83 [ D.45220 ])
        (const_int 4611686018427387903 [0x3fffffffffffffff])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:114 89 {*movdi_internal}
     (nil))
(insn 9 6 13 2 (set (reg:DI 84 [ <retval> ])
        (reg:DI 83 [ D.45220 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:114 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83 [ D.45220 ])
        (nil)))
(insn 13 9 14 2 (set (reg/i:DI 0 ax)
        (reg:DI 84 [ <retval> ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:114 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84 [ <retval> ])
        (nil)))
(insn 14 13 0 2 (use (reg/i:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/ext/new_allocator.h:114 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = int*; typename std::_Niter_base<_Iterator>::iterator_type = int*] (_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_, funcdef_no=2294, decl_uid=43301, symbol_order=893)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r85,l0) best DIREG, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best AREG, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a2(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 17(l0): point = 0
   Insn 16(l0): point = 2
   Insn 12(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 2(l0): point = 14
 a0(r84): [3..4]
 a1(r83): [5..6]
 a2(r85): [11..12]
Compressing live ranges: from 17 to 6 - 35%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
 a2(r85): [4..5]
  regions=1, blocks=3, points=6
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r83  l0     0    0:r84  l0     0    2:r85  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = int*; typename std::_Niter_base<_Iterator>::iterator_type = int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} 
;;    total ref usage 110{92d,18u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __it+0 S8 A64])
        (reg:DI 5 di [ __it ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:278 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __it ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __it+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:279 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 85)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:279 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85)
        (nil)))
(call_insn 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_") [flags 0x1]  <function_decl 0x103f52900 _S_base>) [0 _S_base S1 A8])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:279 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 12 2 (set (reg/f:DI 83 [ D.45221 ])
        (reg:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:279 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 9 16 2 (set (reg:DI 84 [ <retval> ])
        (reg/f:DI 83 [ D.45221 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:279 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45221 ])
        (nil)))
(insn 16 12 17 2 (set (reg/i:DI 0 ax)
        (reg:DI 84 [ <retval> ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:279 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84 [ <retval> ])
        (nil)))
(insn 17 16 0 2 (use (reg/i:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:279 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function typename __gnu_cxx::__enable_if<std::__is_scalar<_Tp>::__value, _OutputIterator>::__type std::__fill_n_a(_OutputIterator, _Size, const _Tp&) [with _OutputIterator = int*; _Size = long unsigned int; _Tp = int; typename __gnu_cxx::__enable_if<std::__is_scalar<_Tp>::__value, _OutputIterator>::__type = int*] (_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT1_E7__valueET_E6__typeES6_T0_RKS4_, funcdef_no=2295, decl_uid=43316, symbol_order=894)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a3(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a5(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a6(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8

   Insn 35(l0): point = 0
   Insn 34(l0): point = 2
   Insn 30(l0): point = 4
   Insn 27(l0): point = 6
   Insn 20(l0): point = 9
   Insn 19(l0): point = 11
   Insn 18(l0): point = 13
   Insn 17(l0): point = 15
   Insn 16(l0): point = 17
   Insn 25(l0): point = 20
   Insn 24(l0): point = 22
   Insn 37(l0): point = 25
   Insn 12(l0): point = 27
   Insn 11(l0): point = 29
   Insn 10(l0): point = 31
   Insn 9(l0): point = 33
   Insn 8(l0): point = 35
   Insn 4(l0): point = 37
   Insn 3(l0): point = 39
   Insn 2(l0): point = 41
 a0(r84): [3..4]
 a1(r83): [5..6]
 a2(r88): [14..17]
 a3(r89): [14..15]
 a4(r87): [28..29]
 a5(r86): [32..33]
 a6(r85): [34..35]
Compressing live ranges: from 44 to 12 - 27%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
 a2(r88): [4..5]
 a3(r89): [4..5]
 a4(r87): [6..7]
 a5(r86): [8..9]
 a6(r85): [10..11]
  regions=1, blocks=6, points=12
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    1:r83  l0     0    0:r84  l0     0    6:r85  l0     0    5:r86  l0     0
    4:r87  l0     0    2:r88  l0     0    3:r89  l0     1
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


typename __gnu_cxx::__enable_if<std::__is_scalar<_Tp>::__value, _OutputIterator>::__type std::__fill_n_a(_OutputIterator, _Size, const _Tp&) [with _OutputIterator = int*; _Size = long unsigned int; _Tp = int; typename __gnu_cxx::__enable_if<std::__is_scalar<_Tp>::__value, _OutputIterator>::__type = int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 17[flags]
;;  ref usage 	r0={2d,2u} r1={1d,1u} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,5u} r7={1d,5u} r16={1d,4u} r17={3d,1u} r20={1d,20u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 77{30d,47u,0e} in 20{20 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 85 86 87
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:757 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:757 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __value+0 S8 A64])
        (reg:DI 1 dx [ __value ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:757 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __value ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __value+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:759 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 86)
        (mem:SI (reg/f:DI 85) [0 *__value_3(D)+0 S4 A32])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:759 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85)
        (nil)))
(insn 10 9 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 __tmp+0 S4 A32])
        (reg:SI 86)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:759 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 87)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __n+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:760 89 {*movdi_internal}
     (nil))
(insn 12 11 37 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __niter+0 S8 A64])
        (reg:DI 87)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:760 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(jump_insn 37 12 38 2 (set (pc)
        (label_ref 21)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:760 636 {jump}
     (nil)
 -> 21)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 38 37 23)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 89
(code_label 23 38 15 3 353 "" [1 uses])
(note 15 23 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __first+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:762 89 {*movdi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:SI 89)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 __tmp+0 S4 A32])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:762 90 {*movsi_internal}
     (nil))
(insn 18 17 19 3 (set (mem:SI (reg/f:DI 88) [0 *__first_1+0 S4 A32])
        (reg:SI 89)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:762 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89)
        (expr_list:REG_DEAD (reg/f:DI 88)
            (nil))))
(insn 19 18 20 3 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 __niter+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 __niter+0 S8 A64])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:760 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 20 19 21 3 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -24 [0xffffffffffffffe8])) [0 __first+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 __first+0 S8 A64])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:760 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 21 20 22 4 352 "" [1 uses])
(note 22 21 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 22 25 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 __niter+0 S8 A64])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:760 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 25 24 26 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:760 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 23)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 83 84
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 30 5 (set (reg/f:DI 83 [ D.45222 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __first+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:763 89 {*movdi_internal}
     (nil))
(insn 30 27 34 5 (set (reg:DI 84 [ <retval> ])
        (reg/f:DI 83 [ D.45222 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:763 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45222 ])
        (nil)))
(insn 34 30 35 5 (set (reg/i:DI 0 ax)
        (reg:DI 84 [ <retval> ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:764 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84 [ <retval> ])
        (nil)))
(insn 35 34 0 5 (use (reg/i:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_algobase.h:764 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = brite::Color*; bool _HasBase = false; std::_Iter_base<_Iterator, _HasBase>::iterator_type = brite::Color*] (_ZNSt10_Iter_baseIPN5brite5ColorELb0EE7_S_baseES2_, funcdef_no=2297, decl_uid=43224, symbol_order=896)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 9(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r84): [3..4]
 a1(r83): [5..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r83  l0     0    0:r84  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = brite::Color*; bool _HasBase = false; std::_Iter_base<_Iterator, _HasBase>::iterator_type = brite::Color*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r83={1d,1u} r84={1d,1u} 
;;    total ref usage 36{22d,14u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 83 84
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __it+0 S8 A64])
        (reg:DI 5 di [ __it ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_iterator_base_types.h:212 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __it ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg/f:DI 83 [ D.45223 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __it+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_iterator_base_types.h:213 89 {*movdi_internal}
     (nil))
(insn 9 6 13 2 (set (reg:DI 84 [ <retval> ])
        (reg/f:DI 83 [ D.45223 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_iterator_base_types.h:213 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45223 ])
        (nil)))
(insn 13 9 14 2 (set (reg/i:DI 0 ax)
        (reg:DI 84 [ <retval> ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_iterator_base_types.h:213 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84 [ <retval> ])
        (nil)))
(insn 14 13 0 2 (use (reg/i:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_iterator_base_types.h:213 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = int*; bool _HasBase = false; std::_Iter_base<_Iterator, _HasBase>::iterator_type = int*] (_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_, funcdef_no=2298, decl_uid=43297, symbol_order=897)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 9(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r84): [3..4]
 a1(r83): [5..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r83  l0     0    0:r84  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = int*; bool _HasBase = false; std::_Iter_base<_Iterator, _HasBase>::iterator_type = int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r83={1d,1u} r84={1d,1u} 
;;    total ref usage 36{22d,14u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 83 84
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __it+0 S8 A64])
        (reg:DI 5 di [ __it ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_iterator_base_types.h:212 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __it ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg/f:DI 83 [ D.45224 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __it+0 S8 A64])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_iterator_base_types.h:213 89 {*movdi_internal}
     (nil))
(insn 9 6 13 2 (set (reg:DI 84 [ <retval> ])
        (reg/f:DI 83 [ D.45224 ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_iterator_base_types.h:213 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.45224 ])
        (nil)))
(insn 13 9 14 2 (set (reg/i:DI 0 ax)
        (reg:DI 84 [ <retval> ])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_iterator_base_types.h:213 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84 [ <retval> ])
        (nil)))
(insn 14 13 0 2 (use (reg/i:DI 0 ax)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/bits/stl_iterator_base_types.h:213 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void __static_initialization_and_destruction_0(int, int) (_Z41__static_initialization_and_destruction_0ii, funcdef_no=2299, decl_uid=43341, symbol_order=956)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 19.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best DIREG, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:18 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 19(l0): point = 1
   Insn 18(l0): point = 3
   Insn 17(l0): point = 5
   Insn 16(l0): point = 7
   Insn 15(l0): point = 9
   Insn 14(l0): point = 11
   Insn 13(l0): point = 13
   Insn 11(l0): point = 16
   Insn 10(l0): point = 18
   Insn 8(l0): point = 21
   Insn 7(l0): point = 23
   Insn 3(l0): point = 25
   Insn 2(l0): point = 27
 a0(r83): [4..5]
Compressing live ranges: from 30 to 2 - 6%
Ranges after the compression:
 a0(r83): [0..1]
  regions=1, blocks=6, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1
Disposition:
    0:r83  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void __static_initialization_and_destruction_0(int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={4d,1u} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,5u} r7={1d,7u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,4u} r17={4d,2u} r18={2d} r19={2d} r20={1d,9u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r83={1d,1u} 
;;    total ref usage 196{162d,34u,0e} in 13{11 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 __initialize_p+0 S4 A32])
        (reg:SI 5 di [ __initialize_p ])) Topology.cc:476 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ __initialize_p ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __priority+0 S4 A32])
        (reg:SI 4 si [ __priority ])) Topology.cc:476 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ __priority ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 __initialize_p+0 S4 A32])
            (const_int 1 [0x1]))) Topology.cc:476 7 {*cmpsi_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 22)
            (pc))) Topology.cc:476 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 22)
;;  succ:       3 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 __priority+0 S4 A32])
            (const_int 65535 [0xffff]))) Topology.cc:476 7 {*cmpsi_1}
     (nil))
(jump_insn 11 10 12 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 22)
            (pc))) Topology.cc:476 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 22)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x1c02]  <var_decl 0x103102d10 __ioinit>)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/iostream:74 89 {*movdi_internal}
     (nil))
(call_insn 14 13 15 4 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x102c61700 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/iostream:74 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 4 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__dso_handle") [flags 0x1042]  <var_decl 0x103f7b8e8 __dso_handle>)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/iostream:74 89 {*movdi_internal}
     (nil))
(insn 16 15 17 4 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x1c02]  <var_decl 0x103102d10 __ioinit>)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/iostream:74 89 {*movdi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:DI 83)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x102c61900 __comp_dtor >)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/iostream:74 89 {*movdi_internal}
     (nil))
(insn 18 17 19 4 (set (reg:DI 5 di)
        (reg:DI 83)) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/iostream:74 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x102c61900 __comp_dtor >)
            (nil))))
(call_insn 19 18 22 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x103f52d00 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) /usr/local/Cellar/gcc49/4.9.3/include/c++/4.9.3/iostream:74 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              2
;;              3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 22 19 23 5 359 "" [2 uses])
(note 23 22 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function (static initializers for Topology.cc) (_GLOBAL__sub_I_Topology.cc, funcdef_no=2300, decl_uid=43347, symbol_order=1075)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 7.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 7(l0): point = 0
   Insn 6(l0): point = 2
   Insn 5(l0): point = 4
Compressing live ranges: from 7 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


(static initializers for Topology.cc)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={3d,1u} r5={3d,1u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} 
;;    total ref usage 99{89d,10u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 4 si)
        (const_int 65535 [0xffff])) Topology.cc:476 90 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) Topology.cc:476 90 {*movsi_internal}
     (nil))
(call_insn 7 6 0 2 (call (mem:QI (symbol_ref:DI ("_Z41__static_initialization_and_destruction_0ii") [flags 0xc03]  <function_decl 0x103f52c00 __static_initialization_and_destruction_0>) [0 __static_initialization_and_destruction_0 S1 A8])
        (const_int 0 [0])) Topology.cc:476 642 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

